Script started on 2022-12-02 13:47:14-05:00 [TERM="xterm-256color" TTY="/dev/tty1" COLUMNS="96" LINES="34"]
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142[00m$ cd Ex-10
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ ls
[0m[01;32mTasks[0m  Tasks.cpp  films.txt
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sun Nov 27 07:40:25 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 61L, 1628C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[11;9Hifstream infile;[12;9Hinfile.open([31m"films.txt"[m);
        [38;5;130mif[m(infile.fail()){
                cout << [31m"Error with file"[m;[14;43H[K[15;11H      exit([31m1[m);[15;28H[K[16;9H}[16;10H[K[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[19;9H[K[20;1H        string x;[20;18H[K[21;9Hvector <vector<string>> data;[21;38H[K[22;7H  vector<string>column1,column2,column3,column4,column5,column6,column7,column8,column9,coo[23;1Hlumn10;
        data.insert(data.end(),{column1,column2,column3,column4,column5,column6,column7,column8,,[25;1Hcolumn9,column10});[25;20H[K[26;5H    [32mint[m sum=[31m0[m;[26;19H[K[27;1H        [32mdouble[m average;[27;25H[K[28;5H    [38;5;130mwhile[m(getline(infile,x)){[28;34H[K[29;5H            [38;5;130mfor[m([32mint[m i = [31m0[m;i<[31m10[m;i++){[29;41H[K[30;5H[K[31;5H                    string year,length,title,subject,actor,actress,director,popularity,awardd[32;1Hs,image;
                        getline(infile, year,[31m';'[m);[34;79H13,14-21      Top[13;21H[?25h[?25l[34;69Hi[13;21H[34;69H [13;21H[34;1H[1m-- INSERT --[m[34;13H[K[34;79H13,14-21      Top[13;21H[?25h[?25l[34;80H4,7-21 [14;21H[?25h[?25l[15;21H[106m([1C)[m[34;80H5[15;21H[?25h[?25l[13;26H[106m{[m[15;21H([1C)[16;9H[106m}[m[34;80H6,3-10[16;10H[?25h[?25l[13;26H{[16;9H}[34;80H7,14-21[17;21H[?25h[?25l[34;80H8[18;21H[?25h[?25l[34;80H9,2-9  [19;9H[?25h[?25l[34;79H20,11-18[20;18H[?25h[?25l[34;80H1,14-21[21;21H[?25h[?25l[34;80H2[22;21H[?25h[?25l[24;20H[106m([m[75C,,[25;1Hc[16C[106m)[m[34;80H3[24;21H[?25h[?25l([75C,,[25;1Hc[16C)[34;80H4,12-19[26;19H[?25h[?25l[34;80H5,14-21[27;21H[?25h[?25l[34;80H6[28;21H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn1.push_back(year);[34;79H[K[34;79H27,7-21[8C3%[28;20H[106m([18C)[28;21H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, length,[31m';'[m);[34;79H[K[34;79H28,1[11C6%[27;20H([18C)
[?25h[?25l[1;33r[1;1H[2M[1;34r[32;25Hcolumn2.push_back(length);[33;25H[38;5;130mif[m(!length.empty()){[34;79H[K[34;79H29,3-17[7C12%[27;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;33Hsum+=stoi(length);}[34;79H[K[34;79H30,3-17[7C16%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Haverage=sum/column2.size();[34;79H[K[34;79H31,3-17[7C19%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;79H[K[34;79H32,3-17[7C22%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;79H[K[34;79H33,3-17[7C25%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;79H[K[34;79H34,3-17[7C29%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;79H[K[34;79H35,3-17[7C32%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;79H[K[34;79H36,3-17[7C35%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;79H[K[34;79H37,3-17[7C38%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;79H[K[34;79H38,3-17[7C41%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;79H[K[34;79H39,3-17[7C45%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;79H[K[34;79H40,3-17[7C48%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;79H[K[34;79H41,3-17[7C51%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, popularity,[31m';'[m);[34;79H[K[34;79H42,3-17[7C54%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(popularity);[34;79H[K[34;79H43,3-17[7C58%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H44,3-17[7C61%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn9.push_back(awards);[34;79H[K[34;79H45,3-17[7C64%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H46,3-17[7C67%[28;17H[?25h[?25l[1;33r[1;1H[2M[1;34r[32;25Hcolumn10.push_back(image);[33;25H[38;5;130mif[m(!year.empty()){[34;79H[K[34;79H47,3-17[7C73%[27;17H[?25h[?25l[34;80H8[28;17H[?25h[?25l[1;33r[1;1H[2M[1;34r[32;33H[32mint[m decade=(stoi(year)-[31m1900[m)/[31m10[m;[33;33Hcout <<decade<<endl;[34;79H[K[34;79H49,3-17[7C79%[27;17H[?25h[?25l[34;79H50[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H}[34;79H[K[34;79H51,3-17[7C82%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H52,3-17[7C86%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H}[34;79H[K[34;79H53,3-17[7C89%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hcout<<sum<<[31m" "[m<<average<<endl;[34;79H[K[34;79H54,3-17[7C93%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H55,3-17[7C96%[28;17H[?25h[?25l[1;33r[1;1H[2M[1;34r[32;1H}
[94m~                                                                                               [m[34;79H[K[34;79H56,3-17[7CBot[27;17H[?25h[?25l[34;80H7,4-18[28;18H[?25h[?25l[34;80H8,3-10[29;10H[?25h[?25l[34;80H9,14-21[30;21H[?25h[?25l[34;79H60,2-9  [31;9H[?25h[?25l[34;80H1,2  [32;2H[?25h[?25l[34;80H0,2-9[31;9H[?25h[?25l[34;79H59,14-21[30;21H[?25h[?25l[34;80H8,3-10 [29;10H[?25h[?25l[34;80H7,4-18[28;18H[?25h[?25l[34;80H6,3-17[27;17H[?25h[?25l[34;80H5[26;17H[?25h[?25l[34;80H4[25;17H[?25h[?25l[34;80H3[24;17H[?25h[?25l[34;80H2[23;17H[?25h[?25l[34;80H1[22;17H[?25h[?25l[34;80H0[21;17H[?25h[?25l[34;79H49[20;17H[?25h[?25l[34;80H8[19;17H[?25h[?25l[34;80H7[18;17H[?25h[?25l[34;80H6[17;17H[?25h[?25l[34;80H5[16;17H[?25h[?25l[34;80H4[15;17H[?25h[?25l[34;80H3[14;17H[?25h[?25l[34;80H2[13;17H[?25h[?25l[34;80H1[12;17H[?25h[?25l[34;80H0[11;17H[?25h[?25l[34;79H39[10;17H[?25h[?25l[34;80H8[9;17H[?25h[?25l[34;80H7[8;17H[?25h[?25l[34;80H6[7;17H[?25h[?25l[34;80H5[6;17H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awardd[2;1Hs,image;[34;79H[K[34;79H34,3-17[7C96%[7;17H[?25h[?25l[34;80H3[6;17H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H32,3-17[7C93%[6;17H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17H[38;5;130mfor[m([32mint[m i = [31m0[m;i<[31m10[m;i++){[34;79H[K[34;79H31,3-17[7C89%[6;17H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(getline(infile,x)){[34;79H[K[34;79H30,3-17[7C86%[6;17H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9H[32mint[m sum=[31m0[m;[2;9H[32mdouble[m average;[34;79H[K[34;79H29,3-17[7C79%[6;17H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9Hdata.insert(data.end(),{column1,column2,column3,column4,column5,column6,column7,column8,,[2;1Hcolumn9,column10});[34;79H[K[34;79H28,1[10C73%[7;1H[?25h[?25l[34;80H9,3-17[8;17H[?25h[?25l[34;79H30[10;17H[?25h[?25l[34;80H1[11;17H[?25h[?25l[34;80H2[12;17H[?25h[?25l[34;80H3[13;17H[?25h[?25l[34;80H4[14;17H[?25h[?25l[34;80H5[15;17H[?25h[?25l[34;80H6[16;17H[?25h[?25l[34;82H4-25[16;25H[?25h[?25l[34;82H5-26[16;26H[?25h[?25l[34;82H6-27[16;27H[?25h[?25l[34;82H7-28[16;28H[?25h[?25l[34;82H8-29[16;29H[?25h[?25l[34;82H9-30[16;30H[?25h[?25l[34;82H10-31[16;31H[?25h[?25l[34;83H1-32[16;32H[?25h[?25l[34;83H2-33[16;33H[?25h[?25l[34;83H3-34[16;34H[?25h[?25l[34;83H4-35[16;35H[?25h[?25l[34;83H5-36[16;36H[?25h[?25l[34;83H6-37[16;37H[?25h[?25l[34;83H7-38[16;38H[?25h[?25l[34;83H8-39[16;39H[?25h[?25l[34;83H9-40[16;40H[?25h[?25l[34;82H20-41[16;41H[?25h[?25l[34;83H1-42[16;42H[?25h[?25l[34;83H2-43[16;43H[?25h[?25l[34;83H3-44[16;44H[?25h[?25l[34;83H4-45[16;45H[?25h[?25l[34;83H5-46[16;46H[?25h[?25l[34;83H6-47[16;47H[?25h[?25l[34;83H7-48[16;48H[?25h[?25le[106m()[m[34;83H8-49[16;49H[?25h[?25l[34;83H9-50[16;50H[?25h[?25l[34;82H30-51[16;51H[?25h[?25l()[34;83H1-52[16;52H[?25h[?25l[16;51H[K[16;49H[106m()[m[34;83H0-51[16;51H[?25h[?25l[16;50H[K[16;49H([34;82H29-50[16;50H[?25h[?25l[16;49H[K[34;83H8-49[16;49H[?25h[?25l[16;48H[K[34;83H7-48[16;48H[?25h[?25l[16;47H[K[34;83H6-47[16;47H[?25h[?25l[16;46H[K[34;83H5-46[16;46H[?25h[?25l[16;45H[K[34;83H4-45[16;45H[?25h[?25l[16;44H[K[34;83H3-44[16;44H[?25h[?25l[16;43H[K[34;83H2-43[16;43H[?25h[?25l[16;42H[K[34;83H1-42[16;42H[?25h[?25l[16;41H[K[34;83H0-41[16;41H[?25h[?25l[16;40H[K[34;82H19-40[16;40H[?25h[?25l[16;39H[K[34;83H8-39[16;39H[?25h[?25l[16;38H[K[34;83H7-38[16;38H[?25h[?25l[16;37H[K[34;83H6-37[16;37H[?25h[?25l[16;36H[K[34;83H5-36[16;36H[?25h[?25l[16;35H[K[34;83H4-35[16;35H[?25h[?25l[16;34H[K[34;83H3-34[16;34H[?25h[?25l[16;33H[K[34;83H2-33[16;33H[?25h[?25l[16;32H[K[34;83H1-32[16;32H[?25h[?25l[16;31H[K[34;83H0-31[16;31H[?25h[?25l[16;30H[K[34;82H9-30 [16;30H[?25h[?25l[16;29H[K[34;82H8-29[16;29H[?25h[?25l[16;28H[K[34;82H7-28[16;28H[?25h[?25l[16;27H[K[34;82H6-27[16;27H[?25h[?25l[16;26H[K[34;82H5-26[16;26H[?25h[?25l[16;25H[K[34;82H4-25[16;25H[?25h[?25l[34;82H3-17[16;17H[?25h[?25l[34;82H2-9 [16;9H[?25h[?25l[34;82H1  [16;1H[?25h[?25l[15;33r[33;1H
[1;34r[15;33Hsum+=stoi(length);}[33;33H[32mint[m decade=(stoi(year)-[31m1900[m)/[31m10[m;[34;79H[K[34;79H35,24-52      75%[14;44H[106m{[15;51H}[?25h[?25l[m[15;51H[K[14;44H{[34;83H3-51[15;51H[?25h[?25l[15;50H[K[15;42H[106m([mlength[106m)[m[34;83H2-50[15;50H[?25h[?25l[15;49H[K[15;42H([34;83H1-49[15;49H[?25h[?25l[15;48H[K[34;83H0-48[15;48H[?25h[?25l[15;47H[K[34;82H19-47[15;47H[?25h[?25l[15;46H[K[34;83H8-46[15;46H[?25h[?25l[15;45H[K[34;83H7-45[15;45H[?25h[?25l[15;44H[K[34;83H6-44[15;44H[?25h[?25l[15;43H[K[34;83H5-43[15;43H[?25h[?25l[15;42H[K[34;83H4-42[15;42H[?25h[?25l[15;41H[K[34;83H3-41[15;41H[?25h[?25l[15;40H[K[34;83H2-40[15;40H[?25h[?25l[15;39H[K[34;83H1-39[15;39H[?25h[?25l[15;38H[K[34;83H0-38[15;38H[?25h[?25l[15;37H[K[34;82H9-37 [15;37H[?25h[?25l[15;36H[K[34;82H8-36[15;36H[?25h[?25l[15;35H[K[34;82H7-35[15;35H[?25h[?25l[15;34H[K[34;82H6-34[15;34H[?25h[?25l[15;33H[K[34;82H5-33[15;33H[?25h[?25l[34;82H4-25[15;25H[?25h[?25l[34;82H3-17[15;17H[?25h[?25l[34;82H2-9 [15;9H[?25h[?25l[34;82H1  [15;1H[?25h[?25l[14;33r[33;1H
[1;34r[14;25H[38;5;130mif[m(!length.empty()){[33;33Hcout <<decade<<endl;[34;79H[K[34;79H34,24-45      78%[14;45H[?25h[?25l[14;44H[K[14;27H[106m([15C)[m[34;83H3-44[14;44H[?25h[?25l[14;43H[K[14;27H([13C[106m()[m[34;83H2-43[14;43H[?25h[?25l[14;42H[K[14;41H([34;83H1-42[14;42H[?25h[?25l[14;41H[K[34;83H0-41[14;41H[?25h[?25l[14;40H[K[34;82H19-40[14;40H[?25h[?25l[14;39H[K[34;83H8-39[14;39H[?25h[?25l[14;38H[K[34;83H7-38[14;38H[?25h[?25l[14;37H[K[34;83H6-37[14;37H[?25h[?25l[14;36H[K[34;83H5-36[14;36H[?25h[?25l[14;35H[K[34;83H4-35[14;35H[?25h[?25l[14;34H[K[34;83H3-34[14;34H[?25h[?25l[14;33H[K[34;83H2-33[14;33H[?25h[?25l[14;32H[K[34;83H1-32[14;32H[?25h[?25l[14;31H[K[34;83H0-31[14;31H[?25h[?25l[14;30H[K[34;82H9-30 [14;30H[?25h[?25l[14;29H[K[34;82H8-29[14;29H[?25h[?25l[14;28H[K[34;82H7-28[14;28H[?25h[?25l[14;27H[K[34;82H6-27[14;27H[?25h[?25li[14;26H[K[34;82H5-26[14;26H[?25h[?25l[14;25H[K[34;82H4-25[14;25H[?25h[?25l[34;82H3-17[14;17H[?25h[?25l[34;82H2-9 [14;9H[?25h[?25l[34;82H1  [14;1H[?25h[?25l[34;80H3[13;1H[?25h[?25l[34;80H2[12;1H[?25h[?25l[34;80H1[11;1H[?25h[?25l[34;80H0[10;1H[?25h[?25l[34;79H29[8;1H[?25h[?25l[34;80H8[7;1H[?25h[?25l[34;80H7[6;1H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9Hvector<string>column1,column2,column3,column4,column5,column6,column7,column8,column9,coo[2;1Hlumn10;[34;79H[K[34;79H26,1[10C72%[7;1H[?25h[?25l[34;80H5[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <vector<string>> data;[34;79H[K[34;79H24,1[10C68%[6;1H[?25h[?25l[1;33r[1;1H[2L[1;34r[2;9Hstring x;[34;79H[K[34;79H23,1[10C62%[6;1H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[2;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H22,1[10C55%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;79H[K[34;79H21,1[10C51%[6;1H[?25h[?25l[34;80H2[7;1H[?25h[?25l[34;80H3[9;1H[?25h[?25l[34;80H2[7;1H[?25h[?25l[34;80H3[9;1H[?25h[?25l[34;80H4[11;1H[?25h[?25l[34;82H2-9[11;9H[?25h[?25l[34;82H3-10[11;10H[?25h[?25l[34;82H4-11[11;11H[?25h[?25l[34;82H5-12[11;12H[?25h[?25l[34;82H6-13[11;13H[?25h[?25l[34;80H3[9;13H[?25h[?25l[34;82H7-14[9;14H[?25h[?25l[34;82H8-15[9;15H[?25h[?25l[34;80H4[11;15H[?25h[?25l[34;82H9-16[11;16H[?25h[?25l[34;82H10-17[11;17H[?25h[?25l[34;80H3[9;17H[?25h[?25l[34;83H1-18[9;18H[?25h[?25l[34;83H2-19[9;19H[?25h[?25l[34;80H4[11;19H[?25h[?25l[34;80H3[9;19H[?25h[?25lt[106m([m[75C,,[10;1Hc[16C[106m)[m[34;83H3-20[9;20H[?25h[?25l([75C,,[10;1Hc[16C)[34;80H4,12-19[11;19H[?25h[?25l[9;20H[106m([m[75C,,[10;1Hc[16C[106m)[m[34;80H3,13-20[9;20H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,cc[10;1Holumn9,column10})[106m;[m[10;19H[K[9;19H[106m([md[75Ccc[10;1Ho[15C[106m)[m;[34;83H2-19[9;19H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,coo[10;1Hlumn9,column10})[106m;[m[10;18H[K[9;18H[106m([md[76Coo[10;1Hl[14C[106m)[m;[34;83H1-18[9;18H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,coll[10;1Humn9,column10})[106m;[m[10;17H[K[9;17H[106m([md[77Cll[10;1Hu[13C[106m)[m;[34;83H0-17[9;17H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,coluu[10;1Hmn9,column10})[106m;[m[10;16H[K[9;16H[106m([md[78Cuu[10;1Hm[12C[106m)[m;[34;82H9-16 [9;16H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,columm[10;1Hn9,column10})[106m;[m[10;15H[K[9;15H[106m([md[79Cmm[10;1Hn[11C[106m)[m;[34;82H8-15[9;15H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,columnn[10;1H9,column10})[106m;[m[10;14H[K[9;14H[106m([md[80Cnn[10;1H9[10C[106m)[m;[34;82H7-14[9;14H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column99[10;1H,column10})[106m;[m[10;13H[K[9;13H[106m([md[81C99[10;1H,[9C[106m)[m;[34;82H6-13[9;13H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,,[10;1Hcolumn10})[106m;[m[10;12H[K[9;12H[106m([md[82C,,[10;1Hc[8C[106m)[m;[34;82H5-12[9;12H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,cc[10;1Holumn10})[106m;[m[10;11H[K[9;11H[106m([md[83Ccc[10;1Ho[7C[106m)[m;[34;82H4-11[9;11H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,coo[10;1Hlumn10})[106m;[m[10;10H[K[9;10H[106m([md[84Coo[10;1Hlumn10}[106m)[m;[34;82H3-10[9;10H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,coll[10;1Humn10})[106m;[m[10;9H[K[9;9H[106m([md[85Cll[10;1Humn10}[106m)[m;[34;82H2-9 [9;9H[?25h[?25l[9;33r[33;1H
[1;34r[9;1H([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[33;25Hcolumn8.push_back(popularity);[34;79H[K[34;79H23,1[10C53%[9;1H[106m([md[92C[106m)[m;[9;1H[?25h[?25l[8;8H(data.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,coluu[9;1Hmn10});[9;8H[K[10;1H[106m        [8;8H([m[87Cuu[9;1Hmn10}[106m)[m
        [34;80H2,97-104[8;8H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,columm[9;1Hn10})[106m;[m[9;7H[K[8;7H[106m([md[87Cmm[9;1Hn10}[106m)[m;[34;83H6-103[8;7H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,columnn[9;1H10})[106m;[m[9;6H[K[8;6H[106m([md[88Cnn[9;1H10}[106m)[m;[34;83H5-102[8;6H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column11[9;1H0})[106m;[m[9;5H[K[8;5H[106m([md[89C11[9;1H0}[106m)[m;[34;83H4-101[8;5H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column100[9;1H})[106m;[m[9;4H[K[8;4H[106m([md[90C00[9;1H}[106m)[m;[34;83H3-100[8;4H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10}}[9;1H)[106m;[m[9;3H[K[8;3H[106m([md[91C}}[9;1H[106m)[m;[34;83H2-99 [8;3H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10}))[9;1H[106m;[m[9;2H[K[8;2H[106m([md[92C[106m))[m[9;1H;[34;83H1-98[8;2H[?25h[?25l[7;33r[33;1H
[1;34r[7;1H        vector<string>column1[7C2[7C3[7C4[7C5[7C6[7C7[7C8[7C9,coo[8;1H([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H22,90-97      55%[8;1H[106m([md[92C[106m)[m;[8;1H[?25h[?25l[7;96H(([8;1H[106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;96H[K[7;96H[106m(([m[8;1Hd[92C[106m)[m;[34;82H89-96[7;96H[?25h[?25l([106mdd[m[8;1Hata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;95H[K[7;95H[106m([mdd[8;1Ha[91C[106m)[m;[34;83H8-95[7;95H[?25h[?25l([106md[maa[8;1Hta.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;94H[K[7;94H[106m([mdaa[8;1Ht[90C[106m)[m;[34;83H7-94[7;94H[?25h[?25l([106md[matt[8;1Ha.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;93H[K[7;93H[106m([mdatt[8;1Ha[89C[106m)[m;[34;83H6-93[7;93H[?25h[?25l([106md[mataa[8;1H.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;92H[K[7;92H[106m([mdataa[8;1H.[88C[106m)[m;[34;83H5-92[7;92H[?25h[?25l([106md[mata..[8;1Hend(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;91H[K[7;91H[106m([mdata..[8;1He[87C[106m)[m;[34;83H4-91[7;91H[?25h[?25l([106md[mata.ee[8;1Hnd(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;90H[K[7;90H[106m([mdata.ee[8;1Hn[86C[106m)[m;[34;83H3-90[7;90H[?25h[?25l([106md[mata.enn[8;1Hd(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;89H[K[7;89H[106m([mdata.enn[8;1Hd[85C[106m)[m;[34;83H2-89[7;89H[?25h[?25l([106md[mata.endd[8;1H(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;88H[K[7;88H[106m([mdata.endd[8;1H([84C[106m)[m;[34;83H1-88[7;88H[?25h[?25l([106md[mata.end(([8;1H),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;87H[K[7;87H[106m([md[7C(([8;1H)[83C[106m)[m;[34;83H0-87[7;87H[?25h[?25l([106md[mata.end())[8;1H,{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;86H[K[7;86H[106m([md[8C))[8;1H,[82C[106m)[m;[34;82H79-86[7;86H[?25h[?25l([106md[mata.end(),,[8;1H{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;85H[K[7;85H[106m([md[9C,,[8;1H{[81C[106m)[m;[34;83H8-85[7;85H[?25h[?25l([106md[mata.end(),{{[8;1Hcolumn1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;84H[K[7;84H[106m([md[10C{{[8;1Hc[80C[106m)[m;[34;83H7-84[7;84H[?25h[?25l([106md[mata.end(),{cc[8;1Holumn1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;83H[K[7;83H[106m([md[11Ccc[8;1Ho[79C[106m)[m;[34;83H6-83[7;83H[?25h[?25l([106md[mata.end(),{coo[8;1Hlumn1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;82H[K[7;82H[106m([md[12Coo[8;1Hl[78C[106m)[m;[34;83H5-82[7;82H[?25h[?25l([106md[mata.end(),{coll[8;1Humn1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;81H[K[7;81H[106m([md[13Cll[8;1Hu[77C[106m)[m;[34;83H4-81[7;81H[?25h[?25l([106md[mata.end(),{coluu[8;1Hmn1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;80H[K[7;80H[106m([md[14Cuu[8;1Hm[76C[106m)[m;[34;83H3-80[7;80H[?25h[?25l([106md[mata.end(),{columm[8;1Hn1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;79H[K[7;79H[106m([md[15Cmm[8;1Hn[75C[106m)[m;[34;83H2-79[7;79H[?25h[?25l([106md[mata.end(),{columnn[8;1H1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;78H[K[7;78H[106m([md[16Cnn[8;1H1[74C[106m)[m;[34;83H1-78[7;78H[?25h[?25l([106md[mata.end(),{column11[8;1H,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;77H[K[7;77H[106m([md[17C11[8;1H,[73C[106m)[m;[34;83H0-77[7;77H[?25h[?25l([106md[mata.end(),{column1,,[8;1Hcolumn2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;76H[K[7;76H[106m([md[18C,,[8;1Hc[72C[106m)[m;[34;82H69-76[7;76H[?25h[?25l([106md[mata.end(),{column1,cc[8;1Holumn2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;75H[K[7;75H[106m([md[19Ccc[8;1Ho[71C[106m)[m;[34;83H8-75[7;75H[?25h[?25l([106md[mata.end(),{column1,coo[8;1Hlumn2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;74H[K[7;74H[106m([md[20Coo[8;1Hl[70C[106m)[m;[34;83H7-74[7;74H[?25h[?25l([106md[mata.end(),{column1,coll[8;1Humn2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;73H[K[7;73H[106m([md[21Cll[8;1Hu[69C[106m)[m;[34;83H6-73[7;73H[?25h[?25l([106md[mata.end(),{column1,coluu[8;1Hmn2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;72H[K[7;72H[106m([md[22Cuu[8;1Hm[68C[106m)[m;[34;83H5-72[7;72H[?25h[?25l([106md[mata.end(),{column1,columm[8;1Hn2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;71H[K[7;71H[106m([md[23Cmm[8;1Hn[67C[106m)[m;[34;83H4-71[7;71H[?25h[?25l([106md[mata.end(),{column1,columnn[8;1H2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;70H[K[7;70H[106m([md[24Cnn[8;1H2[66C[106m)[m;[34;83H3-70[7;70H[?25h[?25l([106md[mata.end(),{column1,column22[8;1H,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;69H[K[7;69H[106m([md[25C22[8;1H,[65C[106m)[m;[34;83H2-69[7;69H[?25h[?25l([106md[mata.end(),{column1,column2,,[8;1Hcolumn3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;68H[K[7;68H[106m([md[26C,,[8;1Hc[64C[106m)[m;[34;83H1-68[7;68H[?25h[?25l([106md[mata.end(),{column1,column2,cc[8;1Holumn3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;67H[K[7;67H[106m([md[27Ccc[8;1Ho[63C[106m)[m;[34;83H0-67[7;67H[?25h[?25l([106md[mata.end(),{column1,column2,coo[8;1Hlumn3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;66H[K[7;66H[106m([md[28Coo[8;1Hl[62C[106m)[m;[34;82H59-66[7;66H[?25h[?25l([106md[mata.end(),{column1,column2,coll[8;1Humn3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;65H[K[7;65H[106m([md[29Cll[8;1Hu[61C[106m)[m;[34;83H8-65[7;65H[?25h[?25l([106md[mata.end(),{column1,column2,coluu[8;1Hmn3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;64H[K[7;64H[106m([md[30Cuu[8;1Hm[60C[106m)[m;[34;83H7-64[7;64H[?25h[?25l([106md[mata.end(),{column1,column2,columm[8;1Hn3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;63H[K[7;63H[106m([md[31Cmm[8;1Hn[59C[106m)[m;[34;83H6-63[7;63H[?25h[?25l([106md[mata.end(),{column1,column2,columnn[8;1H3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;62H[K[7;62H[106m([md[32Cnn[8;1H3[58C[106m)[m;[34;83H5-62[7;62H[?25h[?25l([106md[mata.end(),{column1,column2,column33[8;1H,column4,column5,column6,column7,column8,column9,column10})[106m;[m[8;61H[K[7;61H[106m([md[33C33[8;1H,[57C[106m)[m;[34;83H4-61[7;61H[?25h[?25l([106md[mata.end(),{column1,column2,column3,,[8;1Hcolumn4,column5,column6,column7,column8,column9,column10})[106m;[m[8;60H[K[7;60H[106m([md[34C,,[8;1Hc[56C[106m)[m;[34;83H3-60[7;60H[?25h[?25l([106md[mata.end(),{column1,column2,column3,cc[8;1Holumn4,column5,column6,column7,column8,column9,column10})[106m;[m[8;59H[K[7;59H[106m([md[35Ccc[8;1Ho[55C[106m)[m;[34;83H2-59[7;59H[?25h[?25l([106md[mata.end(),{column1,column2,column3,coo[8;1Hlumn4,column5,column6,column7,column8,column9,column10})[106m;[m[8;58H[K[7;58H[106m([md[36Coo[8;1Hl[54C[106m)[m;[34;83H1-58[7;58H[?25h[?25l([106md[mata.end(),{column1,column2,column3,coll[8;1Humn4,column5,column6,column7,column8,column9,column10})[106m;[m[8;57H[K[7;57H[106m([md[37Cll[8;1Hu[53C[106m)[m;[34;83H0-57[7;57H[?25h[?25l([106md[mata.end(),{column1,column2,column3,coluu[8;1Hmn4,column5,column6,column7,column8,column9,column10})[106m;[m[8;56H[K[7;56H[106m([md[38Cuu[8;1Hm[52C[106m)[m;[34;82H49-56[7;56H[?25h[?25l([106md[mata.end(),{column1,column2,column3,columm[8;1Hn4,column5,column6,column7,column8,column9,column10})[106m;[m[8;55H[K[7;55H[106m([md[39Cmm[8;1Hn[51C[106m)[m;[34;83H8-55[7;55H[?25h[?25l([106md[mata.end(),{column1,column2,column3,columnn[8;1H4,column5,column6,column7,column8,column9,column10})[106m;[m[8;54H[K[7;54H[106m([md[40Cnn[8;1H4[50C[106m)[m;[34;83H7-54[7;54H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column44[8;1H,column5,column6,column7,column8,column9,column10})[106m;[m[8;53H[K[7;53H[106m([md[41C44[8;1H,[49C[106m)[m;[34;83H6-53[7;53H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,,[8;1Hcolumn5,column6,column7,column8,column9,column10})[106m;[m[8;52H[K[7;52H[106m([md[42C,,[8;1Hc[48C[106m)[m;[34;83H5-52[7;52H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,cc[8;1Holumn5,column6,column7,column8,column9,column10})[106m;[m[8;51H[K[7;51H[106m([md[43Ccc[8;1Ho[47C[106m)[m;[34;83H4-51[7;51H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,coo[8;1Hlumn5,column6,column7,column8,column9,column10})[106m;[m[8;50H[K[7;50H[106m([md[44Coo[8;1Hl[46C[106m)[m;[34;83H3-50[7;50H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,coll[8;1Humn5,column6,column7,column8,column9,column10})[106m;[m[8;49H[K[7;49H[106m([md[45Cll[8;1Hu[45C[106m)[m;[34;83H2-49[7;49H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,coluu[8;1Hmn5,column6,column7,column8,column9,column10})[106m;[m[8;48H[K[7;48H[106m([md[46Cuu[8;1Hm[44C[106m)[m;[34;83H1-48[7;48H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,columm[8;1Hn5,column6,column7,column8,column9,column10})[106m;[m[8;47H[K[7;47H[106m([md[47Cmm[8;1Hn[43C[106m)[m;[34;83H0-47[7;47H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,columnn[8;1H5,column6,column7,column8,column9,column10})[106m;[m[8;46H[K[7;46H[106m([md[48Cnn[8;1H5[42C[106m)[m;[34;82H39-46[7;46H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column55[8;1H,column6,column7,column8,column9,column10})[106m;[m[8;45H[K[7;45H[106m([md[49C55[8;1H,[41C[106m)[m;[34;83H8-45[7;45H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,,[8;1Hcolumn6,column7,column8,column9,column10})[106m;[m[8;44H[K[7;44H[106m([md[50C,,[8;1Hc[40C[106m)[m;[34;83H7-44[7;44H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,cc[8;1Holumn6,column7,column8,column9,column10})[106m;[m[8;43H[K[7;43H[106m([md[51Ccc[8;1Ho[39C[106m)[m;[34;83H6-43[7;43H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,coo[8;1Hlumn6,column7,column8,column9,column10})[106m;[m[8;42H[K[7;42H[106m([md[52Coo[8;1Hl[38C[106m)[m;[34;83H5-42[7;42H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,coll[8;1Humn6,column7,column8,column9,column10})[106m;[m[8;41H[K[7;41H[106m([md[53Cll[8;1Hu[37C[106m)[m;[34;83H4-41[7;41H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,coluu[8;1Hmn6,column7,column8,column9,column10})[106m;[m[8;40H[K[7;40H[106m([md[54Cuu[8;1Hm[36C[106m)[m;[34;83H3-40[7;40H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,columm[8;1Hn6,column7,column8,column9,column10})[106m;[m[8;39H[K[7;39H[106m([md[55Cmm[8;1Hn[35C[106m)[m;[34;83H2-39[7;39H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,columnn[8;1H6,column7,column8,column9,column10})[106m;[m[8;38H[K[7;38H[106m([md[56Cnn[8;1H6[34C[106m)[m;[34;83H1-38[7;38H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column66[8;1H,column7,column8,column9,column10})[106m;[m[8;37H[K[7;37H[106m([md[57C66[8;1H,[33C[106m)[m;[34;83H0-37[7;37H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,,[8;1Hcolumn7,column8,column9,column10})[106m;[m[8;36H[K[7;36H[106m([md[58C,,[8;1Hc[32C[106m)[m;[34;82H29-36[7;36H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,cc[8;1Holumn7,column8,column9,column10})[106m;[m[8;35H[K[7;35H[106m([md[59Ccc[8;1Ho[31C[106m)[m;[34;83H8-35[7;35H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,coo[8;1Hlumn7,column8,column9,column10})[106m;[m[8;34H[K[7;34H[106m([md[60Coo[8;1Hl[30C[106m)[m;[34;83H7-34[7;34H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,coll[8;1Humn7,column8,column9,column10})[106m;[m[8;33H[K[7;33H[106m([md[61Cll[8;1Hu[29C[106m)[m;[34;83H6-33[7;33H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,coluu[8;1Hmn7,column8,column9,column10})[106m;[m[8;32H[K[7;32H[106m([md[62Cuu[8;1Hm[28C[106m)[m;[34;83H5-32[7;32H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,columm[8;1Hn7,column8,column9,column10})[106m;[m[8;31H[K[7;31H[106m([md[63Cmm[8;1Hn[27C[106m)[m;[34;83H4-31[7;31H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,columnn[8;1H7,column8,column9,column10})[106m;[m[8;30H[K[7;30H[106m([md[64Cnn[8;1H7[26C[106m)[m;[34;83H3-30[7;30H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column77[8;1H,column8,column9,column10})[106m;[m[8;29H[K[7;29H[106m([md[65C77[8;1H,[25C[106m)[m;[34;83H2-29[7;29H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,,[8;1Hcolumn8,column9,column10})[106m;[m[8;28H[K[7;28H[106m([md[66C,,[8;1Hc[24C[106m)[m;[34;83H1-28[7;28H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,cc[8;1Holumn8,column9,column10})[106m;[m[8;27H[K[7;27H[106m([md[67Ccc[8;1Ho[23C[106m)[m;[34;83H0-27[7;27H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,coo[8;1Hlumn8,column9,column10})[106m;[m[8;26H[K[7;26H[106m([md[68Coo[8;1Hl[22C[106m)[m;[34;82H19-26[7;26H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,coll[8;1Humn8,column9,column10})[106m;[m[8;25H[K[7;25H[106m([md[69Cll[8;1Hu[21C[106m)[m;[34;83H8-25[7;25H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,coluu[8;1Hmn8,column9,column10})[106m;[m[8;24H[K[7;24H[106m([md[70Cuu[8;1Hm[20C[106m)[m;[34;83H7-24[7;24H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,columm[8;1Hn8,column9,column10})[106m;[m[8;23H[K[7;23H[106m([md[71Cmm[8;1Hn[19C[106m)[m;[34;83H6-23[7;23H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,columnn[8;1H8,column9,column10})[106m;[m[8;22H[K[7;22H[106m([md[72Cnn[8;1H8[18C[106m)[m;[34;83H5-22[7;22H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,column6,column7,coluu[8;1Hmn8,column9,column10[106m}[m);[7;22H[34m^Z[m[106m([m[71Cuu[8;1Hm[19C}[106m)[m[34;83H6-24[7;24H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,column6,column7,coo[8;1Hlumn8,column9,column10[106m}[m);[7;24H[34m^Z[m[106m([m[69Coo[8;1Hl[21C}[106m)[m[34;83H7-26[7;26H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,column6,column7,,[8;1Hcolumn8,column9,column10[106m}[m);[7;26H[34m^Z[m[106m([m[67C,,[8;1Hc[23C}[106m)[m[34;83H8-28[7;28H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,column6,columnn[8;1H7,column8,column9,column10[106m}[m);[7;28H[34m^Z[m[106m([m[65Cnn[8;1H7[25C}[106m)[m[34;83H9-30[7;30H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,column6,coluu[8;1Hmn7,column8,column9,column10[106m}[m);[7;30H[34m^Z[m[106m([m[63Cuu[8;1Hm[27C}[106m)[m[34;82H20-32[7;32H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,column6,coo[8;1Hlumn7,column8,column9,column10[106m}[m);[7;32H[34m^Z[m[106m([m[61Coo[8;1Hl[29C}[106m)[m[34;83H1-34[7;34H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,column6,,[8;1Hcolumn7,column8,column9,column10[106m}[m);[7;34H[34m^Z[m[106m([m[59C,,[8;1Hc[31C}[106m)[m[34;83H2-36[7;36H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,columnn[8;1H6,column7,column8,column9,column10[106m}[m);[7;36H[34m^Z[m[106m([m[57Cnn[8;1H6[33C}[106m)[m[34;83H3-38[7;38H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,coluu[8;1Hmn6,column7,column8,column9,column10[106m}[m);[7;38H[34m^Z[m[106m([m[55Cuu[8;1Hm[35C}[106m)[m[34;83H4-40[7;40H[?25h[?25l[106m^Z[m(data.end(),{column1,column2,column3,column4,column5,coo[8;1Hlumn6,column7,column8,column9,column10[106m}[m);[7;40H[34m^Z[m[106m([m[53Coo[8;1Hl[37C}[106m)[m[34;83H5-42[7;42H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,coluu[8;1Hmn6,column7,column8,column9,column10})[106m;[m[8;40H[K[7;40H[106m([md[54Cuu[8;1Hm[36C[106m)[m;[34;83H4-40[7;40H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,columnn[8;1H6,column7,column8,column9,column10})[106m;[m[8;38H[K[7;38H[106m([md[56Cnn[8;1H6[34C[106m)[m;[34;83H3-38[7;38H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,,[8;1Hcolumn7,column8,column9,column10})[106m;[m[8;36H[K[7;36H[106m([md[58C,,[8;1Hc[32C[106m)[m;[34;83H2-36[7;36H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,coo[8;1Hlumn7,column8,column9,column10})[106m;[m[8;34H[K[7;34H[106m([md[60Coo[8;1Hl[30C[106m)[m;[34;83H1-34[7;34H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,coluu[8;1Hmn7,column8,column9,column10})[106m;[m[8;32H[K[7;32H[106m([md[62Cuu[8;1Hm[28C[106m)[m;[34;83H0-32[7;32H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,columnn[8;1H7,column8,column9,column10})[106m;[m[8;30H[K[7;30H[106m([md[64Cnn[8;1H7[26C[106m)[m;[34;82H19-30[7;30H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,,[8;1Hcolumn8,column9,column10})[106m;[m[8;28H[K[7;28H[106m([md[66C,,[8;1Hc[24C[106m)[m;[34;83H8-28[7;28H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,coo[8;1Hlumn8,column9,column10})[106m;[m[8;26H[K[7;26H[106m([md[68Coo[8;1Hl[22C[106m)[m;[34;83H7-26[7;26H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,coluu[8;1Hmn8,column9,column10})[106m;[m[8;24H[K[7;24H[106m([md[70Cuu[8;1Hm[20C[106m)[m;[34;83H6-24[7;24H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,columnn[8;1H8,column9,column10})[106m;[m[8;22H[K[7;22H[106m([md[72Cnn[8;1H8[18C[106m)[m;[34;83H5-22[7;22H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column88[8;1H,column9,column10})[106m;[m[8;21H[K[7;21H[106m([md[73C88[8;1H,[17C[106m)[m;[34;83H4-21[7;21H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,,[8;1Hcolumn9,column10})[106m;[m[8;20H[K[7;20H[106m([md[74C,,[8;1Hc[16C[106m)[m;[34;83H3-20[7;20H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,cc[8;1Holumn9,column10})[106m;[m[8;19H[K[7;19H[106m([md[75Ccc[8;1Ho[15C[106m)[m;[34;83H2-19[7;19H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,coo[8;1Hlumn9,column10})[106m;[m[8;18H[K[7;18H[106m([md[76Coo[8;1Hl[14C[106m)[m;[34;83H1-18[7;18H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,coll[8;1Humn9,column10})[106m;[m[8;17H[K[7;17H[106m([md[77Cll[8;1Hu[13C[106m)[m;[34;83H0-17[7;17H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,coluu[8;1Hmn9,column10})[106m;[m[8;16H[K[7;16H[106m([md[78Cuu[8;1Hm[12C[106m)[m;[34;82H9-16 [7;16H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,columm[8;1Hn9,column10})[106m;[m[8;15H[K[7;15H[106m([md[79Cmm[8;1Hn[11C[106m)[m;[34;82H8-15[7;15H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,columnn[8;1H9,column10})[106m;[m[8;14H[K[7;14H[106m([md[80Cnn[8;1H9[10C[106m)[m;[34;82H7-14[7;14H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column99[8;1H,column10})[106m;[m[8;13H[K[7;13H[106m([md[81C99[8;1H,[9C[106m)[m;[34;82H6-13[7;13H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,,[8;1Hcolumn10})[106m;[m[8;12H[K[7;12H[106m([md[82C,,[8;1Hc[8C[106m)[m;[34;82H5-12[7;12H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,cc[8;1Holumn10})[106m;[m[8;11H[K[7;11H[106m([md[83Ccc[8;1Ho[7C[106m)[m;[34;82H4-11[7;11H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,coo[8;1Hlumn10})[106m;[m[8;10H[K[7;10H[106m([md[84Coo[8;1Hlumn10}[106m)[m;[34;82H3-10[7;10H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,coll[8;1Humn10})[106m;[m[8;9H[K[7;9H[106m([md[85Cll[8;1Humn10}[106m)[m;[34;82H2-9 [7;9H[?25h[?25l[7;33r[33;1H
[1;34r[7;1H([106md[mata.end(),{column1,column2,column3,column4,column5,column6,column7,column8,column9,column10})[106m;[m[33;25Hcolumn9.push_back(awards);[34;79H[K[34;79H22,1[10C57%[7;1H[106m([md[92C[106m)[m;[7;1H[?25h[?25l[6;38H(data.end(),{column1,column2,column3,column4,column5,columnn[7;1H6,column7,column8,column9,column10});[7;38H[K[8;1H[106m        [6;38H([m[57Cnn[7;1H6[34C[106m)[m
        [34;80H1,31-38[6;38H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column66[7;1H,column7,column8,column9,column10})[106m;[m[7;37H[K[6;37H[106m([md[57C66[7;1H,[33C[106m)[m;[34;83H0-37[6;37H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,,[7;1Hcolumn7,column8,column9,column10})[106m;[m[7;36H[K[6;36H[106m([md[58C,,[7;1Hc[32C[106m)[m;[34;82H29-36[6;36H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,cc[7;1Holumn7,column8,column9,column10})[106m;[m[7;35H[K[6;35H[106m([md[59Ccc[7;1Ho[31C[106m)[m;[34;83H8-35[6;35H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,coo[7;1Hlumn7,column8,column9,column10})[106m;[m[7;34H[K[6;34H[106m([md[60Coo[7;1Hl[30C[106m)[m;[34;83H7-34[6;34H[?25h[?25l([106md[mata.end(),{column1,column2,column3,column4,column5,column6,coll[7;1Humn7,column8,column9,column10})[106m;[m[7;33H[K[6;33H[106m([md[61Cll[7;1Hu[29C[106m)[m;[34;83H6-33[6;33H[?25h[?25l([62Cll[7;1Hu[29C)[34;83H5-32[6;32H[?25h[?25l[34;83H4-31[6;31H[?25h[?25l[34;83H3-30[6;30H[?25h[?25l[34;83H2-29[6;29H[?25h[?25l[34;83H1-28[6;28H[?25h[?25l[34;83H0-27[6;27H[?25h[?25l[34;82H19-26[6;26H[?25h[?25l[34;83H8-25[6;25H[?25h[?25l[34;83H7-24[6;24H[?25h[?25l[34;83H6-23[6;23H[?25h[?25l[34;83H5-22[6;22H[?25h[?25l[34;83H4-21[6;21H[?25h[?25l[34;83H3-20[6;20H[?25h[?25l[34;83H2-19[6;19H[?25h[?25l[34;83H1-18[6;18H[?25h[?25l[34;83H0-17[6;17H[?25h[?25lvector<string>> (data.end(),{column1,column2,column3,column4,column5,column6,coluu[7;1Hmn7,column8,column9,column10});[7;32H[K[34;82H9-16 [6;16H[?25h[?25lvector<string>> (data.end(),{column1,column2,column3,column4,column5,column6,columm[7;1Hn7,column8,column9,column10});[7;31H[K[34;82H8-15[6;15H[?25h[?25lvector<string>> (data.end(),{column1,column2,column3,column4,column5,column6,columnn[7;1H7,column8,column9,column10});[7;30H[K[34;82H7-14[6;14H[?25h[?25lvector<string>> (data.end(),{column1,column2,column3,column4,column5,column6,column77[7;1H,column8,column9,column10});[7;29H[K[34;82H6-13[6;13H[?25h[?25lvector<string>> (data.end(),{column1,column2,column3,column4,column5,column6,column7,,[7;1Hcolumn8,column9,column10});[7;28H[K[34;82H5-12[6;12H[?25h[?25lvector<string>> (data.end(),{column1,column2,column3,column4,column5,column6,column7,cc[7;1Holumn8,column9,column10});[7;27H[K[34;82H4-11[6;11H[?25h[?25lvector<string>> (data.end(),{column1,column2,column3,column4,column5,column6,column7,coo[7;1Hlumn8,column9,column10});[7;26H[K[34;82H3-10[6;10H[?25h[?25lector<string>> (data.end(),{column1,column2,column3,column4,column5,column6,column7,coll[7;1Humn8,column9,column10});[7;25H[K[34;82H2-9 [6;9H[?25h[?25l[34;82H3-10[6;10H[?25h[?25l[34;82H4-11[6;11H[?25h[?25l[34;82H5-12[6;12H[?25h[?25l[34;82H6-13[6;13H[?25h[?25l[34;82H7-14[6;14H[?25h[?25l[34;82H8-15[6;15H[?25h[?25l[34;82H9-16[6;16H[?25h[?25l[34;82H10-17[6;17H[?25h[?25l[34;83H1-18[6;18H[?25h[?25l[34;83H2-19[6;19H[?25h[?25l[34;83H3-20[6;20H[?25h[?25l[34;83H4-21[6;21H[?25h[?25l[34;83H5-22[6;22H[?25h[?25l[34;83H6-23[6;23H[?25h[?25l[34;83H7-24[6;24H[?25h[?25l (data.end(),{column1,column2,column3,column4,column5,column6,column7,coluu[7;1Hmn8,column9,column10});[7;24H[K[34;83H6-23[6;23H[?25h[?25l [106m([m[71Cuu[7;1Hm[20C[106m)[m[34;83H7-24[6;24H[?25h[?25l[72Cuu[7;1Hm[34;83H8-25[6;25H[?25h[?25l([71Cuu[7;1Hm[20C)[34;83H9-26[6;26H[?25h[?25l[34;82H20-27[6;27H[?25h[?25l[34;83H1-28[6;28H[?25h[?25l[34;83H2-29[6;29H[?25h[?25l[34;83H3-30[6;30H[?25h[?25l[34;83H4-31[6;31H[?25h[?25l[34;83H5-32[6;32H[?25h[?25ld[106m()[m[61Cuu[7;1Hm[34;83H6-33[6;33H[?25h[?25l[63Cuu[7;1Hm[34;83H7-34[6;34H[?25h[?25l[62Cuu[7;1Hm[34;83H8-35[6;35H[?25h[?25l(),[106m{[m[59Cuu[7;1Hm[19C[106m}[m[34;83H9-36[6;36H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,columm[7;1Hn8,column9,column10}[106m)[m;[7;23H[K[6;35H[106m{[mc[59Cmm[7;1Hn[18C[106m}[m)[34;83H8-35[6;35H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,columnn[7;1H8,column9,column10}[106m)[m;[7;22H[K[6;34H[106m{[mc[60Cnn[7;1H8[17C[106m}[m)[34;83H7-34[6;34H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column88[7;1H,column9,column10}[106m)[m;[7;21H[K[6;33H[106m{[mc[61C88[7;1H,[16C[106m}[m)[34;83H6-33[6;33H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,,[7;1Hcolumn9,column10}[106m)[m;[7;20H[K[6;32H[106m{[mc[62C,,[7;1Hc[15C[106m}[m)[34;83H5-32[6;32H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,cc[7;1Holumn9,column10}[106m)[m;[7;19H[K[6;31H[106m{[mc[63Ccc[7;1Ho[14C[106m}[m)[34;83H4-31[6;31H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,coo[7;1Hlumn9,column10}[106m)[m;[7;18H[K[6;30H[106m{[mc[64Coo[7;1Hl[13C[106m}[m)[34;83H3-30[6;30H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,coll[7;1Humn9,column10}[106m)[m;[7;17H[K[6;29H[106m{[mc[65Cll[7;1Hu[12C[106m}[m)[34;83H2-29[6;29H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,coluu[7;1Hmn9,column10}[106m)[m;[7;16H[K[6;28H[106m{[mc[66Cuu[7;1Hm[11C[106m}[m)[34;83H1-28[6;28H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,columm[7;1Hn9,column10}[106m)[m;[7;15H[K[6;27H[106m{[mc[67Cmm[7;1Hn[10C[106m}[m)[34;83H0-27[6;27H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,columnn[7;1H9,column10}[106m)[m;[7;14H[K[6;26H[106m{[mc[68Cnn[7;1H9[9C[106m}[m)[34;82H19-26[6;26H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,column99[7;1H,column10}[106m)[m;[7;13H[K[6;25H[106m{[mc[69C99[7;1H,[8C[106m}[m)[34;83H8-25[6;25H[?25h[?25l{[106mc[molumn1,column2,column3,column4,column5,column6,column7,column8,column9,,[7;1Hcolumn10}[97m[106m)[m;[7;12H[K[6;24H[106m{[mc[70C,,[7;1Hc[7C[106m}[m[97m[101m)[m[34;83H7-24[6;24H[?25h[?25l[72C,,[7;1Hc[34;83H8-25[6;25H[?25h[?25l[71C,,[7;1Hc[34;83H7-24[6;24H[?25h[?25l[72C,,[7;1Hc[34;83H8-25[6;25H[?25h[?25l{[71C,,[7;1Hc[7C}[34;83H9-26[6;26H[?25h[?25l[34;82H20-27[6;27H[?25h[?25l[34;83H1-28[6;28H[?25h[?25l[34;83H2-29[6;29H[?25h[?25l[34;83H3-30[6;30H[?25h[?25l[34;83H4-31[6;31H[?25h[?25l[34;83H5-32[6;32H[?25h[?25l[34;83H6-33[6;33H[?25h[?25l[34;83H7-34[6;34H[?25h[?25l[34;83H8-35[6;35H[?25h[?25l[34;83H9-36[6;36H[?25h[?25l[34;82H30-37[6;37H[?25h[?25l[34;83H1-38[6;38H[?25h[?25l[34;83H2-39[6;39H[?25h[?25l[34;83H3-40[6;40H[?25h[?25l[34;83H4-41[6;41H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,cc[7;1Holumn10}[97m[101m)[m;[7;11H[K[34;83H3-40[6;40H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,coo[7;1Hlumn10}[97m[101m)[m;[7;10H[K[34;83H2-39[6;39H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,coll[7;1Humn10}[97m[101m)[m;[7;9H[K[34;83H1-38[6;38H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,coluu[7;1Hmn10}[97m[101m)[m;[7;8H[K[34;83H0-37[6;37H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,columm[7;1Hn10}[97m[101m)[m;[7;7H[K[34;82H29-36[6;36H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,columnn[7;1H10}[97m[101m)[m;[7;6H[K[34;83H8-35[6;35H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,column11[7;1H0}[97m[101m)[m;[7;5H[K[34;83H7-34[6;34H[?25h[?25lolumn3,column4,column5,column6,column7,column8,column9,column100[7;1H}[97m[101m)[m;[7;4H[K[34;83H6-33[6;33H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,column10}}[7;1H[97m[101m)[m;[7;3H[K[34;83H5-32[6;32H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,column10}[97m[101m))[m[7;1H;[7;2H[K[34;83H4-31[6;31H[?25h[?25l[6;33r[33;1H
[1;34r[6;1H [7Cvector<string> {columcolumn3,column4,column5,column6,column7,column8,column9,column10}[97m[101m)[m;[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H21,23-30      60%[6;30H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,column10}[97m[101m)[m;[6;96H[K[34;83H2-29[6;29H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,column10}[97m[101m)[m;[6;95H[K[34;83H1-28[6;28H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,column10}[97m[101m)[m;[6;94H[K[34;83H0-27[6;27H[?25h[?25lcolumn3,column4,column5,column6,column7,column8,column9,column10}[97m[101m)[m;[6;93H[K[34;82H19-26[6;26H[?25h[?25lolumn3,column4,column5,column6,column7,column8,column9,column10}[97m[101m)[m;[6;92H[K[6;24H[106m{[64C}[m[34;83H8-25[6;25H[?25h[?25l[34;83H7-24[6;24H[?25h[?25l{[64C}[34;83H6-23[6;23H[?25h[?25l[34;83H5-22[6;22H[?25h[?25l[34;83H4-21[6;21H[?25h[?25l[34;83H3-20[6;20H[?25h[?25l[34;83H2-19[6;19H[?25h[?25l[34;83H1-18[6;18H[?25h[?25l[34;83H0-17[6;17H[?25h[?25l[34;82H9-16 [6;16H[?25h[?25l[34;82H8-15[6;15H[?25h[?25l[34;82H7-14[6;14H[?25h[?25l[34;82H8-15[6;15H[?25h[?25l[34;82H9-16[6;16H[?25h[?25l[34;82H10-17[6;17H[?25h[?25l[34;83H1-18[6;18H[?25h[?25l[34;83H2-19[6;19H[?25h[?25l[34;83H3-20[6;20H[?25h[?25l[34;83H4-21[6;21H[?25h[?25l[34;83H5-22[6;22H[?25h[?25l[34;83H6-23[6;23H[?25h[?25l [106m{[64C}[m[34;83H7-24[6;24H[?25h[?25l[34;83H8-25[6;25H[?25h[?25l{[64C}[34;83H9-26[6;26H[?25h[?25l[34;82H20-27[6;27H[?25h[?25l[34;83H1-28[6;28H[?25h[?25l[34;83H2-29[6;29H[?25h[?25l[34;83H3-30[6;30H[?25h[?25l[34;83H4-31[6;31H[?25h[?25l[34;83H5-32[6;32H[?25h[?25l[34;83H6-33[6;33H[?25h[?25l[34;83H7-34[6;34H[?25h[?25l[34;83H8-35[6;35H[?25h[?25l[34;83H9-36[6;36H[?25h[?25l[34;82H30-37[6;37H[?25h[?25l[34;83H1-38[6;38H[?25h[?25l[34;83H2-39[6;39H[?25h[?25l[34;83H3-40[6;40H[?25h[?25l[34;83H4-41[6;41H[?25h[?25l[34;83H5-42[6;42H[?25h[?25l[34;83H6-43[6;43H[?25h[?25l[34;83H7-44[6;44H[?25h[?25l[34;83H8-45[6;45H[?25h[?25l[34;83H9-46[6;46H[?25h[?25l[34;82H40-47[6;47H[?25h[?25l[34;83H1-48[6;48H[?25h[?25l[34;83H2-49[6;49H[?25h[?25l[34;83H3-50[6;50H[?25h[?25l[34;83H4-51[6;51H[?25h[?25l[34;83H5-52[6;52H[?25h[?25l[34;83H6-53[6;53H[?25h[?25l[34;83H7-54[6;54H[?25h[?25l[34;83H8-55[6;55H[?25h[?25l[34;83H9-56[6;56H[?25h[?25l[34;82H50-57[6;57H[?25h[?25l[34;83H1-58[6;58H[?25h[?25l[34;83H2-59[6;59H[?25h[?25l[34;83H3-60[6;60H[?25h[?25l[34;83H4-61[6;61H[?25h[?25l[34;83H5-62[6;62H[?25h[?25l[34;83H6-63[6;63H[?25h[?25l[34;83H7-64[6;64H[?25h[?25l[34;83H8-65[6;65H[?25h[?25l[34;83H9-66[6;66H[?25h[?25l[34;82H60-67[6;67H[?25h[?25l[34;83H1-68[6;68H[?25h[?25l[34;83H2-69[6;69H[?25h[?25l[34;83H3-70[6;70H[?25h[?25l[34;83H4-71[6;71H[?25h[?25l[34;83H5-72[6;72H[?25h[?25l[34;83H6-73[6;73H[?25h[?25l[34;83H7-74[6;74H[?25h[?25l[34;83H8-75[6;75H[?25h[?25l[34;83H9-76[6;76H[?25h[?25l[34;82H70-77[6;77H[?25h[?25l[34;83H1-78[6;78H[?25h[?25l[34;83H2-79[6;79H[?25h[?25l[34;83H3-80[6;80H[?25h[?25l[34;83H4-81[6;81H[?25h[?25l[34;83H3-80[6;80H[?25h[?25l[34;83H4-81[6;81H[?25h[?25lcolumn10}[97m[101m)[m;[6;91H[K[34;83H3-80[6;80H[?25h[?25lcolumn10}[97m[101m)[m;[6;90H[K[34;83H2-79[6;79H[?25h[?25lcolumn10}[97m[101m)[m;[6;89H[K[34;83H1-78[6;78H[?25h[?25lcolumn10}[97m[101m)[m;[6;88H[K[34;83H0-77[6;77H[?25h[?25lcolumn10}[97m[101m)[m;[6;87H[K[34;82H69-76[6;76H[?25h[?25lcolumn10}[97m[101m)[m;[6;86H[K[34;83H8-75[6;75H[?25h[?25lcolumn10}[97m[101m)[m;[6;85H[K[34;83H7-74[6;74H[?25h[?25lolumn10}[97m[101m)[m;[6;84H[K[34;83H6-73[6;73H[?25h[?25lcolumn10}[97m[101m)[m;[6;83H[K[34;83H5-72[6;72H[?25h[?25lcolumn10}[97m[101m)[m;[6;82H[K[34;83H4-71[6;71H[?25h[?25lcolumn10}[97m[101m)[m;[6;81H[K[34;83H3-70[6;70H[?25h[?25lcolumn10}[97m[101m)[m;[6;80H[K[34;83H2-69[6;69H[?25h[?25lcolumn10}[97m[101m)[m;[6;79H[K[34;83H1-68[6;68H[?25h[?25lcolumn10}[97m[101m)[m;[6;78H[K[34;83H0-67[6;67H[?25h[?25lcolumn10}[97m[101m)[m;[6;77H[K[34;82H59-66[6;66H[?25h[?25lolumn10}[97m[101m)[m;[6;76H[K[34;83H8-65[6;65H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;79H[K[34;79H20,11-18      56%[6;18H[?25h[?25l[7;33r[7;1H[L[1;34r[34;79H[K[34;79H21,2-9[8C53%[7;9H[?25h[?25lv[34;82H3-10[7;10H[?25h[?25le[34;82H4-11[7;11H[?25h[?25lc[34;82H5-12[7;12H[?25h[?25lt[34;82H6-13[7;13H[?25h[?25lo[34;82H7-14[7;14H[?25h[?25lr[34;82H8-15[7;15H[?25h[?25l[34;82H9-16[7;16H[?25h[?25l<[34;82H10-17[7;17H[?25h[?25l>[34;83H1-18[7;18H[?25h[?25l[34;83H0-17[7;17H[?25h[?25ls>[34;83H1-18[7;18H[?25h[?25lt>[34;83H2-19[7;19H[?25h[?25lr>[34;83H3-20[7;20H[?25h[?25li>[34;83H4-21[7;21H[?25h[?25ln>[34;83H5-22[7;22H[?25h[?25lg>[34;83H6-23[7;23H[?25h[?25l>[7;23H[K[34;83H5-22[7;22H[?25h[?25l>[7;22H[K[34;83H4-21[7;21H[?25h[?25l>[7;21H[K[34;83H3-20[7;20H[?25h[?25l>[7;20H[K[34;83H2-19[7;19H[?25h[?25l>[7;19H[K[34;83H1-18[7;18H[?25h[?25l>[7;18H[K[34;83H0-17[7;17H[?25h[?25li>[34;83H1-18[7;18H[?25h[?25ln>[34;83H2-19[7;19H[?25h[?25l[32mint[m>[34;83H3-20[7;20H[?25h[?25l[34;83H4-21[7;21H[?25h[?25l[34;83H5-22[7;22H[?25h[?25lc[34;83H6-23[7;23H[?25h[?25lo[34;83H7-24[7;24H[?25h[?25ll[34;83H8-25[7;25H[?25h[?25lu[34;83H9-26[7;26H[?25h[?25lm[34;82H20-27[7;27H[?25h[?25ln[34;83H1-28[7;28H[?25h[?25l1[34;83H2-29[7;29H[?25h[?25l,[34;83H3-30[7;30H[?25h[?25l[34;83H4-31[7;31H[?25h[?25lc[34;83H5-32[7;32H[?25h[?25lo[34;83H6-33[7;33H[?25h[?25ll[34;83H7-34[7;34H[?25h[?25lu[34;83H8-35[7;35H[?25h[?25lm[34;83H9-36[7;36H[?25h[?25ln[34;82H30-37[7;37H[?25h[?25l[34;83H1-38[7;38H[?25h[?25l[31m2[m[34;83H2-39[7;39H[?25h[?25l[7;38H[K[34;83H1-38[7;38H[?25h[?25l[34;83H0-37[7;37H[?25h[?25l2[34;83H1-38[7;38H[?25h[?25l,[34;83H2-39[7;39H[?25h[?25lc[34;83H3-40[7;40H[?25h[?25lo[34;83H4-41[7;41H[?25h[?25ll[34;83H5-42[7;42H[?25h[?25lu[34;83H6-43[7;43H[?25h[?25lm[34;83H7-44[7;44H[?25h[?25ln[34;83H8-45[7;45H[?25h[?25l[34;83H9-46[7;46H[?25h[?25l[34;83H8-45[7;45H[?25h[?25l3[34;83H9-46[7;46H[?25h[?25l;[34;82H40-47[7;47H[?25h[?25l[34;80H2[8;47H[?25h[?25l[34;83H1-48[8;48H[?25h[?25l[34;83H2-49[8;49H[?25h[?25l[34;83H3-50[8;50H[?25h[?25l[34;83H4-51[8;51H[?25h[?25l[34;83H5-52[8;52H[?25h[?25l[34;83H6-53[8;53H[?25h[?25l[34;83H7-54[8;54H[?25h[?25l[34;83H8-55[8;55H[?25h[?25l[34;83H9-56[8;56H[?25h[?25l[34;82H50-57[8;57H[?25h[?25l[34;83H1-58[8;58H[?25h[?25l[34;83H2-59[8;59H[?25h[?25l[34;83H3-60[8;60H[?25h[?25l[34;83H4-61[8;61H[?25h[?25l[34;83H5-62[8;62H[?25h[?25l[34;83H6-63[8;63H[?25h[?25l[34;83H7-64[8;64H[?25h[?25l[34;83H8-65[8;65H[?25h[?25l[34;83H9-66[8;66H[?25h[?25l[34;82H60-67[8;67H[?25h[?25l[34;83H1-68[8;68H[?25h[?25l[34;83H2-69[8;69H[?25h[?25l[34;83H3-70[8;70H[?25h[?25l[34;83H4-71[8;71H[?25h[?25l[34;83H5-72[8;72H[?25h[?25l[8;24H[106m{[48C}[m[34;83H6-73[8;73H[?25h[?25l[8;24H{[48C}[34;83H7-74[8;74H[?25h[?25l[34;83H8-75[8;75H[?25h[?25l[34;83H9-76[8;76H[?25h[?25l[34;83H8-75[8;75H[?25h[?25l;[8;75H[K[8;24H[106m{[48C}[m[34;83H7-74[8;74H[?25h[?25l[8;24H{[48C}[34;83H8-75[8;75H[?25h[?25l[34;80H3,12-19[9;19H[?25h[?25l[34;80H4,17-24[10;24H[?25h[?25l[34;80H5,27-3[11;34H[?25h[?25l[34;80H6,27-41[12;41H[?25h[?25l[34;80H7,1    [13;1H[?25h[?25l[34;80H8,54-75[14;75H[?25h[?25l[34;80H9,30-51[16;51H[?25h[?25l[16;32H[106m([16C)[m[34;82H29-50[16;50H[?25h[?25l[16;32H([16C)[34;80H8[14;50H[?25h[?25l[16;32H[106m([16C)[m[34;80H9[16;50H[?25h[?25l[16;32H([16C)[34;79H30,28-49[17;49H[?25h[?25l[34;80H1,29-50[18;50H[?25h[?25l[19;42H[106m([mlength[106m)[m[34;80H2[19;50H[?25h[?25l[34;83H8-49[19;49H[?25h[?25l[19;42H(length)[34;83H7-48[19;48H[?25h[?25l[34;83H6-47[19;47H[?25h[?25l[34;83H5-46[19;46H[?25h[?25l[34;83H4-45[19;45H[?25h[?25l[34;83H3-44[19;44H[?25h[?25l[106m([mlength[106m)[m[34;83H2-43[19;43H[?25h[?25lslengt[106mh[m);[19;42H(slength[34;83H3-44[19;44H[?25h[?25ltlength);[34;83H4-45[19;45H[?25h[?25lolength);[34;83H5-46[19;46H[?25h[?25lilength);[34;83H6-47[19;47H[?25h[?25l(length);[19;47H[106m([mlength[106m)[m[34;83H7-48[19;48H[?25h[?25l(length)[34;83H8-49[19;49H[?25h[?25l[34;83H9-50[19;50H[?25h[?25l[34;82H30-51[19;51H[?25h[?25l[34;83H1-52[19;52H[?25h[?25l[34;83H2-53[19;53H[?25h[?25l[106m([mlength[106m)[m[34;83H3-54[19;54H[?25h[?25l[1C);[19;42H[106m([mstoi(length)[106m)[m[34;83H4-55[19;55H[?25h[?25l[19;42H([12C)[34;80H1,32-53[18;53H[?25h[?25l[34;80H0,28-49[17;49H[?25h[?25l[34;79H29,30-51[16;51H[?25h[?25l[34;79H30,28-49[17;49H[?25h[?25l[17;42H[106m([myear[106m)[m[34;83H7-48[17;48H[?25h[?25l[34;83H6-47[17;47H[?25h[?25l(year)[34;83H5-46[17;46H[?25h[?25l[34;83H4-45[17;45H[?25h[?25l[34;83H3-44[17;44H[?25h[?25l[106m([myear[106m)[m[34;83H2-43[17;43H[?25h[?25lsyea[106mr[m);[17;42H(syear[34;83H3-44[17;44H[?25h[?25ltyear);[34;83H4-45[17;45H[?25h[?25loyear);[34;83H5-46[17;46H[?25h[?25liyear);[34;83H6-47[17;47H[?25h[?25l(year);[17;47H[106m([myear[106m)[m[34;83H7-48[17;48H[?25h[?25l(year)[34;83H8-49[17;49H[?25h[?25l[34;83H9-50[17;50H[?25h[?25l[34;82H30-51[17;51H[?25h[?25l[106m([myear[106m)[m[34;83H1-52[17;52H[?25h[?25l[1C);[17;42H[106m([mstoi(year)[106m)[m[34;83H2-53[17;53H[?25h[?25l[17;42H([10C)[34;79H29,30-51[16;51H[?25h[?25l[17;33r[17;1H[L[1;34r[34;79H[K[34;79H30,4-25[7C51%[17;25H[?25h[?25li[34;82H5-26[17;26H[?25h[?25l[38;5;130mif[m[34;82H6-27[17;27H[?25h[?25l[34;82H7-28[17;28H[?25h[?25ly[34;82H8-29[17;29H[?25h[?25le[34;82H9-30[17;30H[?25h[?25la[34;82H10-31[17;31H[?25h[?25lr[34;83H1-32[17;32H[?25h[?25l![34;83H2-33[17;33H[?25h[?25l[17;32H[K[34;83H1-32[17;32H[?25h[?25l.[34;83H2-33[17;33H[?25h[?25le[34;83H3-34[17;34H[?25h[?25lm[34;83H4-35[17;35H[?25h[?25lp[34;83H5-36[17;36H[?25h[?25lt[34;83H6-37[17;37H[?25h[?25ly[34;83H7-38[17;38H[?25h[?25l([34;83H8-39[17;39H[?25h[?25l)[106m()[m[34;83H9-40[17;40H[?25h[?25l[97m[101m)[m()[34;82H20-41[17;41H[?25h[?25l[34;82H19-40[17;40H[?25h[?25l[106m()[m[34;83H8-39[17;39H[?25h[?25l[34;83H7-38[17;38H[?25h[?25l()[34;83H6-37[17;37H[?25h[?25l[34;83H5-36[17;36H[?25h[?25l[34;83H4-35[17;35H[?25h[?25l[34;83H3-34[17;34H[?25h[?25l[34;83H2-33[17;33H[?25h[?25l[34;83H1-32[17;32H[?25h[?25l[34;83H0-31[17;31H[?25h[?25l[34;82H9-30 [17;30H[?25h[?25l[34;82H8-29[17;29H[?25h[?25l[34;82H7-28[17;28H[?25h[?25l(year.empty())[17;28H[106m([12C)[m[34;82H8-29[17;29H[?25h[?25l[34;82H7-28[17;28H[?25h[?25l[34;82H8-29[17;29H[?25h[?25l!year.empty([1C)[17;28H([12C)[34;82H9-30[17;30H[?25h[?25l[34;82H10-31[17;31H[?25h[?25l[34;83H1-32[17;32H[?25h[?25l[34;83H2-33[17;33H[?25h[?25l[34;83H3-34[17;34H[?25h[?25l[34;83H4-35[17;35H[?25h[?25l[34;83H5-36[17;36H[?25h[?25l[34;83H6-37[17;37H[?25h[?25l[34;83H7-38[17;38H[?25h[?25l[34;83H8-39[17;39H[?25h[?25ly[106m()[m[34;83H9-40[17;40H[?25h[?25l[34;82H20-41[17;41H[?25h[?25l[17;28H[106m([m[11C()[106m)[m[34;83H1-42[17;42H[?25h[?25l[34;83H2-43[17;43H[?25h[?25l{[17;28H([13C)[34;83H3-44[17;44H[?25h[?25l[34;80H1[18;44H[?25h[?25l[34;83H4-45[18;45H[?25h[?25l[34;83H5-46[18;46H[?25h[?25li[106m([myear[106m)[m[34;83H6-47[18;47H[?25h[?25l[34;83H7-48[18;48H[?25h[?25l(year)[34;83H8-49[18;49H[?25h[?25l[34;83H9-50[18;50H[?25h[?25l[34;82H30-51[18;51H[?25h[?25l[106m([myear[106m)[m[34;83H1-52[18;52H[?25h[?25l[18;42H[106m([mstoi(year)[106m)[m[34;83H2-53[18;53H[?25h[?25l[34;83H3-54[18;54H[?25h[?25l[18;42H([10C)[34;83H4-55[18;55H[?25h[?25l}[17;43H[106m{[18;55H}[m[34;83H5-56[18;56H[?25h[?25l[19;33r[19;1H[L[1;34r[34;79H[K[34;79H32,4-25[7C50%[17;43H{[18;55H}[19;25H[?25h[?25l[34;80H1[18;25H[?25h[?25l        column1.push_back(stoi(year));}[34;82H5-33[18;33H[?25h[?25l[34;80H2,1   [19;1H[?25h[?25l[34;82H2-9[19;9H[?25h[?25l[34;82H3-17[19;17H[?25h[?25l[34;82H4-25[19;25H[?25h[?25le[34;82H5-26[19;26H[?25h[?25ll[34;82H6-27[19;27H[?25h[?25ls[34;82H7-28[19;28H[?25h[?25l[38;5;130melse[m[34;82H8-29[19;29H[?25h[?25l{[34;82H9-30[19;30H[?25h[?25l}[106m{}[m[34;82H10-31[19;31H[?25h[?25l[34;82H9-30 [19;30H[?25h[?25l[106m [m} [106m}[m[34;82H10-31[19;31H[?25h[?25l[34;82H9-30 [19;30H[?25h[?25lc[106m [m}{c [34;82H10-31[19;31H[?25h[?25lo }[34;83H1-32[19;32H[?25h[?25ll }[34;83H2-33[19;33H[?25h[?25lu }[34;83H3-34[19;34H[?25h[?25lm }[34;83H4-35[19;35H[?25h[?25ln }[34;83H5-36[19;36H[?25h[?25l  }[34;83H6-37[19;37H[?25h[?25l}[19;38H[K[34;83H5-36[19;36H[?25h[?25l1 }[34;83H6-37[19;37H[?25h[?25l. }[34;83H7-38[19;38H[?25h[?25lp }[34;83H8-39[19;39H[?25h[?25lu }[34;83H9-40[19;40H[?25h[?25ls }[34;82H20-41[19;41H[?25h[?25lh }[34;83H1-42[19;42H[?25h[?25lb }[34;83H2-43[19;43H[?25h[?25la }[34;83H3-44[19;44H[?25h[?25lc }[34;83H4-45[19;45H[?25h[?25lk }[34;83H5-46[19;46H[?25h[?25l[34;83H4-45[19;45H[?25h[?25l[34;83H3-44[19;44H[?25h[?25l[34;83H2-43[19;43H[?25h[?25l[34;83H1-42[19;42H[?25h[?25l_back }[34;83H2-43[19;43H[?25h[?25l[34;83H3-44[19;44H[?25h[?25l[34;83H4-45[19;45H[?25h[?25l[34;83H5-46[19;46H[?25h[?25l[34;83H6-47[19;47H[?25h[?25l( }[34;83H7-48[19;48H[?25h[?25l) }[106m()[m[34;83H8-49[19;49H[?25h[?25l[34;83H7-48[19;48H[?25h[?25l[106m'[m) }'[106m)[m[34;83H8-49[19;49H[?25h[?25l[106m'[m) }'[106m)[m[34;83H9-50[19;50H[?25h[?25l)[106m [m}[19;52H[K[19;49H[106m)[m [34;83H8-49[19;49H[?25h[?25l)[106m [m}[19;51H[K[19;48H[106m)[m [34;83H7-48[19;48H[?25h[?25l[31m[106m0[m) }[31m0[m[106m)[m[34;83H8-49[19;49H[?25h[?25l[34;83H9-50[19;50H[?25h[?25l[19;29H[106m{[m[17C([1C) [106m}[m[34;82H30-51[19;51H[?25h[?25l[19;29H{[17C[106m([1C)[m }[34;82H29-50[19;50H[?25h[?25l; }([1C)[34;82H30-51[19;51H[?25h[?25l[19;29H[106m{[22C}[m[34;83H1-52[19;52H[?25h[?25l[20;33r[20;1H[L[1;34r[19;52H[K[20;25H}[34;79H[K[34;79H33,4-25[7C48%[20;25H[106m}[?25h[?25l[m[34;82H5-26[20;26H[?25h[?25l[34;82H4-25[20;25H[?25h[?25l[20;17H}[20;25H[K[20;17H[106m}[m[34;82H3-17[20;17H[?25h[?25l[20;9H}[20;17H[K[20;9H[106m}[m[34;82H2-9 [20;9H[?25h[?25l}[20;9H[K[20;1H[106m}[m[34;82H1  [20;1H[?25h[?25l[19;33r[33;1H
[1;34r[19;1H [23C[38;5;130melse[m[106m{[mcolumn1.push_back([31m0[m); }
[106m        [m[33;25Hgetline(infile, popularity,[31m';'[m);[34;79H[K[34;79H32,31-52      50%[19;52H[106m}[m
        [19;52H[?25h[?25l[34;83H2-53[19;53H[?25h[?25l[20;33r[20;1H[L[1;34r[34;79H[K[34;79H33,4-25[7C48%[19;29H{[22C}[20;25H[?25h[?25l[34;80H4[21;25H[?25h[?25l[34;80H5[22;25H[?25h[?25l[34;80H6,1   [23;1H[?25h[?25l[34;82H2-9[23;9H[?25h[?25l[34;82H3-17[23;17H[?25h[?25l[34;82H4-25[23;25H[?25h[?25l[34;80H5[22;25H[?25h[?25l[34;80H4[21;25H[?25h[?25l[34;80H3,1   [20;1H[?25h[?25l[34;80H2,4-25[19;25H[?25h[?25l[34;80H1[18;25H[?25h[?25l[34;80H0[17;25H[?25h[?25l[34;79H29[16;25H[?25h[?25l[34;80H8[14;25H[?25h[?25l[34;80H7,1   [13;1H[?25h[?25l[34;80H6,11-25[12;25H[?25h[?25l[34;80H5,18[11;25H[?25h[?25l[34;80H4,17-24[10;24H[?25h[?25l[34;80H3,12-19[9;19H[?25h[?25l[8;24H[106m{[48C}[m[34;80H2,18-25[8;25H[?25h[?25l{[48C}[34;80H1[7;25H[?25h[?25l[34;83H9-26[7;26H[?25h[?25l[34;82H20-27[7;27H[?25h[?25l[34;83H1-28[7;28H[?25h[?25l[34;83H2-29[7;29H[?25h[?25l[34;83H3-30[7;30H[?25h[?25l[34;83H4-31[7;31H[?25h[?25l[34;83H5-32[7;32H[?25h[?25l[34;83H6-33[7;33H[?25h[?25l[34;83H7-34[7;34H[?25h[?25l[34;83H8-35[7;35H[?25h[?25l[34;83H9-36[7;36H[?25h[?25l[34;82H30-37[7;37H[?25h[?25l[34;83H1-38[7;38H[?25h[?25l[34;83H2-39[7;39H[?25h[?25l[34;83H3-40[7;40H[?25h[?25l[34;83H4-41[7;41H[?25h[?25l[34;83H5-42[7;42H[?25h[?25l[34;83H6-43[7;43H[?25h[?25l[34;83H7-44[7;44H[?25h[?25l[34;83H8-45[7;45H[?25h[?25l[34;83H9-46[7;46H[?25h[?25l;[7;46H[K[34;83H8-45[7;45H[?25h[?25l8;[34;83H9-46[7;46H[?25h[?25l[34;82H40-47[7;47H[?25h[?25lc[34;83H1-48[7;48H[?25h[?25lo[34;83H2-49[7;49H[?25h[?25ll[34;83H3-50[7;50H[?25h[?25lu[34;83H4-51[7;51H[?25h[?25lm[34;83H5-52[7;52H[?25h[?25ln[34;83H6-53[7;53H[?25h[?25l[7;52H[K[34;83H5-52[7;52H[?25h[?25l[7;51H[K[34;83H4-51[7;51H[?25h[?25l[7;50H[K[34;83H3-50[7;50H[?25h[?25l[7;49H[K[34;83H2-49[7;49H[?25h[?25l[7;48H[K[34;83H1-48[7;48H[?25h[?25l[7;47H[K[34;83H0-47[7;47H[?25h[?25l[34;80H2[8;47H[?25h[?25l[34;80H3,12-19[9;19H[?25h[?25l[34;80H4,17-24[10;24H[?25h[?25l[34;80H5,27-3[11;34H[?25h[?25l[34;80H6,27-41[12;41H[?25h[?25l[34;80H7,1    [13;1H[?25h[?25l[34;80H8,26-47[14;47H[?25h[?25l[34;80H9[16;47H[?25h[?25l[17;43H[106m{[18;63H}[m[34;79H30,23-44[17;44H[?25h[?25l{[18;63H}[34;80H1,19-47[18;47H[?25h[?25l[19;47H[106m([1C)[m[34;80H2,26[19;47H[?25h[?25l([1C)[34;80H3,1    [20;1H[?25h[?25l[34;80H4,26-47[21;47H[?25h[?25l[22;47H[106m([mlength[106m)[m[34;80H5[22;47H[?25h[?25l(length)[34;80H6,4-25 [23;25H[?25h[?25l[34;80H7,26-47[24;47H[?25h[?25l[34;80H8[25;47H[?25h[?25l[34;80H9[26;47H[?25h[?25l[34;79H40[27;47H[?25h[?25l[34;80H1[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, popularity,[31m';'[m);[34;79H[K[34;79H42,26-47      51%[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(popularity);[34;79H[K[34;79H43,26-47      55%[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H44,26-47      58%[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn9.push_back(awards);[34;79H[K[34;79H45,26-47      62%[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H46,26-47      65%[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H47,26-47      68%[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H[38;5;130mif[m(!year.empty()){[34;79H[K[34;79H48,26-47      72%[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;33H[32mint[m decade=(stoi(year)-[31m1900[m)/[31m10[m;[34;79H[K[34;79H49,26-47      75%[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[33;33Hcout <<decade<<endl;[34;79H[K[34;79H50,26-47      79%[28;47H[?25h[?25l[34;79H49[27;47H[?25h[?25l[34;83H7-48[27;48H[?25h[?25l[34;83H8-49[27;49H[?25h[?25l[34;83H9-50[27;50H[?25h[?25l[27;32H[106m([18C)[m[34;82H30-51[27;51H[?25h[?25l[34;83H1-52[27;52H[?25h[?25l[27;32H([18C)[34;83H2-53[27;53H[?25h[?25l[34;79H50,30-51[28;51H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H}[34;79H[K[34;79H51,32-53      82%[28;53H[?25h[?25l[34;80H0,30-51[27;51H[?25h[?25l[27;50H[K[27;42H[106m([mawards[106m)[m[34;82H29-50[27;50H[?25h[?25l[27;49H[K[27;42H([34;83H8-49[27;49H[?25h[?25l[27;48H[K[34;83H7-48[27;48H[?25h[?25l[27;47H[K[34;83H6-47[27;47H[?25h[?25l[27;46H[K[34;83H5-46[27;46H[?25h[?25l[27;45H[K[34;83H4-45[27;45H[?25h[?25l[27;44H[K[34;83H3-44[27;44H[?25h[?25l[27;43H[K[34;83H2-43[27;43H[?25h[?25l[27;42H[K[34;83H1-42[27;42H[?25h[?25l[27;41H[K[34;83H0-41[27;41H[?25h[?25l[27;40H[K[34;82H19-40[27;40H[?25h[?25l[27;39H[K[34;83H8-39[27;39H[?25h[?25l[27;38H[K[34;83H7-38[27;38H[?25h[?25l[27;37H[K[34;83H6-37[27;37H[?25h[?25l[27;36H[K[34;83H5-36[27;36H[?25h[?25l[27;35H[K[34;83H4-35[27;35H[?25h[?25l[27;34H[K[34;83H3-34[27;34H[?25h[?25l[27;33H[K[34;83H2-33[27;33H[?25h[?25l[27;32H[K[34;83H1-32[27;32H[?25h[?25l[27;31H[K[34;83H0-31[27;31H[?25h[?25l[27;30H[K[34;82H9-30 [27;30H[?25h[?25l[27;29H[K[34;82H8-29[27;29H[?25h[?25l[27;28H[K[34;82H7-28[27;28H[?25h[?25l[27;27H[K[34;82H6-27[27;27H[?25h[?25l[27;26H[K[34;82H5-26[27;26H[?25h[?25l[27;25H[K[34;82H4-25[27;25H[?25h[?25l[34;82H3-17[27;17H[?25h[?25l[34;82H2-9 [27;9H[?25h[?25l[34;82H1  [27;1H[?25h[?25l[26;33r[33;1H
[1;34r[26;25Hgetline(infile, awards,[31m';'[m);[33;17H}[34;79H[K[34;79H49,32-53      85%[26;53H[?25h[?25l[26;52H[K[26;32H[106m([18C)[m[34;83H1-52[26;52H[?25h[?25l[26;51H[K[26;32H([34;83H0-51[26;51H[?25h[?25l';[26;50H[K[34;82H29-50[26;50H[?25h[?25l[26;49H[K[34;83H8-49[26;49H[?25h[?25l[26;48H[K[34;83H7-48[26;48H[?25h[?25l[26;47H[K[34;83H6-47[26;47H[?25h[?25l[26;46H[K[34;83H5-46[26;46H[?25h[?25l[26;45H[K[34;83H4-45[26;45H[?25h[?25ld[34;83H5-46[26;46H[?25h[?25ls[34;83H6-47[26;47H[?25h[?25l,[34;83H7-48[26;48H[?25h[?25l'[34;83H8-49[26;49H[?25h[?25l'[34;83H9-50[26;50H[?25h[?25l[34;83H8-49[26;49H[?25h[?25l[31m';'[m[34;83H9-50[26;50H[?25h[?25l[34;82H30-51[26;51H[?25h[?25l)[26;32H[106m([18C)[m[34;83H1-52[26;52H[?25h[?25l;[26;32H([18C)[34;83H2-53[26;53H[?25h[?25l[34;79H50[27;53H[?25h[?25l[34;80H1,30-51[28;51H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H}[34;79H[K[34;79H52,22-43      89%[28;42H[106m{[31;25H}[28;43H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9Hcout<<sum<<[31m" "[m<<average<<endl;[34;79H[K[34;79H53,25-53      92%[27;42H{[30;25H}[28;53H[?25h[?25l[27;42H[106m{[30;25H}[m[34;80H2,22-4[27;43H[?25h[?25l{[30;25H}[34;80H3,25-5[28;53H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H54,25-53      96%[28;53H[?25h[?25l[1;33r[1;1H[2M[1;34r[32;1H}
[94m~                                                                                               [m[34;79H[K[34;79H55,5-26[7CBot[24;42H[106m{[27;25H}[?25h[?25l[m[24;42H{[27;25H}[34;80H6,4-18[28;18H[?25h[?25l[24;42H[106m{[27;25H}[m[34;80H5,5-26[27;26H[?25h[?25l[27;25H[K[24;42H{[34;82H4-25[27;25H[?25h[?25l[34;82H3-17[27;17H[?25h[?25l[34;82H2-9 [27;9H[?25h[?25l[34;82H1  [27;1H[?25h[?25l[26;33r[33;1H
[1;34r[26;33Hcout <<decade<<endl;[33;1H[94m~                                                                                               [m[34;79H[K[34;79H54,25-53      Bot[26;53H[?25h[?25l[26;52H[K[34;83H4-52[26;52H[?25h[?25l[26;51H[K[34;83H3-51[26;51H[?25h[?25l[26;50H[K[34;83H2-50[26;50H[?25h[?25l[26;49H[K[34;83H1-49[26;49H[?25h[?25l[26;48H[K[34;83H0-48[26;48H[?25h[?25l[26;47H[K[34;82H19-47[26;47H[?25h[?25l[26;46H[K[34;83H8-46[26;46H[?25h[?25l[26;45H[K[34;83H7-45[26;45H[?25h[?25l[26;44H[K[34;83H6-44[26;44H[?25h[?25l[26;43H[K[34;83H5-43[26;43H[?25h[?25l[26;42H[K[34;83H4-42[26;42H[?25h[?25l[26;41H[K[34;83H3-41[26;41H[?25h[?25l[26;40H[K[34;83H2-40[26;40H[?25h[?25l[26;39H[K[34;83H1-39[26;39H[?25h[?25l[26;38H[K[34;83H0-38[26;38H[?25h[?25l[34;82H9-37 [26;37H[?25h[?25l[26;36H[K[34;82H8-36[26;36H[?25h[?25l[26;35H[K[34;82H7-35[26;35H[?25h[?25l[26;34H[K[34;82H6-34[26;34H[?25h[?25l[26;33H[K[34;82H5-33[26;33H[?25h[?25l[34;82H4-25[26;25H[?25h[?25l[34;82H3-17[26;17H[?25h[?25l[34;82H2-9 [26;9H[?25h[?25l[34;82H1  [26;1H[?25h[?25l[25;33r[33;1H
[1;34r[25;33H[32mint[m decade=(stoi(year)-[31m1900[m)/[31m10[m;[33;1H[94m~                                                                                               [m[34;79H[K[34;79H53,37-65      Bot[25;65H[?25h[?25l[25;64H[K[34;83H6-64[25;64H[?25h[?25l[25;63H[K[34;83H5-63[25;63H[?25h[?25l[25;62H[K[34;83H4-62[25;62H[?25h[?25l[25;61H[K[25;44H[106m([15C)[m[34;83H3-61[25;61H[?25h[?25l[25;60H[K[25;44H([34;83H2-60[25;60H[?25h[?25l[25;59H[K[34;83H1-59[25;59H[?25h[?25l[25;58H[K[34;83H0-58[25;58H[?25h[?25l[25;57H[K[34;82H29-57[25;57H[?25h[?25l[25;56H[K[34;83H8-56[25;56H[?25h[?25l[25;55H[K[25;49H[106m([myear[106m)[m[34;83H7-55[25;55H[?25h[?25l[25;54H[K[25;49H([34;83H6-54[25;54H[?25h[?25l[25;53H[K[34;83H5-53[25;53H[?25h[?25l[25;52H[K[34;83H4-52[25;52H[?25h[?25l[25;51H[K[34;83H3-51[25;51H[?25h[?25l[25;50H[K[34;83H2-50[25;50H[?25h[?25l[25;49H[K[34;83H1-49[25;49H[?25h[?25l[25;48H[K[34;83H0-48[25;48H[?25h[?25l[25;47H[K[34;82H19-47[25;47H[?25h[?25l[25;46H[K[34;83H8-46[25;46H[?25h[?25l[25;45H[K[34;83H7-45[25;45H[?25h[?25l[25;44H[K[34;83H6-44[25;44H[?25h[?25l[25;43H[K[34;83H5-43[25;43H[?25h[?25l[25;42H[K[34;83H4-42[25;42H[?25h[?25l[25;41H[K[34;83H3-41[25;41H[?25h[?25l[25;40H[K[34;83H2-40[25;40H[?25h[?25l[25;39H[K[34;83H1-39[25;39H[?25h[?25l[25;38H[K[34;83H0-38[25;38H[?25h[?25l[25;37H[K[34;82H9-37 [25;37H[?25h[?25l[34;82H8-36[25;36H[?25h[?25lin[25;35H[K[34;82H7-35[25;35H[?25h[?25l[25;34H[K[34;82H6-34[25;34H[?25h[?25l[25;33H[K[34;82H5-33[25;33H[?25h[?25l[34;82H4-25[25;25H[?25h[?25l[34;82H3-17[25;17H[?25h[?25l[34;82H2-9 [25;9H[?25h[?25l[34;82H1  [25;1H[?25h[?25l[24;33r[33;1H
[1;34r[24;25H[38;5;130mif[m(!year.empty()){[33;1H[94m~                                                                                               [m[34;79H[K[34;79H52,22-43      Bot[24;42H[106m{[25;17H}[24;43H[?25h[?25l[m[24;42H[K[24;27H[106m([13C)[m[25;17H}[34;83H1-42[24;42H[?25h[?25l[24;41H[K[24;27H([11C[106m()[m[34;83H0-41[24;41H[?25h[?25l[24;40H[K[24;39H([34;82H19-40[24;40H[?25h[?25l[24;39H[K[34;83H8-39[24;39H[?25h[?25l[24;38H[K[34;83H7-38[24;38H[?25h[?25l[24;37H[K[34;83H6-37[24;37H[?25h[?25l[24;36H[K[34;83H5-36[24;36H[?25h[?25l[24;35H[K[34;83H4-35[24;35H[?25h[?25l[24;34H[K[34;83H3-34[24;34H[?25h[?25l[24;33H[K[34;83H2-33[24;33H[?25h[?25l[24;32H[K[34;83H1-32[24;32H[?25h[?25l[24;31H[K[34;83H0-31[24;31H[?25h[?25l[24;30H[K[34;82H9-30 [24;30H[?25h[?25l[24;29H[K[34;82H8-29[24;29H[?25h[?25l[24;28H[K[34;82H7-28[24;28H[?25h[?25l[24;27H[K[34;82H6-27[24;27H[?25h[?25li[24;26H[K[34;82H5-26[24;26H[?25h[?25l[24;25H[K[34;82H4-25[24;25H[?25h[?25l[34;82H3-17[24;17H[?25h[?25l[34;82H2-9 [24;9H[?25h[?25l[34;82H1  [24;1H[?25h[?25l[23;33r[33;1H
[1;34r[23;25Hcolumn10.push_back(image);[33;1H[94m~                                                                                               [m[34;79H[K[34;79H51,30-51      Bot[23;51H[?25h[?25l[34;80H2,4-18 [24;18H[?25h[?25l[34;80H1,30-51[23;51H[?25h[?25l[22;32H[106m([18C)[m[34;80H0[22;51H[?25h[?25l[21;32H[106m([18C)[m[22;32H([18C)[34;79H49[21;51H[?25h[?25l[21;32H([18C)[34;80H8[20;51H[?25h[?25l[34;80H7[19;51H[?25h[?25l[18;42H[106m([8C)[m[34;80H6[18;51H[?25h[?25l[18;42H([8C)[34;80H5[17;51H[?25h[?25l[16;42H[106m([7C)[m[34;80H4[16;51H[?25h[?25l[16;42H([7C)[34;80H3[15;51H[?25h[?25l[34;80H2,29-50[14;50H[?25h[?25l[13;32H[106m([17C)[m[34;80H1,30-51[13;51H[?25h[?25l[12;42H[106m([7C)[m[13;32H([17C)[34;80H0[12;51H[?25h[?25l[12;42H([7C)[34;79H39[11;51H[?25h[?25l[34;80H8,29-50[10;50H[?25h[?25l[9;32H[106m([17C)[m[34;80H7,30-51[9;51H[?25h[?25l[9;32H([17C)[34;80H6,4-25 [8;25H[?25h[?25l[34;80H5,30-51[7;51H[?25h[?25l[6;32H[106m([18C)[m[34;80H4[6;51H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awardd[2;1Hs,image;[34;79H[K[34;79H33,1[10CBot[8;32H([18C)[7;1H[?25h[?25l[34;80H2,30-51[6;51H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H31,23-51      Bot[6;50H[106m([10C)[6;51H[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;17H[38;5;130mfor[m([32mint[m i = [31m0[m;i<[31m10[m;i++){[34;79H[K[34;79H30,23-44      Bot[6;43H[106m{[m[7;50H([10C);[106m}[6;44H[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(getline(infile,x)){[34;79H[K[34;79H29,30-51      Bot[7;43H{[8;63H}[6;51H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9H[32mint[m sum=[31m0[m;[2;9H[32mdouble[m average;[34;79H[K[34;79H28,30-51      91%[6;51H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector<string> {column3,column4,column5,column6,column7,column10};[34;79H[K[34;79H27,1[10C87%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,27-41      83%[6;40H[106m{[33;17H}[6;41H[?25h[?25l[m[6;40H[K[6;20H[106m([18C)[m[33;17H}[34;83H6-40[6;40H[?25h[?25l[6;39H[K[6;20H([34;83H5-39[6;39H[?25h[?25l[6;38H[K[34;83H4-38[6;38H[?25h[?25l[6;37H[K[34;83H3-37[6;37H[?25h[?25l[6;36H[K[34;83H2-36[6;36H[?25h[?25l[6;35H[K[34;83H1-35[6;35H[?25h[?25l[6;34H[K[34;83H0-34[6;34H[?25h[?25l[6;33H[K[34;82H19-33[6;33H[?25h[?25l[6;32H[K[34;83H8-32[6;32H[?25h[?25l[6;31H[K[34;83H7-31[6;31H[?25h[?25l[6;30H[K[34;83H6-30[6;30H[?25h[?25l[6;29H[K[34;83H5-29[6;29H[?25h[?25l[34;83H4-28[6;28H[?25h[?25l[6;27H[K[34;83H3-27[6;27H[?25h[?25l[34;83H2-26[6;26H[?25h[?25l[6;25H[K[34;83H1-25[6;25H[?25h[?25l[34;83H0-24[6;24H[?25h[?25lin[6;23H[K[34;82H9-23 [6;23H[?25h[?25l[6;22H[K[34;82H8-22[6;22H[?25h[?25l[6;21H[K[34;82H7-21[6;21H[?25h[?25l[6;20H[K[34;82H6-20[6;20H[?25h[?25lfo[6;19H[K[34;82H5-19[6;19H[?25h[?25l[6;18H[K[34;82H4-18[6;18H[?25h[?25l[6;17H[K[34;82H3-17[6;17H[?25h[?25l[34;82H2-9 [6;9H[?25h[?25l[34;82H1  [6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hstring x;[6;33r[33;1H
[1;34r[6;9H[38;5;130mwhile[m(getline(infile,x)){[33;17H}[34;79H[K[34;79H25,27-34      82%[6;33H[106m{[33;17H}[6;34H[?25h[?25l[m{[33;17H}[34;80H6,1    [7;1H[?25h[?25l[34;80H7,13-34[8;34H[?25h[?25l[34;80H8[10;34H[?25h[?25l[34;80H9[11;34H[?25h[?25l[34;79H30,6-34 [12;34H[?25h[?25l[34;80H1,13-34[13;34H[?25h[?25l[34;80H2,1    [14;1H[?25h[?25l[34;80H3,13-34[15;34H[?25h[?25l[34;80H4[16;34H[?25h[?25l[34;80H5,4-25 [17;25H[?25h[?25l[34;80H6,13-34[18;34H[?25h[?25l[34;80H7[19;34H[?25h[?25l[34;80H8[20;34H[?25h[?25l[34;80H9[21;34H[?25h[?25l[34;79H40[22;34H[?25h[?25l[34;80H1[23;34H[?25h[?25l[34;80H2[24;34H[?25h[?25l[34;80H3[25;34H[?25h[?25l[34;80H4[26;34H[?25h[?25l[34;80H5[27;34H[?25h[?25l[34;80H6[28;34H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H}[34;79H[K[34;79H47,13-34      86%[28;34H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hcout<<sum<<[31m" "[m<<average<<endl;[34;79H[K[34;79H48,13-34      91%[28;34H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H49,13-34      95%[28;34H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;79H[K[34;79H50,13-34      Bot[28;34H[?25h[?25l[2;33H[106m{[29;17H}[m[34;80H1,4-18 [29;18H[?25h[?25l[2;33H{[29;17H}[34;80H2,3-10[30;10H[?25h[?25l[34;80H3,27-34[31;34H[?25h[?25l[34;80H4,2-9  [32;9H[?25h[?25l[34;80H5,2  [33;2H[?25h[?25l[34;80H4,2-9[32;9H[?25h[?25l[34;80H3,27-34[31;34H[?25h[?25l[34;80H2,3-10 [30;10H[?25h[?25l[2;33H[106m{[29;17H}[m[34;80H1,4-18[29;18H[?25h[?25l[2;33H{[29;17H}[34;80H2,3-10[30;10H[?25h[?25l[30;9H[K[34;82H2-9 [30;9H[?25h[?25l[34;82H1  [30;1H[?25h[?25l[34;80H3[31;1H[?25h[?25l[34;82H2-9[31;9H[?25h[?25l[34;82H3-10[31;10H[?25h[?25l[34;82H4-11[31;11H[?25h[?25l[34;82H5-12[31;12H[?25h[?25l[34;82H6-13[31;13H[?25h[?25l[34;82H7-14[31;14H[?25h[?25l[34;82H8-15[31;15H[?25h[?25l[34;82H9-16[31;16H[?25h[?25l[34;82H10-17[31;17H[?25h[?25l[34;83H1-18[31;18H[?25h[?25l[34;83H2-19[31;19H[?25h[?25l[34;83H3-20[31;20H[?25h[?25l[34;83H4-21[31;21H[?25h[?25l[34;83H5-22[31;22H[?25h[?25l[34;83H6-23[31;23H[?25h[?25l[34;83H7-24[31;24H[?25h[?25l[34;83H8-25[31;25H[?25h[?25l[34;83H9-26[31;26H[?25h[?25l[34;82H20-27[31;27H[?25h[?25l[34;83H1-28[31;28H[?25h[?25l[34;83H2-29[31;29H[?25h[?25l[34;83H3-30[31;30H[?25h[?25l[34;83H4-31[31;31H[?25h[?25l[34;83H5-32[31;32H[?25h[?25l[34;83H6-33[31;33H[?25h[?25l[34;83H7-34[31;34H[?25h[?25l[34;83H8-35[31;35H[?25h[?25l[34;83H9-36[31;36H[?25h[?25l[34;82H30-37[31;37H[?25h[?25l[34;83H1-38[31;38H[?25h[?25l[34;83H2-39[31;39H[?25h[?25l[31;38H[K[34;83H1-38[31;38H[?25h[?25l[31;37H[K[34;83H0-37[31;37H[?25h[?25l[31;36H[K[34;82H29-36[31;36H[?25h[?25l[31;35H[K[34;83H8-35[31;35H[?25h[?25l[31;34H[K[34;83H7-34[31;34H[?25h[?25l[31;33H[K[34;83H6-33[31;33H[?25h[?25l[31;32H[K[34;83H5-32[31;32H[?25h[?25l[31;31H[K[34;83H4-31[31;31H[?25h[?25l[31;30H[K[34;83H3-30[31;30H[?25h[?25l[31;29H[K[34;83H2-29[31;29H[?25h[?25l[31;28H[K[34;83H1-28[31;28H[?25h[?25l[31;27H[K[34;83H0-27[31;27H[?25h[?25l[31;26H[K[34;82H19-26[31;26H[?25h[?25l[31;25H[K[34;83H8-25[31;25H[?25h[?25l[31;24H[K[34;83H7-24[31;24H[?25h[?25l[31;23H[K[34;83H6-23[31;23H[?25h[?25l[31;22H[K[34;83H5-22[31;22H[?25h[?25l[31;21H[K[34;83H4-21[31;21H[?25h[?25l[31;20H[K[34;83H3-20[31;20H[?25h[?25l[31;19H[K[34;83H2-19[31;19H[?25h[?25l[31;18H[K[34;83H1-18[31;18H[?25h[?25l[31;17H[K[34;83H0-17[31;17H[?25h[?25l[31;16H[K[34;82H9-16 [31;16H[?25h[?25l[31;15H[K[34;82H8-15[31;15H[?25h[?25l[31;14H[K[34;82H7-14[31;14H[?25h[?25l[31;13H[K[34;82H6-13[31;13H[?25h[?25l[31;12H[K[34;82H5-12[31;12H[?25h[?25l[31;11H[K[34;82H4-11[31;11H[?25h[?25l[31;10H[K[34;82H3-10[31;10H[?25h[?25l[31;9H[K[34;82H2-9 [31;9H[?25h[?25lf[34;82H3-10[31;10H[?25h[?25lo[34;82H4-11[31;11H[?25h[?25l[38;5;130mfor[m[34;82H5-12[31;12H[?25h[?25l[34;82H6-13[31;13H[?25h[?25l[34;82H5-12[31;12H[?25h[?25l([34;82H6-13[31;13H[?25h[?25l)[106m()[m[34;82H7-14[31;14H[?25h[?25l[34;82H6-13[31;13H[?25h[?25l[106mi[m)i[106m)[m[34;82H7-14[31;14H[?25h[?25l[106mn[m)n[106m)[m[34;82H8-15[31;15H[?25h[?25l[106m [m) [106m)[m[34;82H9-16[31;16H[?25h[?25l)[31;16H[K[31;15H[106m)[m[34;82H8-15[31;15H[?25h[?25l[32min[m[32m[106mt[m)[32mt[m[106m)[m[34;82H9-16[31;16H[?25h[?25l[106m [m) [106m)[m[34;82H10-17[31;17H[?25h[?25l[106mi[m)i[106m)[m[34;83H1-18[31;18H[?25h[?25l[106m [m) [106m)[m[34;83H2-19[31;19H[?25h[?25l)[31;19H[K[31;18H[106m)[m[34;83H1-18[31;18H[?25h[?25l[106m=[m)=[106m)[m[34;83H2-19[31;19H[?25h[?25l[31m[106m0[m)[31m0[m[106m)[m[34;83H3-20[31;20H[?25h[?25l)[31;20H[K[31;19H[106m)[m[34;83H2-19[31;19H[?25h[?25l)[31;19H[K[31;18H[106m)[m[34;83H1-18[31;18H[?25h[?25l)[31;18H[K[31;17H[106m)[m[34;83H0-17[31;17H[?25h[?25l)[31;17H[K[31;16H[106m)[m[34;82H9-16 [31;16H[?25h[?25lin)[31;16H[K[31;15H[106m)[m[34;82H8-15[31;15H[?25h[?25l)[31;15H[K[31;14H[106m)[m[34;82H7-14[31;14H[?25h[?25l)[31;14H[K[31;13H[106m)[m[34;82H6-13[31;13H[?25h[?25l[106mx[m)x[106m)[m[34;82H7-14[31;14H[?25h[?25l[106m:[m):[106m)[m[34;82H8-15[31;15H[?25h[?25l[106mc[m)c[106m)[m[34;82H9-16[31;16H[?25h[?25l[106mo[m)o[106m)[m[34;82H10-17[31;17H[?25h[?25l[106ml[m)l[106m)[m[34;83H1-18[31;18H[?25h[?25l[106mu[m)u[106m)[m[34;83H2-19[31;19H[?25h[?25l[106mm[m)m[106m)[m[34;83H3-20[31;20H[?25h[?25l[106mn[m)n[106m)[m[34;83H4-21[31;21H[?25h[?25l[106m2[m)2[106m)[m[34;83H5-22[31;22H[?25h[?25l[34;83H6-23[31;23H[?25h[?25l{[31;12H([9C)[106m{

}[m[34;83H7-24[31;24H[?25h[?25l}[106m}[m

}[34;83H8-25[31;25H[?25h[?25l[34;83H7-24[31;24H[?25h[?25l[1;33r[33;1H
[1;34r[31;33r[31;1H[L[1;34r[30;24H[K[31;9H}[34;79H[K[34;79H54,2-9[8CBot[31;9H[106m}[?25h[?25l[1;33r[m[33;1H
[1;34r[31;33r[31;1H[L[1;34r[30;9H[K[31;9H}[34;79H[K[34;79H55,2-9[8CBot[31;9H[106m}[?25h[?25l[m[29;23H{[31;9H}[34;80H6[32;9H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5[31;9H[?25h[?25l[29;23H{[31;9H}[34;80H4[30;9H[?25h[?25lc[34;82H3-10[30;10H[?25h[?25l[30;9H[K[34;82H2-9 [30;9H[?25h[?25l[34;82H3-17[30;17H[?25h[?25lc[34;82H4-18[30;18H[?25h[?25lo[34;82H5-19[30;19H[?25h[?25lu[34;82H6-20[30;20H[?25h[?25lt[34;82H7-21[30;21H[?25h[?25l[34;82H8-22[30;22H[?25h[?25l<[34;82H9-23[30;23H[?25h[?25l<[34;82H10-24[30;24H[?25h[?25lx[34;83H1-25[30;25H[?25h[?25l:[34;83H2-26[30;26H[?25h[?25l[30;25H[K[34;83H1-25[30;25H[?25h[?25l<[34;83H2-26[30;26H[?25h[?25l<[34;83H3-27[30;27H[?25h[?25le[34;83H4-28[30;28H[?25h[?25ln[34;83H5-29[30;29H[?25h[?25ld[34;83H6-30[30;30H[?25h[?25ll[34;83H7-31[30;31H[?25h[?25l;[34;83H8-32[30;32H[?25h[34;1H[K[30;31H[?25l[34;69H^[[30;31H[34;69H  [30;32H[34;79H54,17-31      Bot[30;31H[?25h[?25l[34;69H:[30;31H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 57L, 1352C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppls[Kvim Tasks.cpp[Kvim Tasks.cppls[Kcd Ex-10vim Tasks.cppls[Kcd Ex-10ls[Kmv Ex-8 Ex-10ls[Kcd 3142C++/cisc3142/git log --oneline --decorate --color --max-count=10 --since='2 weeks ago' -n 3 |clip.exe[A]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ [C[C[C[C[C[C[C[C[C[C[8Psince='2 weeks ago' -n 3 |clip.exe
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cpush [Kcommit -m "Exercise 9"[14Padd Ex-9script-2022-11-27.log time-2022-11-27.txt,time-2022-11-27.txt[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cls[Kcd 3142C++/cisc3142/[9Pscript exitvim script-2022-11-27.log ls[Kscript --t=time-$(date +%F).txt -q -a script-$(date +%F).log[A]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ ls[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd ..Ex-93142C++/cisc3142/ls[Krm exit[3Pexitcd ..vim output.txt g++ October.cpp -o October && ./October[24Pvim October.cppg++ October.cpp -o October && ./October[K[K[K[K[K[K[KR[KTals[K[Ksks[C[C[C[C[C[C[C[C[C[1P[1P[1P[1P[1P[1P[1P[1@T[1@a[1@s[1@k[1@s[1P[1P[1P[1P[1P[1P[1P[1@T[1@a[1@s[1@k[1@s
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:22:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn3[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn8[m[Kâ€™?
   22 |  vector<string> {[01;31m[Kcolumn3[m[K,column4,column5,column6,column7,column10};
      |                  [01;31m[K^~~~~~~[m[K
      |                  [32m[Kcolumn8[m[K
[01m[KTasks.cpp:22:26:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn4[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn8[m[Kâ€™?
   22 |  vector<string> {column3,[01;31m[Kcolumn4[m[K,column5,column6,column7,column10};
      |                          [01;31m[K^~~~~~~[m[K
      |                          [32m[Kcolumn8[m[K
[01m[KTasks.cpp:22:34:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn5[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn8[m[Kâ€™?
   22 |  vector<string> {column3,column4,[01;31m[Kcolumn5[m[K,column6,column7,column10};
      |                                  [01;31m[K^~~~~~~[m[K
      |                                  [32m[Kcolumn8[m[K
[01m[KTasks.cpp:22:42:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn6[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn8[m[Kâ€™?
   22 |  vector<string> {column3,column4,column5,[01;31m[Kcolumn6[m[K,column7,column10};
      |                                          [01;31m[K^~~~~~~[m[K
      |                                          [32m[Kcolumn8[m[K
[01m[KTasks.cpp:22:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn7[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn8[m[Kâ€™?
   22 |  vector<string> {column3,column4,column5,column6,[01;31m[Kcolumn7[m[K,column10};
      |                                                  [01;31m[K^~~~~~~[m[K
      |                                                  [32m[Kcolumn8[m[K
[01m[KTasks.cpp:22:58:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn10[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn1[m[Kâ€™?
   22 |  vector<string> {column3,column4,column5,column6,column7,[01;31m[Kcolumn10[m[K};
      |                                                          [01;31m[K^~~~~~~~[m[K
      |                                                          [32m[Kcolumn1[m[K
[01m[KTasks.cpp:22:66:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::vector(<brace-enclosed initializer list>)[m[Kâ€™
   22 |  vector<string> {column3,column4,column5,column6,column7,column10[01;31m[K}[m[K;
      |                                                                  [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:650:2:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _InputIterator, class> std::vector<_Tp, _Alloc>::vector(_InputIterator, _InputIterator, const allocator_type&)[m[Kâ€™
  650 |  [01;36m[Kvector[m[K(_InputIterator __first, _InputIterator __last,
      |  [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:650:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/9/bits/stl_vector.h:622:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  622 |       [01;36m[Kvector[m[K(initializer_list<value_type> __l,
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:622:7:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:604:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  604 |       [01;36m[Kvector[m[K(vector&& __rv, const allocator_type& __m)
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:604:7:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:586:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&, const allocator_type&, std::false_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >; std::false_type = std::integral_constant<bool, false>][m[Kâ€™
  586 |       [01;36m[Kvector[m[K(vector&& __rv, const allocator_type& __m, false_type)
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:586:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:582:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&, const allocator_type&, std::true_type) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >; std::true_type = std::integral_constant<bool, true>][m[Kâ€™
  582 |       [01;36m[Kvector[m[K(vector&& __rv, const allocator_type& __m, true_type) noexcept
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:582:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:572:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  572 |       [01;36m[Kvector[m[K(const vector& __x, const allocator_type& __a)
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:572:7:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:569:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>&&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  569 |       [01;36m[Kvector[m[K(vector&&) noexcept = default;
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:569:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:550:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(const std::vector<_Tp, _Alloc>&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  550 |       [01;36m[Kvector[m[K(const vector& __x)
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:550:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:519:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const value_type&, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  519 |       [01;36m[Kvector[m[K(size_type __n, const value_type& __value,
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:519:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:507:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(std::vector<_Tp, _Alloc>::size_type, const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::size_type = long unsigned int; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  507 |       [01;36m[Kvector[m[K(size_type __n, const allocator_type& __a = allocator_type())
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:507:7:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:494:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector(const allocator_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::allocator_type = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  494 |       [01;36m[Kvector[m[K(const allocator_type& __a) _GLIBCXX_NOEXCEPT
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:494:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 6 provided
[01m[K/usr/include/c++/9/bits/stl_vector.h:484:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::vector() [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >][m[Kâ€™
  484 |       [01;36m[Kvector[m[K() = default;
      |       [01;36m[K^~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:484:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 6 provided
[01m[KTasks.cpp:47:32:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<int>::push_back(std::string&)[m[Kâ€™
   47 |    column8.push_back(popularity[01;31m[K)[m[K;
      |                                [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int][m[Kâ€™
 1184 |       [01;36m[Kpush_back[m[K(const value_type& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} to â€˜[01m[Kconst value_type&[m[Kâ€™ {aka â€˜[01m[Kconst int&[m[Kâ€™}
 1184 |       push_back([01;36m[Kconst value_type& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int][m[Kâ€™
 1200 |       [01;36m[Kpush_back[m[K(value_type&& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} to â€˜[01m[Kstd::vector<int>::value_type&&[m[Kâ€™ {aka â€˜[01m[Kint&&[m[Kâ€™}
 1200 |       push_back([01;36m[Kvalue_type&& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[KTasks.cpp:53:7:[m[K [01;31m[Kerror: [m[Kfound â€˜[01m[K:[m[Kâ€™ in nested-name-specifier, expected â€˜[01m[K::[m[Kâ€™
   53 |  for(x[01;31m[K:[m[Kcolumn2){
      |       [01;31m[K^[m[K
      |       [32m[K::[m[K
[01m[KTasks.cpp:53:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kx[m[Kâ€™ is not a class, namespace, or enumeration
   53 |  for([01;31m[Kx[m[K:column2){
      |      [01;31m[K^[m[K
[01m[KTasks.cpp:57:1:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K}[m[Kâ€™ token
   57 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
[01m[KTasks.cpp:55:3:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[K}[m[Kâ€™ token
   55 |  }
      |   [01;31m[K^[m[K
      |   [32m[K;[m[K
   56 | 
   57 | [32m[K}[m[K
      | [32m[K~[m[K  
[01m[KTasks.cpp:57:1:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K}[m[Kâ€™ token
   57 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
[01m[KTasks.cpp:55:3:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K}[m[Kâ€™ token
   55 |  }
      |   [01;31m[K^[m[K
      |   [32m[K)[m[K
   56 | 
   57 | [32m[K}[m[K
      | [32m[K~[m[K  
[01m[KTasks.cpp:53:5:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K([m[Kâ€™
   53 |  for[01;36m[K([m[Kx:column2){
      |     [01;36m[K^[m[K
[01m[KTasks.cpp:57:1:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K}[m[Kâ€™ token
   57 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 13:59:07 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 57L, 1352C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;25Hstring year,length,title,subject,actor,actress,director,popularity,awardd[3;1Hs,image;[4;25Hgetline(infile, year,[31m';'[m);[5;25H[38;5;130mif[m (!year.empty()){[6;33Hcolumn1.push_back(stoi(year));}[7;25H[38;5;130melse[m{column1.push_back([31m0[m); }[9;25Hgetline(infile, length,[31m';'[m);[10;25Hcolumn2.push_back(stoi(length));[12;25Hgetline(infile, title,[31m';'[m);
               [9Ccolumn3.push_back(title);
                        getline(infile, subject,[31m';'[m);[15;11H              column4.push_back(subject);[15;52H[K[16;10H               getline(infile, actor,[31m';'[m);[16;52H[K[17;11H              column5.push_back(actor);[18;10H               getline(infile, actress,[31m';'[m);[19;9H                column6.push_back(actress);
                        getline(infile, director,[31m';'[m);[21;14H           column7.push_back(director);[22;7H                  getline(infile, popularity,[31m';'[m);[23;25Hcolumn8.push_back(popularity);
                        getline(infile, awards,[31m';'[m);[24;53H[K[25;5H                    getline(infile, image,[35m'\n'[m);[25;53H[K[26;5H                    column10.push_back(image);[26;51H[K[27;1H                }[27;18H[K[28;5H[K[29;5H    [38;5;130mfor[m(x:column2){[29;24H[K[30;5H            cout <<x<<endl;[30;32H[K[31;5H    }[31;10H[K[33;1H}[33;2H[K[34;79H54,17-31      Bot[30;31H[?25h[?25l[34;69H~@k[30;31H[34;69H   [29;23H[106m{[31;9H}[m[34;80H3,16-23[29;23H[?25h[?25l[34;69H~@k[29;23H[34;69H   [28;1H[29;23H{[31;9H}[34;80H2,0-1  [28;1H[?25h[?25l[34;69H~@k[28;1H[34;69H   [27;17H[34;80H1,3-17[27;17H[?25h[?25l[34;69H~@k[27;17H[34;69H   [26;31H[34;80H0,10-31[26;31H[?25h[?25l[34;69H~@k[26;31H[34;69H   [25;31H[34;79H49[25;31H[?25h[?25l[34;69H~@k[25;31H[34;69H   [24;31H[34;80H8[24;31H[?25h[?25l[34;69H~@k[24;31H[34;69H   [23;31H[34;80H7[23;31H[?25h[?25l[34;69H~@k[23;31H[34;69H   [22;31H[34;80H6[22;31H[?25h[?25l[34;69H~@k[22;31H[34;69H   [21;31H[34;80H5[21;31H[?25h[?25l[34;69H~@k[21;31H[34;69H   [20;31H[34;80H4[20;31H[?25h[?25l[34;69H~@k[20;31H[34;69H   [19;31H[34;80H3[19;31H[?25h[?25l[34;69H~@k[19;31H[34;69H   [18;31H[34;80H2[18;31H[?25h[?25l[34;69H~@k[18;31H[34;69H   [17;31H[34;80H1[17;31H[?25h[?25l[34;69H~@k[17;31H[34;69H   [16;31H[34;80H0[16;31H[?25h[?25l[34;69H~@k[16;31H[34;69H   [15;31H[34;79H39[15;31H[?25h[?25l[34;69H~@k[15;31H[34;69H   [14;31H[34;80H8[14;31H[?25h[?25l[34;69H~@k[14;31H[34;69H   [13;31H[34;80H7[13;31H[?25h[?25l[34;69H~@k[13;31H[34;69H   [12;31H[34;80H6[12;31H[?25h[?25l[34;69H~@k[12;31H[34;69H   [11;24H[34;80H5,3-24 [11;24H[?25h[?25l[34;69H~@k[11;24H[34;69H   [10;31H[34;80H4,10-31[10;31H[?25h[?25l[34;69H~@k[10;31H[34;69H   [9;31H[34;80H3[9;31H[?25h[?25l[34;69H~@k[9;31H[34;69H   [8;1H[34;80H2,0-1  [8;1H[?25h[?25l[34;69H~@k[8;1H[34;69H   [7;31H[34;80H1,10-31[7;31H[?25h[?25l[34;69H~@k[7;31H[34;69H   [6;32H[34;80H0,4-32 [6;32H[?25h[?25l[34;69H~@k[6;32H[34;69H   [6;31H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(getline(infile,x)){[34;1H[K[34;79H29,10-31      96%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;31H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;79H[K[34;79H28,10-31      92%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;31H[1;33r[1;1H[2L[1;34r[1;9Hvector<string> {column3,column4,column5,column6,column7,column10};[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,10-31      84%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,0-1[8C80%[6;1H[?25h[?25l[34;69H~@k[6;1H[34;69H   [6;31H[1;33r[1;1H[L[1;34r[1;9Hstring x;[6;22H[106m([8C)[m[34;79H[K[34;79H25,24-31      76%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;23H[1;33r[1;1H[L[1;34r[7;22H([8C)[34;79H[K[34;79H24,16-23      72%[6;23H[?25h[?25l[34;69H~@k[6;23H[34;69H   [6;18H[1;33r[1;1H[L[1;34r[1;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H23,11-18      68%[6;18H[?25h[?25l[34;69H~@k[6;18H[34;69H   [6;31H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;79H[K[34;79H22,24-31      64%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;31H[1;33r[1;1H[L[1;34r[1;9H}[34;79H[K[34;79H21,24-31      60%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [7;31H[34;80H2[7;31H[?25h[?25l[34;69H~@k[7;31H[34;69H   [7;30H[34;83H3-30[7;30H[?25h[?25l[34;69H~@k[7;30H[34;69H   [7;29H[34;83H2-29[7;29H[?25h[?25l[34;69H~@k[7;29H[34;69H   [7;28H[34;83H1-28[7;28H[?25h[?25l[34;69H~@k[7;28H[34;69H   [7;27H[34;83H0-27[7;27H[?25h[?25l[34;69H~@k[7;27H[34;69H   [7;26H[34;82H19-26[7;26H[?25h[?25l[34;69H~@k[7;26H[34;69H   [7;25H[34;83H8-25[7;25H[?25h[?25l[34;69H~@k[7;25H[34;69H   [7;24H[106m{[48C}[m[34;83H7-24[7;24H[?25h[?25l[34;69Hi[7;24H[34;69H [7;24H[34;1H[1m-- INSERT --[m[34;79H[K[34;79H22,17-24      60%[7;24H[?25h[?25l[34;83H8-25[7;25H[?25h[?25l[106mc[molumn3,column4,column5,column6,column7,column10}[106m;[m[7;74H[K[7;24Hc[48C;[34;83H7-24[7;24H[?25h[?25l[34;83H8-25[7;25H[?25h[?25l[34;83H9-26[7;26H[?25h[?25l[34;82H20-27[7;27H[?25h[?25l[34;83H1-28[7;28H[?25h[?25l[34;83H2-29[7;29H[?25h[?25l[34;83H3-30[7;30H[?25h[?25l[34;83H4-31[7;31H[?25h[?25l[34;83H5-32[7;32H[?25h[?25l[34;83H6-33[7;33H[?25h[?25l[34;83H7-34[7;34H[?25h[?25l[34;83H8-35[7;35H[?25h[?25l[34;83H9-36[7;36H[?25h[?25l[34;82H30-37[7;37H[?25h[?25l[34;83H1-38[7;38H[?25h[?25l[34;83H2-39[7;39H[?25h[?25l[34;83H3-40[7;40H[?25h[?25l[34;83H4-41[7;41H[?25h[?25l[34;83H5-42[7;42H[?25h[?25l[34;83H6-43[7;43H[?25h[?25l[34;83H7-44[7;44H[?25h[?25l[34;83H8-45[7;45H[?25h[?25l[34;83H9-46[7;46H[?25h[?25l[34;82H40-47[7;47H[?25h[?25l[34;83H1-48[7;48H[?25h[?25l[34;83H2-49[7;49H[?25h[?25l[34;83H3-50[7;50H[?25h[?25l[34;83H4-51[7;51H[?25h[?25l[34;83H5-52[7;52H[?25h[?25l[34;83H6-53[7;53H[?25h[?25l[34;83H7-54[7;54H[?25h[?25l[34;83H8-55[7;55H[?25h[?25l[34;83H9-56[7;56H[?25h[?25l[34;82H50-57[7;57H[?25h[?25l[34;83H1-58[7;58H[?25h[?25l[34;83H2-59[7;59H[?25h[?25l[34;83H3-60[7;60H[?25h[?25l[34;83H4-61[7;61H[?25h[?25l[34;83H5-62[7;62H[?25h[?25l[34;83H6-63[7;63H[?25h[?25l[34;83H7-64[7;64H[?25h[?25l[34;83H8-65[7;65H[?25h[?25l[34;83H9-66[7;66H[?25h[?25l[34;82H60-67[7;67H[?25h[?25l[34;83H1-68[7;68H[?25h[?25l[34;83H2-69[7;69H[?25h[?25l[34;83H3-70[7;70H[?25h[?25l[34;83H4-71[7;71H[?25h[?25l[34;83H5-72[7;72H[?25h[?25l[34;83H6-73[7;73H[?25h[?25l;[7;73H[K[34;83H5-72[7;72H[?25h[34;1H[K[7;71H[?25l[34;69H^[[7;71H[34;69H  [7;72H[34;79H22,64-71      60%[7;71H[?25h[?25l[34;69H:[7;71H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 57L, 1350C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:47:32:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<int>::push_back(std::string&)[m[Kâ€™
   47 |    column8.push_back(popularity[01;31m[K)[m[K;
      |                                [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int][m[Kâ€™
 1184 |       [01;36m[Kpush_back[m[K(const value_type& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} to â€˜[01m[Kconst value_type&[m[Kâ€™ {aka â€˜[01m[Kconst int&[m[Kâ€™}
 1184 |       push_back([01;36m[Kconst value_type& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int][m[Kâ€™
 1200 |       [01;36m[Kpush_back[m[K(value_type&& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} to â€˜[01m[Kstd::vector<int>::value_type&&[m[Kâ€™ {aka â€˜[01m[Kint&&[m[Kâ€™}
 1200 |       push_back([01;36m[Kvalue_type&& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[KTasks.cpp:53:7:[m[K [01;31m[Kerror: [m[Kfound â€˜[01m[K:[m[Kâ€™ in nested-name-specifier, expected â€˜[01m[K::[m[Kâ€™
   53 |  for(x[01;31m[K:[m[Kcolumn2){
      |       [01;31m[K^[m[K
      |       [32m[K::[m[K
[01m[KTasks.cpp:53:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kx[m[Kâ€™ is not a class, namespace, or enumeration
   53 |  for([01;31m[Kx[m[K:column2){
      |      [01;31m[K^[m[K
[01m[KTasks.cpp:57:1:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K}[m[Kâ€™ token
   57 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
[01m[KTasks.cpp:55:3:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[K}[m[Kâ€™ token
   55 |  }
      |   [01;31m[K^[m[K
      |   [32m[K;[m[K
   56 | 
   57 | [32m[K}[m[K
      | [32m[K~[m[K  
[01m[KTasks.cpp:57:1:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K}[m[Kâ€™ token
   57 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
[01m[KTasks.cpp:55:3:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K}[m[Kâ€™ token
   55 |  }
      |   [01;31m[K^[m[K
      |   [32m[K)[m[K
   56 | 
   57 | [32m[K}[m[K
      | [32m[K~[m[K  
[01m[KTasks.cpp:53:5:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K([m[Kâ€™
   53 |  for[01;36m[K([m[Kx:column2){
      |     [01;36m[K^[m[K
[01m[KTasks.cpp:57:1:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K}[m[Kâ€™ token
   57 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:00:10 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 57L, 1350C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[11;9Hifstream infile;[12;9Hinfile.open([31m"films.txt"[m);
        [38;5;130mif[m(infile.fail()){
                cout << [31m"Error with file"[m;[14;43H[K[15;11H      exit([31m1[m);[15;28H[K[16;9H}[16;10H[K[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[19;9H[K[20;1H        string x;[20;18H[K[21;9Hvector <[32mint[m> column1, column2,column8;[22;7H  vector<string> column3,column4,column5,column6,column7,column10;[23;9H[32mint[m sum=[31m0[m;
        [32mdouble[m average;[24;25H[K[25;5H    [38;5;130mwhile[m(getline(infile,x)){[25;35H[K[26;5H[K[27;1H                        string year,length,title,subject,actor,actress,director,popularity,awardd[28;1Hs,image;[28;9H[K[29;5H                    getline(infile, year,[31m';'[m);
                        [38;5;130mif[m (!year.empty()){[30;44H[K[31;5H                            column1.push_back(stoi(year));}[32;25H[38;5;130melse[m{column1.push_back([31m0[m); }[33;1H[K[34;79H22,64-71      Top[22;71H[?25h[?25l[34;69H~@k[22;71H[34;69H   [23;18H[34;80H3,11-18[23;18H[?25h[?25l[34;69H~@k[23;18H[34;69H   [24;23H[34;80H4,16-23[24;23H[?25h[?25l[34;69H~@k[24;23H[34;69H   [25;33H[34;80H5,26-3[25;33H[?25h[?25l[34;69H~@k[25;33H[34;69H   [26;1H[34;80H6,0-1  [26;1H[?25h[?25l[34;69H~@k[26;1H[34;69H   [27;71H[34;80H7,50-71[27;71H[?25h[?25l[34;69H~@k[27;71H[34;69H   [28;50H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, length,[31m';'[m);[34;1H[K[34;79H28,29-50[7C4%[28;50H[?25h[?25l[34;69H~@k[28;50H[34;69H   [28;43H[1;33r[33;1H
[1;34r[28;43H[106m{[29;63H}[m[33;25Hcolumn2.push_back(stoi(length));[34;79H[K[34;79H29,22-43[7C8%[28;43H[?25h[?25l[34;69H~@k[28;43H[34;69H   [28;63H[1;33r[33;1H
[1;34r[34;79H[K[34;79H30,35-63      12%[28;63H[?25h[?25l[34;69H~@k[28;63H[34;69H   [28;52H[1;33r[33;1H
[1;34r[26;43H{[27;63H}[28;29H[106m{[22C}[m[33;25Hgetline(infile, title,[31m';'[m);[34;79H[K[34;79H31,31-52      16%[28;52H[?25h[?25l[34;69H~@k[28;52H[34;69H   [28;1H[1;33r[33;1H
[1;34r[27;29H{[22C}[33;25Hcolumn3.push_back(title);[34;79H[K[34;79H32,0-1[8C20%[28;1H[?25h[?25l[34;69H~@k[28;1H[34;69H   [28;52H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;79H[K[34;79H33,31-52      24%[28;52H[?25h[?25l[34;69H~@k[28;52H[34;69H   [28;56H[1;33r[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;79H[K[34;79H34,35-56      28%[28;56H[?25h[?25l[34;69H~@k[28;56H[34;69H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;79H[K[34;79H35,3-24[7C32%[28;24H[?25h[?25l[34;69H~@k[28;24H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;79H[K[34;79H36,30-51      36%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;49H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;79H[K[34;79H37,28-49      40%[28;49H[?25h[?25l[34;69H~@k[28;49H[34;69H   [28;53H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;79H[K[34;79H38,32-53      44%[28;53H[?25h[?25l[34;69H~@k[28;53H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;79H[K[34;79H39,30-51      48%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;79H[K[34;79H40,30-51      52%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;49H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, popularity,[31m';'[m);[34;79H[K[34;79H41,28-49      56%[28;49H[?25h[?25l[34;69H~@k[28;49H[34;69H   [28;53H[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(popularity);[34;79H[K[34;79H42,32-53      60%[28;53H[?25h[?25l[34;69H~@k[28;53H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H43,30-51      64%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;54H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H44,33-54      68%[28;54H[?25h[?25l[34;69H~@k[28;54H[34;69H   [28;52H[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H45,31-52      72%[28;52H[?25h[?25l[34;69H~@k[28;52H[34;69H   [28;56H[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H46,35-56      76%[28;56H[?25h[?25l[34;69H~@k[28;56H[34;69H   [28;54H[1;33r[33;1H
[1;34r[34;79H[K[34;79H47,33-54      80%[28;54H[?25h[?25l[34;69H~@k[28;54H[34;69H   [28;52H[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m(x:column2){[34;79H[K[34;79H48,31-52      84%[28;52H[?25h[?25l[34;69H~@k[28;52H[34;69H   [28;52H[1;33r[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;79H[K[34;79H49,31-52      88%[28;52H[?25h[?25l[34;69H~@k[28;52H[34;69H   [28;50H[1;33r[33;1H
[1;34r[33;9H}[34;79H[K[34;79H50,29-50      92%[28;50H[?25h[?25l[34;69H~@k[28;50H[34;69H   [28;17H[1;33r[33;1H
[1;34r[1;33H[106m{[28;17H}[m[34;79H[K[34;79H51,3-17[7C96%[28;17H[?25h[?25l[34;69H~@k[28;17H[34;69H   [28;1H[1;33r[33;1H
[1;34r[27;17H}[33;1H}[34;79H[K[34;79H52,0-1[8CBot[28;1H[?25h[?25l[34;69H~@k[28;1H[34;69H   [29;23H[106m{[31;9H}[m[34;80H3,16-23[29;23H[?25h[?25l[34;69H~@k[29;23H[34;69H   [30;31H[29;23H{[31;9H}[34;80H4,17-31[30;31H[?25h[?25l[34;69H~@k[30;31H[34;69H   [31;9H[29;23H[106m{[31;9H}[m[34;80H5,2-9  [31;9H[?25h[?25l[34;69H~@k[31;9H[34;69H   [32;8H[29;23H{[31;9H}[34;80H6,1-8[32;8H[?25h[?25l[34;69H~@k[32;8H[34;69H   [31;9H[29;23H[106m{[31;9H}[m[34;80H5,2-9[31;9H[?25h[?25l[34;69H~@k[31;9H[34;69H   [32;8H[29;23H{[31;9H}[34;80H6,1-8[32;8H[?25h[?25l[34;69H~@k[32;8H[34;69H   [33;1H[34;80H7,1  [33;1H[?25h[?25l[34;69H~@k[33;1H[34;69H   [33;1H[?25h[?25l[34;69H~@k[33;1H[34;69H   [32;8H[34;80H6,1-8[32;8H[?25h[?25l[34;69H~@k[32;8H[34;69H   [31;9H[29;23H[106m{[31;9H}[m[34;80H5,2-9[31;9H[?25h[?25l[34;69H~@k[31;9H[34;69H   [30;31H[29;23H{[31;9H}[34;80H4,17-31[30;31H[?25h[?25l[34;69H~@k[30;31H[34;69H   [29;23H[106m{[31;9H}[m[34;80H3,16-23[29;23H[?25h[?25l[34;69H~@k[29;23H[34;69H   [28;1H[29;23H{[31;9H}[34;80H2,0-1  [28;1H[?25h[?25l[34;69H~@k[28;1H[34;69H   [27;17H[34;80H1,3-17[27;17H[?25h[?25l[34;69H~@k[27;17H[34;69H   [26;50H[34;80H0,29-50[26;50H[?25h[?25l[34;69H~@k[26;50H[34;69H   [25;52H[34;79H49,31-52[25;52H[?25h[?25l[34;69H~@k[25;52H[34;69H   [24;52H[34;80H8[24;52H[?25h[?25l[34;69H~@k[24;52H[34;69H   [23;54H[34;80H7,33-54[23;54H[?25h[?25l[34;69H~@k[23;54H[34;69H   [22;56H[34;80H6,35-56[22;56H[?25h[?25l[34;69H~@k[22;56H[34;69H   [21;52H[34;80H5,31-52[21;52H[?25h[?25l[34;69H~@k[21;52H[34;69H   [20;54H[34;80H4,33-54[20;54H[?25h[?25l[34;69H~@k[20;54H[34;69H   [19;51H[34;80H3,30-51[19;51H[?25h[?25l[34;69H~@k[19;51H[34;69H   [18;53H[34;80H2,32-53[18;53H[?25h[?25l[34;69H~@k[18;53H[34;69H   [17;49H[34;80H1,28-49[17;49H[?25h[?25l[34;69H~@k[17;49H[34;69H   [16;51H[34;80H0,30-51[16;51H[?25h[?25l[34;69H~@k[16;51H[34;69H   [15;51H[34;79H39[15;51H[?25h[?25l[34;69H~@k[15;51H[34;69H   [14;53H[34;80H8,32-53[14;53H[?25h[?25l[34;69H~@k[14;53H[34;69H   [13;49H[34;80H7,28-49[13;49H[?25h[?25l[34;69H~@k[13;49H[34;69H   [12;51H[34;80H6,30-51[12;51H[?25h[?25l[34;69H~@k[12;51H[34;69H   [11;24H[34;80H5,3-24 [11;24H[?25h[?25l[34;69H~@k[11;24H[34;69H   [10;56H[34;80H4,35-56[10;56H[?25h[?25l[34;69H~@k[10;56H[34;69H   [9;52H[34;80H3,31-52[9;52H[?25h[?25l[34;69H~@k[9;52H[34;69H   [8;1H[34;80H2,0-1  [8;1H[?25h[?25l[34;69H~@k[8;1H[34;69H   [7;52H[7;29H[106m{[22C}[m[34;80H1,31-52[7;52H[?25h[?25l[34;69H~@k[7;52H[34;69H   [6;63H[5;43H[106m{[6;63H}[m[7;29H{[22C}[34;80H0,35-63[6;63H[?25h[?25l[34;69H~@k[6;63H[34;69H   [6;43H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(getline(infile,x)){[34;79H[K[34;79H29,22-43      96%[6;43H[?25h[?25l[34;69H~@k[6;43H[34;69H   [6;50H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[7;43H{[8;63H}[34;79H[K[34;79H28,29-50      92%[6;50H[?25h[?25l[34;69H~@k[6;50H[34;69H   [6;71H[1;33r[1;1H[2L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,50-71      84%[6;71H[?25h[?25l[34;69H~@k[6;71H[34;69H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,0-1[8C80%[6;1H[?25h[?25l[34;69H~@k[6;1H[34;69H   [6;33H[1;33r[1;1H[L[1;34r[1;9Hstring x;[6;33H[106m{[33;17H}[m[34;79H[K[34;79H25,26-33      76%[6;33H[?25h[?25l[34;69H~@k[6;33H[34;69H   [6;23H[1;33r[1;1H[L[1;34r[7;33H{[34;79H[K[34;79H24,16-23      72%[6;23H[?25h[?25l[34;69H~@k[6;23H[34;69H   [6;18H[1;33r[1;1H[L[1;34r[1;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H23,11-18      68%[6;18H[?25h[?25l[34;69H~@k[6;18H[34;69H   [6;71H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;79H[K[34;79H22,64-71      64%[6;71H[?25h[?25l[34;69H~@k[6;71H[34;69H   [7;18H[34;80H3,11-18[7;18H[?25h[?25l[34;69H~@k[7;18H[34;69H   [8;23H[34;80H4,16-23[8;23H[?25h[?25l[34;69H~@k[8;23H[34;69H   [9;33H[34;80H5,26-3[9;33H[?25h[?25l[34;69H~@k[9;33H[34;69H   [10;1H[34;80H6,0-1  [10;1H[?25h[?25l[34;69H~@k[10;1H[34;69H   [10;1H[?25h[?25l[34;69H~@k[10;1H[34;69H   [10;1H[?25h[?25l[34;69Hi[10;1H[34;69H [10;1H[34;1H[1m-- INSERT --[m[34;79H[K[34;79H26,1[10C64%[10;1H[?25h[?25l[34;80H5[9;1H[?25h[?25l[34;82H2-9[9;9H[?25h[?25l[34;82H3-10[9;10H[?25h[?25l[34;82H4-11[9;11H[?25h[?25l[34;82H5-12[9;12H[?25h[?25l[34;82H6-13[9;13H[?25h[?25l[1C[106m([17C)[m[34;82H7-14[9;14H[?25h[?25l[34;82H8-15[9;15H[?25h[?25l([17C)[34;82H9-16[9;16H[?25h[?25l[34;82H27-34[9;34H[?25h[?25l[34;83H6-33[9;33H[?25h[?25l[34;80H6,1    [10;1H[?25h[?25l[34;80H7,12-33[11;33H[?25h[?25l[13;32H[106m([16C)[m[34;80H8[13;33H[?25h[?25l([16C)[34;80H9[14;33H[?25h[?25l[34;79H30,5-33 [15;33H[?25h[?25l[34;80H1,12-33[16;33H[?25h[?25l[34;80H2,1    [17;1H[?25h[?25l[18;32H[106m([18C)[m[34;80H3,12-33[18;33H[?25h[?25l([18C)[34;80H4[19;33H[?25h[?25l[34;80H5,4-25 [20;25H[?25h[?25l[21;32H[106m([17C)[m[34;80H6,12-33[21;33H[?25h[?25l([17C)[34;80H7[22;33H[?25h[?25l[23;32H[106m([19C)[m[34;80H8[23;33H[?25h[?25l([19C)[34;80H9[24;33H[?25h[?25l[25;32H[106m([17C)[m[34;79H40[25;33H[?25h[?25l([17C)[34;80H1[26;33H[?25h[?25l[27;32H[106m([19C)[m[34;80H2[27;33H[?25h[?25l([19C)[34;80H3[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H44,12-33      68%[28;32H[106m([20C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H45,12-33      72%[27;32H([20C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H46,12-33      76%[28;32H[106m([22C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[34;79H[K[34;79H47,12-33      80%[27;32H([22C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m(x:column2){[34;79H[K[34;79H48,12-33      84%[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;79H[K[34;79H49,12-33      88%[27;32H([18C)[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9H}[34;79H[K[34;79H50,12-33      92%[27;32H([18C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H51,4-18[7C96%[1;33H[106m{[28;17H}[?25h[?25l[1;33r[m[33;1H
[1;34r[33;1H}[34;79H[K[34;79H52,1[10CBot[27;17H}
[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H3,17-24[29;24H[?25h[?25l{[31;9H}[34;80H4,18-32[30;32H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5,3-10 [31;10H[?25h[?25l[29;23H{[31;9H}[34;80H6,2-9 [32;9H[?25h[?25l[34;80H7,2  [33;2H[?25h[?25l[34;80H6,2-9[32;9H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5,3-10[31;10H[?25h[?25l[29;23H{[31;9H}[34;80H4,18-32[30;32H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H3,17-24[29;24H[?25h[?25l{[31;9H}[34;80H4,18-32[30;32H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5,3-10 [31;10H[?25h[?25l[29;23H{[31;9H}[34;80H6,2-9 [32;9H[?25h[?25l[34;80H7,2  [33;2H[?25h[?25l[34;82H1[33;1H[?25h[?25l[34;80H6[32;1H[?25h[?25l[34;80H5[31;1H[?25h[?25l[34;80H4[30;1H[?25h[?25l[34;80H3[29;1H[?25h[?25l[34;80H2[28;1H[?25h[?25l[34;80H1[27;1H[?25h[?25l[34;80H0[26;1H[?25h[?25l[34;79H49[25;1H[?25h[?25l[34;80H8[24;1H[?25h[?25l[34;80H7[23;1H[?25h[?25l[34;80H6[22;1H[?25h[?25l[34;80H5[21;1H[?25h[?25l[34;80H4[20;1H[?25h[?25l[34;80H3[19;1H[?25h[?25l[34;80H2[18;1H[?25h[?25l[34;80H1[17;1H[?25h[?25l[34;80H0[16;1H[?25h[?25l[34;79H39[15;1H[?25h[?25l[34;80H8[14;1H[?25h[?25l[34;80H7[13;1H[?25h[?25l[34;80H6[12;1H[?25h[?25l[34;80H5[11;1H[?25h[?25l[34;80H4[10;1H[?25h[?25l[34;80H3[9;1H[?25h[?25l[34;80H2[8;1H[?25h[?25l[34;80H1[7;1H[?25h[?25l[34;80H0[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(getline(infile,x)){[34;79H[K[34;79H29,1[10C96%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;79H[K[34;79H28,1[10C92%[6;1H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,1[10C84%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,1[10C80%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hstring x;[34;79H[K[34;79H25,1[10C76%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H24,1[10C72%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H23,1[10C68%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;79H[K[34;79H22,1[10C64%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;79H[K[34;79H21,1[10C60%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;79H[K[34;79H20,1[10C56%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;79H[K[34;79H19,1[10C52%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;79H[K[34;79H18,1[10C48%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;79H[K[34;79H17,1[10C44%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hifstream infile;[34;79H[K[34;79H16,1[10C40%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[32mint[m main(){[34;79H[K[34;79H15,1[10C36%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H14,1[10C32%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[38;5;130musing[m [32mnamespace[m std;[34;79H[K[34;79H13,1[10C28%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H12,1[10C24%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<vector>[m[34;79H[K[34;79H11,1[10C20%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<limits>[m[34;79H[K[34;79H10,1[10C16%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<string>[m[34;79H[K[34;79H9,1[11C12%[6;1H[?25h[?25l[34;79H10,1[7;1H[?25h[?25l[34;82H2[7;2H[?25h[?25l[34;82H3[7;3H[?25h[?25l[34;82H4[7;4H[?25h[?25l[34;82H5[7;5H[?25h[?25l[34;82H6[7;6H[?25h[?25l[34;82H7[7;7H[?25h[?25l[34;82H8[7;8H[?25h[?25ln[106m()[m[34;82H9[7;9H[?25h[?25l[34;82H10[7;10H[?25h[?25l()[34;83H1[7;11H[?25h[?25l[34;83H2[7;12H[?25h[?25l[34;83H1[7;11H[?25h[?25l[34;80H1,4-11[8;11H[?25h[?25l[34;80H2[9;11H[?25h[?25l[10;11H[106m([13C)[m[34;80H3[10;11H[?25h[?25l([13C)[34;80H4,2-9 [11;9H[?25h[?25l[34;80H5[12;9H[?25h[?25l[10;26H[106m{[13;9H}[m[34;80H6,3-10[13;10H[?25h[?25l[10;26H{[13;9H}[34;80H7,4-11[14;11H[?25h[?25l[34;80H8[15;11H[?25h[?25l[34;80H9,2-9 [16;9H[?25h[?25l[34;79H20,4-11[17;11H[?25h[?25l[34;80H1[18;11H[?25h[?25l[34;80H2[19;11H[?25h[?25l[34;80H3[20;11H[?25h[?25l[34;80H4[21;11H[?25h[?25l[34;80H5[22;11H[?25h[?25l[34;80H6,1   [23;1H[?25h[?25l[34;80H7,2-9[24;9H[?25h[?25l[34;80H6,1  [23;1H[?25h[?25l[34;80H5,4-11[22;11H[?25h[?25l[34;80H4[21;11H[?25h[?25l[34;80H3[20;11H[?25h[?25l[34;80H2[19;11H[?25h[?25l[34;80H1[18;11H[?25h[?25l[34;80H0[17;11H[?25h[?25l[34;79H19,2-9 [16;9H[?25h[?25l[34;80H8,4-11[15;11H[?25h[?25l[34;80H7[14;11H[?25h[?25l[10;26H[106m{[13;9H}[m[34;80H6,3-10[13;10H[?25h[?25l[10;26H{[13;9H}[34;80H7,4-11[14;11H[?25h[?25l[34;80H8[15;11H[?25h[?25l[34;80H9,2-9 [16;9H[?25h[?25l[34;79H20,4-11[17;11H[?25h[?25l[34;80H1[18;11H[?25h[?25l[34;80H2[19;11H[?25h[?25l[34;80H1[18;11H[?25h[?25l[34;80H0[17;11H[?25h[?25l[34;79H19,2-9 [16;9H[?25h[?25l[34;80H8,4-11[15;11H[?25h[?25l[34;80H7[14;11H[?25h[?25l[10;26H[106m{[13;9H}[m[34;80H6,3-10[13;10H[?25h[?25l[10;26H{[13;9H}[34;80H7,4-11[14;11H[?25h[?25l[34;80H8[15;11H[?25h[?25l[34;80H9,2-9 [16;9H[?25h[?25l[34;79H20,4-11[17;11H[?25h[?25l[34;80H1[18;11H[?25h[?25l[34;80H2[19;11H[?25h[?25l[34;80H3[20;11H[?25h[?25l[34;80H4[21;11H[?25h[?25l[34;80H5[22;11H[?25h[?25l[34;82H5-12[22;12H[?25h[?25l[34;82H6-13[22;13H[?25h[?25l[1C[106m([17C)[m[34;82H7-14[22;14H[?25h[?25l[34;82H8-15[22;15H[?25h[?25l([17C)[34;82H9-16[22;16H[?25h[?25l[34;82H10-17[22;17H[?25h[?25l[34;83H1-18[22;18H[?25h[?25l[34;83H2-19[22;19H[?25h[?25l[34;83H3-20[22;20H[?25h[?25l[34;83H4-21[22;21H[?25h[?25le[106m([8C)[m[34;83H5-22[22;22H[?25h[?25l[34;83H6-23[22;23H[?25h[?25l([8C)[34;83H7-24[22;24H[?25h[?25l[34;83H8-25[22;25H[?25h[?25l[34;83H9-26[22;26H[?25h[?25l[34;82H20-27[22;27H[?25h[?25l[34;83H1-28[22;28H[?25h[?25l[34;83H2-29[22;29H[?25h[?25l[34;83H3-30[22;30H[?25h[?25l[22;22H[106m([8C)[m[34;83H4-31[22;31H[?25h[?25l[22;14H[106m([m[7C([8C)[106m)[m[34;83H5-32[22;32H[?25h[?25l[22;14H([17C)[34;83H6-33[22;33H[?25h[?25l[34;83H7-34[22;34H[?25h[?25l[34;83H6-33[22;33H[?25h[?25l[34;80H6,1    [23;1H[?25h[?25l[34;80H7,12-33[24;33H[?25h[?25l[26;32H[106m([16C)[m[34;80H8[26;33H[?25h[?25l([16C)[34;80H9[27;33H[?25h[?25l[34;79H30,5-33 [28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;79H[K[34;79H31,12-33      16%[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;79H[K[34;79H32,1[10C20%[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;79H[K[34;79H33,12-33      24%[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;79H[K[34;79H34,12-33      28%[27;32H([18C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;79H[K[34;79H35,4-25[7C32%[28;25H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;79H[K[34;79H36,12-33      36%[28;32H[106m([17C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;79H[K[34;79H37,12-33      40%[27;32H([17C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;79H[K[34;79H38,12-33      44%[28;32H[106m([19C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;79H[K[34;79H39,12-33      48%[27;32H([19C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;79H[K[34;79H40,12-33      52%[28;32H[106m([17C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, popularity,[31m';'[m);[34;79H[K[34;79H41,12-33      56%[27;32H([17C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(popularity);[34;79H[K[34;79H42,12-33      60%[28;32H[106m([19C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H43,12-33      64%[27;32H([19C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H44,12-33      68%[28;32H[106m([20C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H45,12-33      72%[27;32H([20C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H46,12-33      76%[28;32H[106m([22C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[34;79H[K[34;79H47,12-33      80%[27;32H([22C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m(x:column2){[34;79H[K[34;79H48,12-33      84%[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;79H[K[34;79H49,12-33      88%[27;32H([18C)[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9H}[34;79H[K[34;79H50,12-33      92%[27;32H([18C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H51,4-18[7C96%[1;33H[106m{[28;17H}[?25h[?25l[1;33r[m[33;1H
[1;34r[33;1H}[34;79H[K[34;79H52,1[10CBot[27;17H}
[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H3,17-24[29;24H[?25h[?25l{[31;9H}[34;80H4,18-32[30;32H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5,3-10 [31;10H[?25h[?25l[29;23H{[31;9H}[34;80H4,18-32[30;32H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H3,17-24[29;24H[?25h[?25l{[31;9H}[34;80H2,1    [28;1H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H3,17-24[29;24H[?25h[?25l{[31;9H}[34;80H4,18-32[30;32H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5,3-10 [31;10H[?25h[?25l[29;23H{[31;9H}[34;80H6,2-9 [32;9H[?25h[?25l[34;80H7,2  [33;2H[?25h[?25l[34;82H1[33;1H[?25h[?25l[34;80H6[32;1H[?25h[?25l[34;80H5[31;1H[?25h[?25l[34;80H4[30;1H[?25h[?25l[34;80H3[29;1H[?25h[?25l[34;80H4[30;1H[?25h[?25l[34;80H5[31;1H[?25h[?25l[34;80H4[30;1H[?25h[?25l[34;80H3[29;1H[?25h[?25l[34;80H2[28;1H[?25h[?25l[34;80H1[27;1H[?25h[?25l[34;80H0[26;1H[?25h[?25l[34;79H49[25;1H[?25h[?25l[34;80H8[24;1H[?25h[?25l[34;80H7[23;1H[?25h[?25l[34;80H6[22;1H[?25h[?25l[34;80H5[21;1H[?25h[?25l[34;80H4[20;1H[?25h[?25l[34;80H3[19;1H[?25h[?25l[34;80H2[18;1H[?25h[?25l[34;80H1[17;1H[?25h[?25l[34;80H0[16;1H[?25h[?25l[34;79H39[15;1H[?25h[?25l[34;80H8[14;1H[?25h[?25l[34;80H7[13;1H[?25h[?25l[34;80H6[12;1H[?25h[?25l[34;80H5[11;1H[?25h[?25l[34;80H4[10;1H[?25h[?25l[34;80H3[9;1H[?25h[?25l[34;80H2[8;1H[?25h[?25l[34;80H1[7;1H[?25h[?25l[34;80H0[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(getline(infile,x)){[34;79H[K[34;79H29,1[10C96%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;79H[K[34;79H28,1[10C92%[6;1H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,1[10C84%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,1[10C80%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hstring x;[34;79H[K[34;79H25,1[10C76%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H24,1[10C72%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H23,1[10C68%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;79H[K[34;79H22,1[10C64%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;79H[K[34;79H21,1[10C60%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;79H[K[34;79H20,1[10C56%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;79H[K[34;79H19,1[10C52%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;79H[K[34;79H18,1[10C48%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;79H[K[34;79H17,1[10C44%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hifstream infile;[34;79H[K[34;79H16,1[10C40%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[32mint[m main(){[34;79H[K[34;79H15,1[10C36%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H14,1[10C32%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[38;5;130musing[m [32mnamespace[m std;[34;79H[K[34;79H13,1[10C28%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H12,1[10C24%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<vector>[m[34;79H[K[34;79H11,1[10C20%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<limits>[m[34;79H[K[34;79H10,1[10C16%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<string>[m[34;79H[K[34;79H9,1[11C12%[6;1H[?25h[?25l[34;79H10,1[7;1H[?25h[?25l[34;82H2[7;2H[?25h[?25l[34;82H3[7;3H[?25h[?25l[34;82H4[7;4H[?25h[?25l[34;82H5[7;5H[?25h[?25l[34;82H6[7;6H[?25h[?25l[34;82H7[7;7H[?25h[?25l[34;82H8[7;8H[?25h[?25ln[106m()[m[34;82H9[7;9H[?25h[?25l[34;82H10[7;10H[?25h[?25l()[34;80H1,3-10[8;10H[?25h[?25l[34;82H4-11[8;11H[?25h[?25l[34;80H0,11  [7;11H[?25h[?25l[34;83H2[7;12H[?25h[?25l}[106m{}[m[34;83H3[7;13H[?25h[?25l[34;83H2[7;12H[?25h[?25l[34;83H3[7;13H[?25h[?25l[7;12H[K[7;11H{[34;83H2[7;12H[?25h[?25l[34;80H1,5-12[8;12H[?25h[?25l[34;80H2[9;12H[?25h[?25l[10;11H[106m([13C)[m[34;80H3[10;12H[?25h[?25l([13C)[34;80H4,2-9 [11;9H[?25h[?25l[34;80H5[12;9H[?25h[?25l[10;26H[106m{[13;9H}[m[34;80H6,3-10[13;10H[?25h[?25l[10;26H{[13;9H}[34;80H7,5-12[14;12H[?25h[?25l[34;80H8[15;12H[?25h[?25l[34;80H9,2-9 [16;9H[?25h[?25l[34;79H20,5-12[17;12H[?25h[?25l[34;80H1[18;12H[?25h[?25l[34;80H2[19;12H[?25h[?25l[34;80H3[20;12H[?25h[?25l[34;80H4[21;12H[?25h[?25l[34;80H5[22;12H[?25h[?25l[34;80H6,1   [23;1H[?25h[?25l[34;80H7,2-9[24;9H[?25h[?25l[34;80H8[26;9H[?25h[?25l[34;80H9[27;9H[?25h[?25l[34;79H30[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;79H[K[34;79H31,2-9[8C16%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;79H[K[34;79H32,1[10C20%[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;79H[K[34;79H33,2-9[8C24%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;79H[K[34;79H34,2-9[8C28%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;79H[K[34;79H35,2-9[8C32%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;79H[K[34;79H36,2-9[8C36%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;79H[K[34;79H37,2-9[8C40%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;79H[K[34;79H38,2-9[8C44%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;79H[K[34;79H39,2-9[8C48%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;79H[K[34;79H40,2-9[8C52%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, popularity,[31m';'[m);[34;79H[K[34;79H41,2-9[8C56%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(popularity);[34;79H[K[34;79H42,2-9[8C60%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H43,2-9[8C64%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H44,2-9[8C68%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H45,2-9[8C72%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H46,2-9[8C76%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H47,2-9[8C80%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m(x:column2){[34;79H[K[34;79H48,2-9[8C84%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;79H[K[34;79H49,2-9[8C88%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H}[34;79H[K[34;79H50,2-9[8C92%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H51,2-9[8C96%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;79H[K[34;79H52,1[10CBot[28;1H[?25h[?25l[29;12H[106m([9C)[m[34;80H3,5-12[29;12H[?25h[?25l([9C)[34;80H4,2-9 [30;9H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5,3-10[31;10H[?25h[?25l[29;23H{[31;9H}[34;80H6,2-9 [32;9H[?25h[?25l[34;80H7,2  [33;2H[?25h[?25l[34;80H6,2-9[32;9H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5,3-10[31;10H[?25h[?25l[29;23H{[31;9H}[34;80H6,2-9 [32;9H[?25h[?25l[34;80H7,2  [33;2H[?25h[?25l}[34;82H3[33;3H[?25h[?25l}[34;82H4[33;4H[?25h[?25l}[34;82H5[33;5H[?25h[?25l}[34;82H6[33;6H[?25h[?25l[33;5H[K[34;82H5[33;5H[?25h[?25l[33;4H[K[34;82H4[33;4H[?25h[?25l[33;3H[K[34;82H3[33;3H[?25h[?25l[33;2H[K[34;82H2[33;2H[?25h[?25l[33;1H[K[34;82H1[33;1H[?25h[?25l[94m~                                                                                               [m[34;80H6,2-9[32;9H[?25h[?25l[29;23H[106m{[31;9H}[m[34;80H5[31;9H[?25h[?25l[29;23H{[31;9H}[34;80H4[30;9H[?25h[?25l[34;80H3[29;9H[?25h[?25l[34;80H2,1  [28;1H[?25h[?25l[34;80H1,2-9[27;9H[?25h[?25l[34;82H3-17[27;17H[?25h[?25l[34;82H4-18[27;18H[?25h[?25l[34;80H0,3-17[26;17H[?25h[?25l[34;79H49[25;17H[?25h[?25l[34;80H8[24;17H[?25h[?25l[34;80H7[23;17H[?25h[?25l[34;80H6[22;17H[?25h[?25l[34;80H5[21;17H[?25h[?25l[34;80H4[20;17H[?25h[?25l[34;80H3[19;17H[?25h[?25l[34;80H2[18;17H[?25h[?25l[34;80H1[17;17H[?25h[?25l[34;80H0[16;17H[?25h[?25l[34;79H39[15;17H[?25h[?25l[34;80H8[14;17H[?25h[?25l[34;80H7[13;17H[?25h[?25l[34;80H6[12;17H[?25h[?25l[34;80H5[11;17H[?25h[?25l[34;80H4[10;17H[?25h[?25l[34;80H3[9;17H[?25h[?25l[34;80H2,1   [8;1H[?25h[?25l[34;80H1,3-17[7;17H[?25h[?25l[34;80H0[6;17H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(getline(infile,x)){[34;79H[K[34;79H29,3-17[7CBot[6;17H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;79H[K[34;79H28,3-17[7C95%[6;17H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,3-17[7C87%[6;17H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,1[10C83%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hstring x;[34;79H[K[34;79H25,11-18      79%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H24,11-18      75%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H23,11-18      70%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;79H[K[34;79H22,11-18      66%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;79H[K[34;79H21,11-18      62%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;79H[K[34;79H20,11-18      58%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;79H[K[34;79H19,2-9[8C54%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;79H[K[34;79H18,11-18      50%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;79H[K[34;79H17,11-18      45%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hifstream infile;[34;79H[K[34;79H16,3-10[7C41%[3;26H[106m{[6;9H}[?25h[?25l[m[3;26H{[6;9H}[34;80H7,11-18[7;18H[?25h[?25l[34;80H8[8;18H[?25h[?25l[34;80H9,2-9  [9;9H[?25h[?25l[34;79H20,11-18[10;18H[?25h[?25l[34;80H1[11;18H[?25h[?25l[34;80H0[10;18H[?25h[?25l[34;79H19,2-9  [9;9H[?25h[?25l[34;80H8,11-18[8;18H[?25h[?25l[34;80H7[7;18H[?25h[?25l[3;26H[106m{[6;9H}[m[34;80H6,3-10 [6;10H[?25h[?25l[3;26H{[6;9H}[34;80H7,11-18[7;18H[?25h[?25l[34;80H8[8;18H[?25h[?25l[34;80H9,2-9  [9;9H[?25h[?25l[34;79H20,11-18[10;18H[?25h[?25l[34;80H1[11;18H[?25h[?25l[34;80H2[12;18H[?25h[?25l[34;80H3[13;18H[?25h[?25l[34;80H4[14;18H[?25h[?25l[34;80H5[15;18H[?25h[?25l[34;80H6,1    [16;1H[?25h[?25l[34;80H7,3-17[17;17H[?25h[?25l[34;80H8[19;17H[?25h[?25l[34;80H9[20;17H[?25h[?25l[34;82H4-25[20;25H[?25h[?25l[34;79H30[21;25H[?25h[?25l[34;82H5-33[21;33H[?25h[?25l[34;80H1,12-33[22;33H[?25h[?25l[34;80H2,1    [23;1H[?25h[?25l[24;32H[106m([18C)[m[34;80H3,12-33[24;33H[?25h[?25l([18C)[34;80H4[25;33H[?25h[?25l[34;80H5,4-25 [26;25H[?25h[?25l[27;32H[106m([17C)[m[34;80H6,12-33[27;33H[?25h[?25l([17C)[34;80H7[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;79H[K[34;79H38,12-33      45%[28;32H[106m([19C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;79H[K[34;79H39,12-33      50%[27;32H([19C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;79H[K[34;79H40,12-33      54%[28;32H[106m([17C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, popularity,[31m';'[m);[34;79H[K[34;79H41,12-33      58%[27;32H([17C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(popularity);[34;79H[K[34;79H42,12-33      62%[28;32H[106m([19C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H43,12-33      66%[27;32H([19C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H44,12-33      70%[28;32H[106m([20C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H45,12-33      75%[27;32H([20C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H46,12-33      79%[28;32H[106m([22C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[34;79H[K[34;79H47,12-33      83%[27;32H([22C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m(x:column2){[34;79H[K[34;79H48,12-33      87%[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;79H[K[34;79H49,12-33      91%[27;32H([18C)[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9H}[34;79H[K[34;79H50,12-33      95%[27;32H([18C)[28;33H[?25h[?25l[27;32H[106m([18C)[m[34;79H49[27;33H[?25h[?25l([18C)[34;79H50[28;33H[?25h[?25l[27;32H[106m([18C)[m[34;79H49[27;33H[?25h[?25l[26;32H[106m([18C)[m[27;32H([18C)[34;80H8[26;33H[?25h[?25l([18C)[34;80H7[25;33H[?25h[?25l[24;32H[106m([22C)[m[34;80H6[24;33H[?25h[?25l([22C)[34;80H5[23;33H[?25h[?25l[22;32H[106m([20C)[m[34;80H4[22;33H[?25h[?25l([20C)[34;80H3[21;33H[?25h[?25l[20;32H[106m([19C)[m[34;80H2[20;33H[?25h[?25l([19C)[34;80H1[19;33H[?25h[?25l[18;32H[106m([17C)[m[34;80H0[18;33H[?25h[?25l([17C)[34;79H39[17;33H[?25h[?25l[16;32H[106m([19C)[m[34;80H8[16;33H[?25h[?25l([19C)[34;80H7[15;33H[?25h[?25l[14;32H[106m([17C)[m[34;80H6[14;33H[?25h[?25l([17C)[34;80H5,4-25 [13;25H[?25h[?25l[34;80H4,12-33[12;33H[?25h[?25l[11;32H[106m([18C)[m[34;80H3[11;33H[?25h[?25l([18C)[34;80H2,1    [10;1H[?25h[?25l[34;80H1,12-33[9;33H[?25h[?25l[34;80H0,5-33 [8;33H[?25h[?25l[34;79H29,12-33[7;33H[?25h[?25l[6;32H[106m([16C)[m[34;80H8[6;33H[?25h[?25l[1;33r[1;1H[2L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,12-33      87%[8;32H([16C)[6;33H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,1[10C83%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hstring x;[34;79H[K[34;79H25,26-33      79%[6;33H[106m{[33;17H}[6;33H[?25h[?25l[1;33r[m[1;1H[L[1;34r[34;79H[K[34;79H24,17-24      75%[7;33H{[6;24H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H23,12-19      70%[6;19H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;79H[K[34;79H22,26-33      66%[6;33H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;79H[K[34;79H21,26-33      62%[6;33H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;79H[K[34;79H20,11-18      58%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;79H[K[34;79H19,2-9[8C54%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;79H[K[34;79H18,26-33      50%[6;33H[?25h[?25l[34;80H9,2-9  [7;9H[?25h[?25l[34;80H8,26-33[6;33H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;79H[K[34;79H17,26-33      45%[6;33H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hifstream infile;[34;79H[K[34;79H16,3-10[7C41%[3;26H[106m{[6;9H}[?25h[?25l[m[3;26H{[6;9H}[34;80H7,26-33[7;33H[?25h[?25l[34;80H8[8;33H[?25h[?25l[34;80H9,2-9  [9;9H[?25h[?25l[34;80H8,26-33[8;33H[?25h[?25l[34;80H7[7;33H[?25h[?25l[3;26H[106m{[6;9H}[m[34;80H6,3-10 [6;10H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[32mint[m main(){[34;79H[K[34;79H15,11-25      37%[4;26H{[7;9H}[6;25H[?25h[?25l[1;33r[1;1H[L[1;34r[34;79H[K[34;79H14,19-33      33%[6;33H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[38;5;130musing[m [32mnamespace[m std;[34;79H[K[34;79H13,20-27      29%[6;26H[106m{[9;9H}[6;27H[?25h[?25l[1;33r[m[1;1H[L[1;34r[34;79H[K[34;79H12,26-33      25%[6;20H[106m([11C)[m[7;26H{[10;9H}[6;33H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<vector>[m[34;79H[K[34;79H11,18-25      20%[7;20H([11C)[6;25H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<limits>[m[34;79H[K[34;79H10,12[9C16%[6;12H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<string>[m[34;79H[K[34;79H9,1[11C12%[6;1H[?25h[?25l[34;79H10,12[7;12H[?25h[?25l[34;80H1,18-25[8;25H[?25h[?25l[9;20H[106m([11C)[m[34;80H2,26-33[9;33H[?25h[?25l[9;20H([11C)[10;26H[106m{[13;9H}[m[34;80H3,20-27[10;27H[?25h[?25l{[13;9H}[34;80H4,19-33[11;33H[?25h[?25l[34;80H5,11-25[12;25H[?25h[?25l[10;26H[106m{[13;9H}[m[34;80H6,3-10 [13;10H[?25h[?25l[10;26H{[13;9H}[34;80H7,26-33[14;33H[?25h[?25l[34;80H8[15;33H[?25h[?25l[34;80H9,2-9  [16;9H[?25h[?25l[34;79H20,11-18[17;18H[?25h[?25l[34;80H1,26-33[18;33H[?25h[?25l[34;80H2[19;33H[?25h[?25l[34;80H3,12-19[20;19H[?25h[?25l[34;80H4,17-24[21;24H[?25h[?25l[34;80H5,26-33[22;33H[?25h[?25l[34;80H6,1    [23;1H[?25h[?25l[34;80H7,12-33[24;33H[?25h[?25l[26;32H[106m([16C)[m[34;80H8[26;33H[?25h[?25l([16C)[34;80H9[27;33H[?25h[?25l[34;79H30,5-33 [28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;79H[K[34;79H31,12-33      16%[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;79H[K[34;79H32,1[10C20%[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;79H[K[34;79H33,12-33      25%[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;79H[K[34;79H34,12-33      29%[27;32H([18C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;79H[K[34;79H35,4-25[7C33%[28;25H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;79H[K[34;79H36,12-33      37%[28;32H[106m([17C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;79H[K[34;79H37,12-33      41%[27;32H([17C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;79H[K[34;79H38,12-33      45%[28;32H[106m([19C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;79H[K[34;79H39,12-33      50%[27;32H([19C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;79H[K[34;79H40,12-33      54%[28;32H[106m([17C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, popularity,[31m';'[m);[34;79H[K[34;79H41,12-33      58%[27;32H([17C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(popularity);[34;79H[K[34;79H42,12-33      62%[28;32H[106m([19C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H43,12-33      66%[27;32H([19C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H44,12-33      70%[28;32H[106m([20C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H45,12-33      75%[27;32H([20C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H46,12-33      79%[28;32H[106m([22C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[34;79H[K[34;79H47,12-33      83%[27;32H([22C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m(x:column2){[34;79H[K[34;79H48,12-33      87%[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;79H[K[34;79H49,12-33      91%[27;32H([18C)[28;32H[106m([18C)[28;33H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9H}[34;79H[K[34;79H50,12-33      95%[27;32H([18C)[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H51,4-18[7CBot[1;33H[106m{[28;17H}[?25h[?25l[m[1;33H{[28;17H}[34;80H2,1   [29;1H[?25h[?25l[30;23H[106m{[32;9H}[m[34;80H3,17-24[30;24H[?25h[?25l{[32;9H}[34;80H4,18-32[31;32H[?25h[?25l[30;23H[106m{[32;9H}[m[34;80H5,3-10 [32;10H[?25h[?25l[30;23H{[32;9H}[34;80H6,2-9 [33;9H[?25h[?25l[30;23H[106m{[32;9H}[m[34;80H5,3-10[32;10H[?25h[?25l[32;9H[K[30;23H{[34;82H2-9 [32;9H[?25h[?25l[34;82H1  [32;1H[?25h[?25l
[94m~                                                                                               [m[34;80H4,18-32[31;32H[?25h[?25l[31;31H[K[34;83H7-31[31;31H[?25h[?25l[31;30H[K[34;83H6-30[31;30H[?25h[?25l[31;29H[K[34;83H5-29[31;29H[?25h[?25l[31;28H[K[34;83H4-28[31;28H[?25h[?25l[31;27H[K[34;83H3-27[31;27H[?25h[?25l[31;26H[K[34;83H2-26[31;26H[?25h[?25l[31;25H[K[34;83H1-25[31;25H[?25h[?25l[31;24H[K[34;83H0-24[31;24H[?25h[?25l[31;23H[K[34;82H9-23 [31;23H[?25h[?25l[31;22H[K[34;82H8-22[31;22H[?25h[?25l[34;82H7-21[31;21H[?25h[?25l[31;20H[K[34;82H6-20[31;20H[?25h[?25l[31;19H[K[34;82H5-19[31;19H[?25h[?25l[31;18H[K[34;82H4-18[31;18H[?25h[?25l[31;17H[K[34;82H3-17[31;17H[?25h[?25l[34;82H2-9 [31;9H[?25h[?25l[34;82H1  [31;1H[?25h[?25l[30;33r[33;1H
[1;34r[30;9H[38;5;130mfor[m(x:column2){


[94m~                                                                                               [m[34;79H[K[34;79H53,17-24      Bot[30;24H[?25h[?25l[30;23H[K[30;12H[106m([9C)[m[34;83H6-23[30;23H[?25h[?25l[30;22H[K[30;12H([34;83H5-22[30;22H[?25h[?25l[30;21H[K[34;83H4-21[30;21H[?25h[?25l[30;20H[K[34;83H3-20[30;20H[?25h[?25l[30;19H[K[34;83H2-19[30;19H[?25h[?25l[30;18H[K[34;83H1-18[30;18H[?25h[?25l[30;17H[K[34;83H0-17[30;17H[?25h[?25l[30;16H[K[34;82H9-16 [30;16H[?25h[?25l[30;15H[K[34;82H8-15[30;15H[?25h[?25l[30;14H[K[34;82H7-14[30;14H[?25h[?25l[30;13H[K[34;82H6-13[30;13H[?25h[?25l[30;12H[K[34;82H5-12[30;12H[?25h[?25lfo[30;11H[K[34;82H4-11[30;11H[?25h[?25l[30;10H[K[34;82H3-10[30;10H[?25h[?25l[30;9H[K[34;82H2-9 [30;9H[?25h[?25l[34;82H1  [30;1H[?25h[?25l[29;33r[33;1H
[1;34r[33;1H[94m~                                                                                               [m[34;79H[K[34;79H52,1[10CBot[29;1H[?25h[?25l}[34;82H2[29;2H[?25h[34;1H[K[29;1H[?25l[34;69H^[[29;1H[34;69H  [29;2H[34;79H52,1[10CBot[29;1H[?25h[?25l[34;69H:[29;1H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 53L, 1311C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:47:32:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<int>::push_back(std::string&)[m[Kâ€™
   47 |    column8.push_back(popularity[01;31m[K)[m[K;
      |                                [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int][m[Kâ€™
 1184 |       [01;36m[Kpush_back[m[K(const value_type& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} to â€˜[01m[Kconst value_type&[m[Kâ€™ {aka â€˜[01m[Kconst int&[m[Kâ€™}
 1184 |       push_back([01;36m[Kconst value_type& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::value_type = int][m[Kâ€™
 1200 |       [01;36m[Kpush_back[m[K(value_type&& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::string[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™} to â€˜[01m[Kstd::vector<int>::value_type&&[m[Kâ€™ {aka â€˜[01m[Kint&&[m[Kâ€™}
 1200 |       push_back([01;36m[Kvalue_type&& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ wq1[K[K[Kg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:08:09 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 53L, 1311C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[3;9H[32mdouble[m average;[4;9H[38;5;130mwhile[m(getline(infile,x)){[6;25Hstring year,length,title,subject,actor,actress,director,popularity,awardd[7;1Hs,image;[8;25Hgetline(infile, year,[31m';'[m);[9;25H[38;5;130mif[m (!year.empty()){[10;33Hcolumn1.push_back(stoi(year));}[11;25H[38;5;130melse[m{column1.push_back([31m0[m); }

               [9Cgetline(infile, length,[31m';'[m);
                        column2.push_back(stoi(length));[15;11H              [15;28H[K[16;10H               getline(infile, title,[31m';'[m);[16;52H[K[17;11H              column3.push_back(title);[18;10H               getline(infile, subject,[31m';'[m);[19;9H                column4.push_back(subject);
                        getline(infile, actor,[31m';'[m);[21;14H           column5.push_back(actor);[22;7H                  getline(infile, actress,[31m';'[m);[23;25Hcolumn6.push_back(actress);
                        getline(infile, director,[31m';'[m);[24;55H[K[25;5H                    column7.push_back(director);[25;53H[K[26;5H                    getline(infile, popularity,[31m';'[m);[26;57H[K[27;1H                        column8.push_back(popularity);
                        getline(infile, awards,[31m';'[m);[28;53H[K[29;5H                    getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[30;51H[K[31;5H            }[31;19H[K[32;1H}
        [33;9H[K[34;79H52,1[10CBot[32;1H[?25h[?25l[34;69HE[32;1H[34;69H [33;8H[34;80H3,1-8[33;8H[?25h[?25l[34;69H~@k[33;8H[34;69H   [32;1H[34;80H2,1  [32;1H[?25h[?25l[34;69H~@k[32;1H[34;69H   [31;8H[34;80H1,1-8[31;8H[?25h[?25l[34;69H~@k[31;8H[34;69H   [30;8H[34;80H0[30;8H[?25h[?25l[34;69H~@k[30;8H[34;69H   [29;8H[34;79H49[29;8H[?25h[?25l[34;69H~@k[29;8H[34;69H   [28;8H[34;80H8[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [27;8H[34;80H7[27;8H[?25h[?25l[34;69H~@k[27;8H[34;69H   [26;8H[34;80H6[26;8H[?25h[?25l[34;69H~@k[26;8H[34;69H   [25;8H[34;80H5[25;8H[?25h[?25l[34;69H~@k[25;8H[34;69H   [24;8H[34;80H4[24;8H[?25h[?25l[34;69H~@k[24;8H[34;69H   [23;8H[34;80H3[23;8H[?25h[?25l[34;69H~@k[23;8H[34;69H   [24;8H[34;80H4[24;8H[?25h[?25l[34;69H~@k[24;8H[34;69H   [25;8H[34;80H5[25;8H[?25h[?25l[34;69H~@k[25;8H[34;69H   [26;8H[34;80H6[26;8H[?25h[?25l[34;69H~@k[26;8H[34;69H   [26;16H[34;82H2-16[26;16H[?25h[?25l[34;69H~@k[26;16H[34;69H   [27;16H[34;80H7[27;16H[?25h[?25l[34;69H~@k[27;16H[34;69H   [27;24H[34;82H3-24[27;24H[?25h[?25l[34;69H~@k[27;24H[34;69H   [27;25H[34;82H4-25[27;25H[?25h[?25l[34;69H~@k[27;25H[34;69H   [27;26H[34;82H5-26[27;26H[?25h[?25l[34;69H~@k[27;26H[34;69H   [27;27H[34;82H6-27[27;27H[?25h[?25l[34;69H~@k[27;27H[34;69H   [27;28H[34;82H7-28[27;28H[?25h[?25l[34;69H~@k[27;28H[34;69H   [27;29H[34;82H8-29[27;29H[?25h[?25l[34;69H~@k[27;29H[34;69H   [27;30H[34;82H9-30[27;30H[?25h[?25l[34;69H~@k[27;30H[34;69H   [26;30H[34;80H6[26;30H[?25h[?25l[34;69H~@k[26;30H[34;69H   [26;31H[34;82H10-31[26;31H[?25h[?25l[34;69H~@k[26;31H[34;69H   [26;32H[106m([22C)[m[34;83H1-32[26;32H[?25h[?25l[34;69H~@k[26;32H[34;69H   [26;33H([22C)[34;83H2-33[26;33H[?25h[?25l[34;69H~@k[26;33H[34;69H   [26;34H[34;83H3-34[26;34H[?25h[?25l[34;69H~@k[26;34H[34;69H   [26;35H[34;83H4-35[26;35H[?25h[?25l[34;69H~@k[26;35H[34;69H   [25;35H[34;80H5[25;35H[?25h[?25l[34;69H~@k[25;35H[34;69H   [26;35H[34;80H6[26;35H[?25h[?25l[34;69H~@k[26;35H[34;69H   [26;36H[34;83H5-36[26;36H[?25h[?25l[34;69H~@k[26;36H[34;69H   [26;37H[34;83H6-37[26;37H[?25h[?25l[34;69H~@k[26;37H[34;69H   [26;38H[34;83H7-38[26;38H[?25h[?25l[34;69H~@k[26;38H[34;69H   [26;39H[34;83H8-39[26;39H[?25h[?25l[34;69H~@k[26;39H[34;69H   [26;40H[34;83H9-40[26;40H[?25h[?25l[34;69Hs[26;40H[34;69H [26;40H[34;69Hcl[26;40H[34;69H  [26;40H[34;1H[1m-- INSERT --[m[34;13H[K[34;79H46,19-40      Bot[26;40Hpopularity,[31m';'[m);[26;56H[K[26;40H[?25h[?25ltpopularity,[31m';'[m);[34;82H20-41[26;41H[?25h[?25lopopularity,[31m';'[m);[34;83H1-42[26;42H[?25h[?25lipopularity,[31m';'[m);[34;83H2-43[26;43H[?25h[?25l(popularity,[31m';'[m);[26;43H[106m([14C)[m[34;83H3-44[26;44H[?25h[?25l([14C)[34;83H4-45[26;45H[?25h[?25l[34;83H5-46[26;46H[?25h[?25l[34;83H6-47[26;47H[?25h[?25l[34;83H7-48[26;48H[?25h[?25l[34;83H8-49[26;49H[?25h[?25l[34;83H9-50[26;50H[?25h[?25l[34;82H30-51[26;51H[?25h[?25l[34;83H1-52[26;52H[?25h[?25l[34;83H2-53[26;53H[?25h[?25l)y,[31m';'[m);[26;43H[106m([9C)[m[34;83H3-54[26;54H[?25h[?25l[106my[m,[31m';'[m);[26;60H[K[26;43H([9Cy[34;83H2-53[26;53H[?25h[?25l[34;83H3-54[26;54H[?25h[?25l),[31m';'[m);[26;43H[106m([10C)[m[34;83H4-55[26;55H[?25h[?25l[34;83H3-54[26;54H[?25h[?25l[26;43H([10C)[34;83H2-53[26;53H[?25h[?25l[34;83H1-52[26;52H[?25h[?25l[34;83H0-51[26;51H[?25h[?25l[34;82H29-50[26;50H[?25h[?25l[34;83H8-49[26;49H[?25h[?25l[34;83H7-48[26;48H[?25h[?25l[34;83H6-47[26;47H[?25h[?25l[34;83H5-46[26;46H[?25h[?25l[34;83H4-45[26;45H[?25h[?25l[106m([10C)[m[34;83H3-44[26;44H[?25h[?25l[34;83H2-43[26;43H[?25h[?25l([10C)[34;83H1-42[26;42H[?25h[?25l[34;83H0-41[26;41H[?25h[?25l[34;82H19-40[26;40H[?25h[?25lstoi(popularity),[31m';'[m);[34;82H20-41[26;41H[?25h[?25l[34;80H5[25;41H[?25h[?25l[34;80H4[24;41H[?25h[?25l[34;80H5[25;41H[?25h[?25l[34;80H6[26;41H[?25h[?25l[34m^Z[mtoi(popularity),[1C[31m;'[m);[34;83H1-43[26;43H[?25h[?25ltoi(popularity),[31m';[m[1C);[26;62H[K[34;83H0-41[26;41H[?25h[?25ltoi(popularity),[31m';'[m);[26;61H[K[34;82H19-40[26;40H[?25h[?25l[34;82H20-41[26;41H[?25h[?25l[34;83H1-42[26;42H[?25h[?25li[106m([10C)[m[34;83H2-43[26;43H[?25h[?25l([106mp[mopularity)[106m,[m[31m';'[m);[26;60H[K[26;42H[106m([mp[9C[106m)[m,[34;83H1-42[26;42H[?25h[?25l([106mp[mopularity)[106m,[m[31m';'[m);[26;59H[K[26;41H[106m([mp[9C[106m)[m,[34;83H0-41[26;41H[?25h[?25l([106mp[mopularity)[106m,[m[31m';'[m);[26;58H[K[26;40H[106m([mp[9C[106m)[m,[34;82H19-40[26;40H[?25h[?25l[34;82H20-41[26;41H[?25h[?25l[106mp[mopularity)[106m,[m[31m';'[m[97m[101m)[m;[26;57H[K[26;40Hp[10C,[34;82H19-40[26;40H[?25h[?25l[34;82H20-41[26;41H[?25h[?25l[34;83H1-42[26;42H[?25h[?25l[34;83H2-43[26;43H[?25h[?25l[34;83H3-44[26;44H[?25h[?25l[34;83H4-45[26;45H[?25h[?25l[34;83H5-46[26;46H[?25h[?25l[34;83H6-47[26;47H[?25h[?25l[34;83H7-48[26;48H[?25h[?25l[34;83H8-49[26;49H[?25h[?25l[26;32H[106m([17C)[m[34;83H9-50[26;50H[?25h[?25l[34;82H30-51[26;51H[?25h[?25l[26;32H([17C)[34;80H7[27;51H[?25h[?25l[34;82H29-50[27;50H[?25h[?25l[34;83H8-49[27;49H[?25h[?25l[34;83H7-48[27;48H[?25h[?25l[34;83H6-47[27;47H[?25h[?25l[34;83H5-46[27;46H[?25h[?25l[34;80H6[26;46H[?25h[?25l[34;83H6-47[26;47H[?25h[?25l[34;83H7-48[26;48H[?25h[?25l[34;83H8-49[26;49H[?25h[?25l[26;32H[106m([17C)[m[34;83H9-50[26;50H[?25h[?25l[34;82H30-51[26;51H[?25h[?25l[26;32H([17C)[34;83H1-52[26;52H[?25h[?25l[34;83H2-53[26;53H[?25h[?25l[34;83H3-54[26;54H[?25h[?25l[34;83H4-55[26;55H[?25h[?25l[34;83H5-56[26;56H[?25h[?25l[34;83H4-55[26;55H[?25h[?25l[34;83H3-54[26;54H[?25h[?25l[34;83H2-53[26;53H[?25h[?25l[34;83H1-52[26;52H[?25h[?25l[26;32H[106m([17C)[m[34;83H0-51[26;51H[?25h[?25l[106m,[m[31m';'[m);[26;56H[K[26;32H([17C,[34;82H29-50[26;50H[?25h[?25l[34;80H7[27;50H[?25h[?25l[34;82H30-51[27;51H[?25h[?25l[34;83H1-52[27;52H[?25h[?25l[27;42H[106m([10C)[m[34;83H2-53[27;53H[?25h[?25l[1C[97m[101m)[m;[27;42H([10C)[34;83H3-54[27;54H[?25h[?25l[27;42H[106m([10C)[m[34;83H2-53[27;53H[?25h[?25l[27;42H([10C)[34;83H1-52[27;52H[?25h[?25l[34;83H0-51[27;51H[?25h[?25l[34;82H29-50[27;50H[?25h[?25l[34;83H8-49[27;49H[?25h[?25l[34;83H7-48[27;48H[?25h[?25l[34;83H6-47[27;47H[?25h[?25l[34;83H5-46[27;46H[?25h[?25l[34;83H4-45[27;45H[?25h[?25l[34;83H3-44[27;44H[?25h[?25l[106m([10C)[m[34;83H2-43[27;43H[?25h[?25l[34;83H1-42[27;42H[?25h[?25l[34;83H2-43[27;43H[?25h[?25lapopularit[106my[m)[97m[101m)[m;[27;42H([10Cy[34;83H3-44[27;44H[?25h[?25ltpopularity)[97m[101m)[m;[34;83H4-45[27;45H[?25h[?25lopopularity)[97m[101m)[m;[34;83H5-46[27;46H[?25h[?25lipopularity)[97m[101m)[m;[34;83H6-47[27;47H[?25h[?25l(popularity));[27;47H[106m([10C)[m[34;83H7-48[27;48H[?25h[?25l[34;83H6-47[27;47H[?25h[?25l([10C)[34;83H5-46[27;46H[?25h[?25l[34;83H4-45[27;45H[?25h[?25l[34;83H3-44[27;44H[?25h[?25ltoi(popularity));[27;60H[K[27;42H[106m([15C)[m[34;83H2-43[27;43H[?25h[?25lstoi(popularity[1C);[27;42H([15C)[34;83H3-44[27;44H[?25h[34;1H[K[27;43H[?25l[34;69H^[[27;43H[34;69H  [27;44H[34;79H47,22-43      Bot[27;43H[?25h[?25l[34;69H:[27;43H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 53L, 1316C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
Aborted (core dumped)
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
Aborted (core dumped)
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:09:32 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 53L, 1316C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9Hvector <[32mint[m> column1, column2,column8;[2;9Hvector<string> column3,column4,column5,column6,column7,column10;[3;9H[32mint[m sum=[31m0[m;[4;9H[32mdouble[m average;[5;9H[38;5;130mwhile[m(getline(infile,x)){[7;25Hstring year,length,title,subject,actor,actress,director,popularity,awardd[8;1Hs,image;[9;25Hgetline(infile, year,[31m';'[m);[10;25H[38;5;130mif[m (!year.empty()){[11;33Hcolumn1.push_back(stoi(year));}[12;25H[38;5;130melse[m{column1.push_back([31m0[m); }[13;1H[K[14;1H                        getline(infile, length,[31m';'[m);[15;11H              column2.push_back(stoi(length));[15;57H[K[16;10H               [16;25H[K[17;11H              getline(infile, title,[31m';'[m);[18;10H               column3.push_back(title);[18;50H[K[19;9H                getline(infile, subject,[31m';'[m);
                        column4.push_back(subject);[21;14H           getline(infile, actor,[31m';'[m);[22;7H                  column5.push_back(actor);[23;25Hgetline(infile, actress,[31m';'[m);
                        column6.push_back(actress);[24;52H[K[25;5H                    getline(infile, director,[31m';'[m);[25;55H[K[26;5H                    column7.push_back(director);[26;53H[K[27;1H                        getline(infile,popularity,[31m';'[m);
                        column8.push_back(stoi(popularity));[28;61H[K[29;5H                    getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[30;53H[K[31;5H                    column10.push_back(image);[32;17H}
}[33;2H[K[34;79H47,22-43      95%[28;43H[?25h[?25l[34;69H~@k[28;43H[34;69H   [27;43H[34;80H6[27;43H[?25h[?25l[34;69H~@k[27;43H[34;69H   [26;43H[34;80H5[26;43H[?25h[?25l[34;69H~@k[26;43H[34;69H   [25;43H[34;80H4[25;43H[?25h[?25l[34;69H~@k[25;43H[34;69H   [24;43H[34;80H3[24;43H[?25h[?25l[34;69H~@k[24;43H[34;69H   [23;43H[34;80H2[23;43H[?25h[?25l[34;69H~@k[23;43H[34;69H   [22;43H[34;80H1[22;43H[?25h[?25l[34;69H~@k[22;43H[34;69H   [21;43H[34;80H0[21;43H[?25h[?25l[34;69H~@k[21;43H[34;69H   [20;43H[34;79H39[20;43H[?25h[?25l[34;69H~@k[20;43H[34;69H   [19;43H[34;80H8[19;43H[?25h[?25l[34;69H~@k[19;43H[34;69H   [18;43H[34;80H7[18;43H[?25h[?25l[34;69H~@k[18;43H[34;69H   [17;43H[34;80H6[17;43H[?25h[?25l[34;69H~@k[17;43H[34;69H   [16;24H[34;80H5,3-24 [16;24H[?25h[?25l[34;69H~@k[16;24H[34;69H   [15;43H[34;80H4,22-43[15;43H[?25h[?25l[34;69H~@k[15;43H[34;69H   [14;43H[34;80H3[14;43H[?25h[?25l[34;69H~@k[14;43H[34;69H   [14;44H[34;83H3-44[14;44H[?25h[?25l[34;69H~@k[14;44H[34;69H   [14;45H[34;83H4-45[14;45H[?25h[?25l[34;69H~@k[14;45H[34;69H   [14;46H[34;83H5-46[14;46H[?25h[?25l[34;69H~@k[14;46H[34;69H   [14;47H[34;83H6-47[14;47H[?25h[?25l[34;69H~@k[14;47H[34;69H   [14;48H[34;83H7-48[14;48H[?25h[?25l[34;69H~@k[14;48H[34;69H   [14;49H[34;83H8-49[14;49H[?25h[?25l[34;69H~@k[14;49H[34;69H   [14;50H[34;83H9-50[14;50H[?25h[?25l[34;69H~@k[14;50H[34;69H   [14;51H[14;32H[106m([18C)[m[34;82H30-51[14;51H[?25h[?25l[34;69H~@k[14;51H[34;69H   [14;52H[14;32H([18C)[34;83H1-52[14;52H[?25h[?25l[34;69H~@k[14;52H[34;69H   [14;52H[?25h[?25l[34;69H~@k[14;52H[34;69H   [14;52H[?25h[?25l[34;69Hi[14;52H[34;69H [14;52H[34;1H[1m-- INSERT --[m[34;13H[K[34;79H33,31-52      95%[14;52H[?25h[?25l[34;83H2-53[14;53H[?25h[?25l[15;33r[15;1H[L[1;34r[34;79H[K[34;79H34,4-25[7C90%[15;25H[?25h[?25li[34;82H5-26[15;26H[?25h[?25l[38;5;130mif[m[34;82H6-27[15;27H[?25h[?25l([34;82H7-28[15;28H[?25h[?25l)[106m()[m[34;82H8-29[15;29H[?25h[?25l[34;82H7-28[15;28H[?25h[?25l[106m![m)![106m)[m[34;82H8-29[15;29H[?25h[?25l[106ml[m)l[106m)[m[34;82H9-30[15;30H[?25h[?25l[106me[m)e[106m)[m[34;82H10-31[15;31H[?25h[?25l[106mm[m)m[106m)[m[34;83H1-32[15;32H[?25h[?25l)[15;32H[K[15;31H[106m)[m[34;83H0-31[15;31H[?25h[?25l[106mn[m)n[106m)[m[34;83H1-32[15;32H[?25h[?25l[106mg[m)g[106m)[m[34;83H2-33[15;33H[?25h[?25l[106mt[m)t[106m)[m[34;83H3-34[15;34H[?25h[?25l[106mh[m)h[106m)[m[34;83H4-35[15;35H[?25h[?25l[106m.[m).[106m)[m[34;83H5-36[15;36H[?25h[?25l[106me[m)e[106m)[m[34;83H6-37[15;37H[?25h[?25l[106mp[m)p[106m)[m[34;83H7-38[15;38H[?25h[?25l[106mm[m)m[106m)[m[34;83H8-39[15;39H[?25h[?25l[106mt[m)t[106m)[m[34;83H9-40[15;40H[?25h[?25l[106my[m)y[106m)[m[34;82H20-41[15;41H[?25h[?25l)[15;41H[K[15;40H[106m)[m[34;82H19-40[15;40H[?25h[?25l)[15;40H[K[15;39H[106m)[m[34;83H8-39[15;39H[?25h[?25l)[15;39H[K[15;38H[106m)[m[34;83H7-38[15;38H[?25h[?25l)[15;38H[K[15;37H[106m)[m[34;83H6-37[15;37H[?25h[?25l[106mm[m)m[106m)[m[34;83H7-38[15;38H[?25h[?25l[106mp[m)p[106m)[m[34;83H8-39[15;39H[?25h[?25l[106mt[m)t[106m)[m[34;83H9-40[15;40H[?25h[?25l[106my[m)y[106m)[m[34;82H20-41[15;41H[?25h[?25l[106m([m)[15;27H([14C[106m)[m[34;83H1-42[15;42H[?25h[?25l[1C)[15;27H[106m([m[13C()[106m)[m[34;83H2-43[15;43H[?25h[?25l[34;83H3-44[15;44H[?25h[?25l{[15;27H([15C)[106m{[33;17H}[m[34;83H4-45[15;45H[?25h[?25l}[106m}[m[33;17H}[34;83H5-46[15;46H[?25h[?25l[34;83H4-45[15;45H[?25h[?25l[16;33r[16;1H[L[1;34r[15;45H[K[16;25H}[34;79H[K[34;79H35,4-25[7C86%[16;25H[106m}[?25h[?25l[m[34;82H5-26[16;26H[?25h[?25l[16;25H[K[15;44H{[34;82H4-25[16;25H[?25h[?25l[34;80H6[17;25H[?25h[?25l[34;82H5-26[17;26H[?25h[?25l[34;82H6-27[17;27H[?25h[?25l[34;82H7-28[17;28H[?25h[?25l[34;82H8-29[17;29H[?25h[?25l[34;82H9-30[17;30H[?25h[?25l[34;82H10-31[17;31H[?25h[?25l[34;83H1-32[17;32H[?25h[?25l[34;83H2-33[17;33H[?25h[?25l[34;83H3-34[17;34H[?25h[?25l[34;83H4-35[17;35H[?25h[?25l[34;83H5-36[17;36H[?25h[?25l[34;83H6-37[17;37H[?25h[?25l[34;83H7-38[17;38H[?25h[?25l[34;83H8-39[17;39H[?25h[?25l[34;83H9-40[17;40H[?25h[?25l[34;82H20-41[17;41H[?25h[?25lk[106m([12C)[m[34;83H1-42[17;42H[?25h[?25l[34;83H2-43[17;43H[?25h[?25l([12C)[34;83H3-44[17;44H[?25h[?25l[34;83H4-45[17;45H[?25h[?25l[34;83H5-46[17;46H[?25h[?25li[106m([mlength[106m)[m[34;83H6-47[17;47H[?25h[?25l[34;83H7-48[17;48H[?25h[?25l(length)[34;83H8-49[17;49H[?25h[?25l[34;83H9-50[17;50H[?25h[?25l[34;82H30-51[17;51H[?25h[?25l[34;83H1-52[17;52H[?25h[?25l[34;83H2-53[17;53H[?25h[?25l[106m([mlength[106m)[m[34;83H3-54[17;54H[?25h[?25l[17;42H[106m([mstoi(length)[106m)[m[34;83H4-55[17;55H[?25h[?25l[34;83H5-56[17;56H[?25h[?25l[17;42H([12C)[34;83H6-57[17;57H[?25h[?25l}[15;44H[106m{[17;57H}[m[34;83H7-58[17;58H[?25h[?25l[18;33r[18;1H[L[1;34r[34;79H[K[34;79H37,4-25[7C83%[15;44H{[17;57H}[18;25H[?25h[?25l[34;80H6[17;25H[?25h[?25l[34;80H5[16;25H[?25h[?25l[34;82H3-17[16;17H[?25h[?25l[34;82H2-9 [16;9H[?25h[?25l[34;82H1  [16;1H[?25h[?25l[15;33r[33;1H
[1;34r[15;25H[38;5;130mif[m(!length.empty()){[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H34,24-45      86%[15;44H[106m{[16;57H}[15;45H[?25h[?25l[m{[16;57H}[34;80H5[16;45H[?25h[?25l[34;80H6,1    [17;1H[?25h[?25l[34;82H2-9[17;9H[?25h[?25l[34;82H3-17[17;17H[?25h[?25l[34;82H4-25[17;25H[?25h[?25le[34;82H5-26[17;26H[?25h[?25ll[34;82H6-27[17;27H[?25h[?25ls[34;82H7-28[17;28H[?25h[?25l[38;5;130melse[m[34;82H8-29[17;29H[?25h[?25l{[34;82H9-30[17;30H[?25h[?25l}[106m{}[m[34;82H10-31[17;31H[?25h[?25l[34;82H9-30 [17;30H[?25h[?25l[106mc[m}c[106m}[m[34;82H10-31[17;31H[?25h[?25l[106mo[m}o[106m}[m[34;83H1-32[17;32H[?25h[?25l[106ml[m}l[106m}[m[34;83H2-33[17;33H[?25h[?25l[106mu[m}u[106m}[m[34;83H3-34[17;34H[?25h[?25l[106mm[m}m[106m}[m[34;83H4-35[17;35H[?25h[?25l[106mn[m}n[106m}[m[34;83H5-36[17;36H[?25h[?25l[106m2[m}2[106m}[m[34;83H6-37[17;37H[?25h[?25l[106m.[m}.[106m}[m[34;83H7-38[17;38H[?25h[?25l[106mp[m}p[106m}[m[34;83H8-39[17;39H[?25h[?25l[106mu[m}u[106m}[m[34;83H9-40[17;40H[?25h[?25l[106ms[m}s[106m}[m[34;82H20-41[17;41H[?25h[?25l[106mh[m}h[106m}[m[34;83H1-42[17;42H[?25h[?25l[106m_[m}_[106m}[m[34;83H2-43[17;43H[?25h[?25l[106mb[m}b[106m}[m[34;83H3-44[17;44H[?25h[?25l[106ma[m}a[106m}[m[34;83H4-45[17;45H[?25h[?25l[106mc[m}c[106m}[m[34;83H5-46[17;46H[?25h[?25l[106mk[m}k[106m}[m[34;83H6-47[17;47H[?25h[?25l[106m([m}([106m}[m[34;83H7-48[17;48H[?25h[?25l[106m)[m})[106m}[m[34;83H8-49[17;49H[?25h[?25l[17;29H{[17C[106m()[m}[34;83H7-48[17;48H[?25h[?25l[31m[106m0[m)}[31m0[m[106m)[m[34;83H8-49[17;49H[?25h[?25l[17;29H[106m{[m[17C([1C)[106m}[m[34;83H9-50[17;50H[?25h[?25l[106m;[m};[106m}[m[34;82H30-51[17;51H[?25h[?25l[34;83H1-52[17;52H[?25h[34;1H[K[17;51H[?25l[34;69H^[[17;51H[34;69H  [17;52H[34;79H36,30-51      86%[17;51H[?25h[?25l[34;69H:[17;51H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 55L, 1372C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
Aborted (core dumped)
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:11:42 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 55L, 1372C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[32mint[m main(){[2;9Hifstream infile;[3;9Hinfile.open([31m"films.txt"[m);[4;9H[38;5;130mif[m(infile.fail()){[5;17Hcout << [31m"Error with file"[m;[6;17Hexit([31m1[m);[7;9H}[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[9;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[11;9Hstring x;[12;9Hvector <[32mint[m> column1, column2,column8;
        vector<string> column3,column4,column5,column6,column7,column10;
        [32mint[m sum=[31m0[m;[14;19H[K[15;9H[32mdouble[m average;[15;24H[K[16;9H[38;5;130mwhile[m(getline(infile,x)){[16;34H[K[17;11H[K[18;10H               string year,length,title,subject,actor,actress,director,popularity,awardd[19;1Hs,image;[19;9H[K[20;1H                        getline(infile, year,[31m';'[m);[21;14H           [38;5;130mif[m (!year.empty()){[21;44H[K[22;7H                          column1.push_back(stoi(year));}[23;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;1H[K[25;5H                    getline(infile, length,[31m';'[m);[25;53H[K[26;5H                    [38;5;130mif[m(!length.empty()){[26;45H[K[27;1H                        column2.push_back(stoi(length));}
                        [38;5;130melse[m[106m{[mcolumn2.push_back([31m0[m);[106m}[m[28;52H[K[29;5H                    [29;25H[K[30;5H                    getline(infile, title,[31m';'[m);[30;52H[K[31;5H                    column3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);
                        column4.push_back(subject);[34;79H36,30-51      39%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [27;51H[28;29H{[21C}[34;80H5[27;51H[?25h[?25l[34;69H~@k[27;51H[34;69H   [28;51H[28;29H[106m{[21C}[m[34;80H6[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;24H[1;33r[33;1H
[1;34r[27;29H{[21C}[33;25Hgetline(infile, actor,[31m';'[m);[34;1H[K[34;79H37,3-24[7C43%[28;24H[?25h[?25l[34;69H~@k[28;24H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;79H[K[34;79H38,30-51      47%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;49H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;79H[K[34;79H39,28-49      52%[28;49H[?25h[?25l[34;69H~@k[28;49H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;79H[K[34;79H40,30-51      56%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;79H[K[34;79H41,30-51      60%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;79H[K[34;79H42,30-51      65%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;49H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;79H[K[34;79H43,28-49      69%[28;49H[?25h[?25l[34;69H~@k[28;49H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(stoi(popularity));[34;79H[K[34;79H44,30-51      73%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H45,30-51      78%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H46,30-51      82%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[28;42H[106m([8C)[m[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H47,30-51      86%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[27;42H([8C)[33;17H}[34;79H[K[34;79H48,30-51      91%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[33;1H}[34;79H[K[34;79H49,30-51      95%[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [28;51H[1;33r[33;1H
[1;34r[28;32H[106m([18C)[m[34;79H[K[34;79H50,30-51      Bot[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [29;51H[28;32H([18C)[29;32H[106m([18C)[m[34;80H1[29;51H[?25h[?25l[34;69H~@k[29;51H[34;69H   [30;50H[29;32H([18C)[34;80H2,29-50[30;50H[?25h[?25l[34;69H~@k[30;50H[34;69H   [31;17H[2;33H[106m{[31;17H}[m[34;80H3,3-17 [31;17H[?25h[?25l[34;69H~@k[31;17H[34;69H   [32;1H[2;33H{[31;17H}[34;80H4,1   [32;1H[?25h[?25l[34;69H~@k[32;1H[34;69H   [33;8H[34;80H5,1-8[33;8H[?25h[?25l[34;69H~@k[33;8H[34;69H   [32;1H[34;80H4,1  [32;1H[?25h[?25l[34;69H~@k[32;1H[34;69H   [31;17H[2;33H[106m{[31;17H}[m[34;80H3,3-17[31;17H[?25h[?25l[34;69H~@k[31;17H[34;69H   [30;50H[2;33H{[31;17H}[34;80H2,29-50[30;50H[?25h[?25l[34;69H~@k[30;50H[34;69H   [29;51H[29;32H[106m([18C)[m[34;80H1,30-51[29;51H[?25h[?25l[34;69H~@k[29;51H[34;69H   [28;51H[28;32H[106m([18C)[m[29;32H([18C)[34;80H0[28;51H[?25h[?25l[34;69H~@k[28;51H[34;69H   [27;51H[28;32H([18C)[34;79H49[27;51H[?25h[?25l[34;69H~@k[27;51H[34;69H   [26;51H[34;80H8[26;51H[?25h[?25l[34;69H~@k[26;51H[34;69H   [26;52H[34;83H1-52[26;52H[?25h[?25l[34;69H~@k[26;52H[34;69H   [26;53H[34;83H2-53[26;53H[?25h[?25l[34;69H~@k[26;53H[34;69H   [26;54H[26;32H[106m([21C)[m[34;83H3-54[26;54H[?25h[?25l[34;69H~@k[26;54H[34;69H   [26;55H[26;32H([21C)[34;83H4-55[26;55H[?25h[?25l[34;69H~@k[26;55H[34;69H   [26;55H[?25h[?25l[34;69H^M[26;55H[34;69H  [27;25H[34;80H9,4-25 [27;25H[?25h[?25l[34;69Hi[27;25H[34;69H [27;25H[34;1H[1m-- INSERT --[m[34;79H[K[34;79H49,4-25[7CBot[27;25H[?25h[?25l[28;33r[28;1H[L[1;34r[27;25H[K[28;25Hcolumn8.push_back(stoi(popularity));[34;79H[K[34;79H50,4-25[7C95%[28;25H[?25h[?25l[34;79H49[27;25H[?25h[?25li[34;82H5-26[27;26H[?25h[?25l[38;5;130mif[m[34;82H6-27[27;27H[?25h[?25l([34;82H7-28[27;28H[?25h[?25l)[106m()[m[34;82H8-29[27;29H[?25h[?25l[34;82H7-28[27;28H[?25h[?25l[106m![m)![106m)[m[34;82H8-29[27;29H[?25h[?25l[106mp[m)p[106m)[m[34;82H9-30[27;30H[?25h[?25l[106mo[m)o[106m)[m[34;82H10-31[27;31H[?25h[?25l)[27;31H[K[27;30H[106m)[m[34;82H9-30 [27;30H[?25h[?25l)[27;30H[K[27;29H[106m)[m[34;82H8-29[27;29H[?25h[?25l)[27;29H[K[27;28H[106m)[m[34;82H7-28[27;28H[?25h[?25l[97m[106m)[m[27;28H[K[27;27H[97m[101m)[m[34;82H6-27[27;27H[?25h[?25li[97m[101m)[m[27;27H[K[34;82H5-26[27;26H[?25h[?25l[97m[101m)[m[27;26H[K[34;82H4-25[27;25H[?25h[?25l[27;17H[97m[101m)[m[27;25H[K[34;82H3-17[27;17H[?25h[?25l[34;79H50[28;17H[?25h[?25l[34;79H49[27;17H[?25h[?25l[34;82H4-18[27;18H[?25h[?25l[27;17H[K[34;82H3-17[27;17H[?25h[?25l[34;79H50[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[27;1H#[7Ccolumn8.push_back(stoi(popularity));[27;45H[K[34;79H[K[34;79H50,2[10CBot[27;2H[?25h[?25l [34;82H1[27;1H[?25h[?25l[26;33r[33;1H
[1;34r[26;9H                column8.push_back(stoi(popularity));[33;1H[94m~                                                                                               [m[34;79H[K[34;79H49,3-17[7CBot[26;17H[?25h[?25l/[34;82H4-18[26;18H[?25h[?25l[34m//      column8.push_back(stoi(popularity));[m[34;82H5-19[26;19H[?25h[34;1H[K[26;18H[?25l[34;69H^[[26;18H[34;69H  [26;19H[34;79H49,4-18[7CBot[26;18H[?25h[?25l[34;69H:[26;18H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 55L, 1374C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:12:44 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 55L, 1374C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H[32mint[m sum=[31m0[m;[2;9H[32mdouble[m average;[3;9H[38;5;130mwhile[m(getline(infile,x)){[5;25Hstring year,length,title,subject,actor,actress,director,popularity,awardd[6;1Hs,image;[7;25Hgetline(infile, year,[31m';'[m);[8;25H[38;5;130mif[m (!year.empty()){[9;33Hcolumn1.push_back(stoi(year));}[10;25H[38;5;130melse[m{column1.push_back([31m0[m); }[12;25Hgetline(infile, length,[31m';'[m);
               [9C[38;5;130mif[m(!length.empty()){
                        column2.push_back(stoi(length));}[15;11H              [38;5;130melse[m{column2.push_back([31m0[m);}[15;52H[K[16;10H               [16;25H[K[17;11H              getline(infile, title,[31m';'[m);[18;10H               column3.push_back(title);[18;50H[K[19;9H                getline(infile, subject,[31m';'[m);
                        column4.push_back(subject);[21;14H           getline(infile, actor,[31m';'[m);[22;7H                  column5.push_back(actor);[23;25Hgetline(infile, actress,[31m';'[m);
                        column6.push_back(actress);[24;52H[K[25;5H                    getline(infile, director,[31m';'[m);[25;55H[K[26;5H                    column7.push_back(director);[26;53H[K[27;1H                        getline(infile,popularity,[31m';'[m);
                [34m//      column8.push_back(stoi(popularity));[m[28;61H[K[29;5H                    getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[30;53H[K[31;5H                    column10.push_back(image);[32;17H}
}[33;2H[K[34;79H49,4-18[7C95%[28;18H[?25h[?25l[34;69H~@k[28;18H[34;69H   [28;24H[1;33r[33;1H
[1;34r[34;1H[K[34;79H50,3-24[7CBot[28;24H[?25h[?25l[34;69H~@k[28;24H[34;69H   [29;24H[34;80H1[29;24H[?25h[?25l[34;69H~@k[29;24H[34;69H   [30;24H[34;80H2[30;24H[?25h[?25l[34;69H~@k[30;24H[34;69H   [31;17H[2;33H[106m{[31;17H}[m[34;80H3,3-17[31;17H[?25h[?25l[34;69H~@k[31;17H[34;69H   [31;17H[?25h[?25l[34;69Hi[31;17H[34;69H [31;17H


[1m-- INSERT --[m[34;79H[K[34;79H53,3-17[7CBot[31;17H[?25h[?25l[34;82H4-18[31;18H[?25h[?25l[1;33r[33;1H
[1;34r[31;33r[31;1H[L[1;34r[34;79H[K[34;79H54,2-9[8CBot[1;33H{[30;17H}[31;9H[?25h[?25lf[34;82H3-10[31;10H[?25h[?25lo[34;82H4-11[31;11H[?25h[?25l[38;5;130mfor[m[34;82H5-12[31;12H[?25h[?25l[34;82H6-13[31;13H[?25h[?25l([34;82H7-14[31;14H[?25h[?25l)[106m()[m[34;82H8-15[31;15H[?25h[?25l()[34;80H5,2   [32;2H[?25h[?25l[34;82H1[32;1H[?25h[?25l[34;82H2[32;2H[?25h[?25l[34;80H4,1[31;1H[?25h[?25l[34;82H2-9[31;9H[?25h[?25l[34;82H3-10[31;10H[?25h[?25l[34;82H4-11[31;11H[?25h[?25l[34;82H5-12[31;12H[?25h[?25l [106m()[m[34;82H6-13[31;13H[?25h[?25l[34;82H7-14[31;14H[?25h[?25l()[34;80H3,2-9 [30;9H[?25h[?25l[1;33H[106m{[30;17H}[m[34;82H3-17[30;17H[?25h[?25l[34;82H4-18[30;18H[?25h[?25l[1;33H{[30;17H}[31;13H[106m()[m[34;80H4,8-15[31;15H[?25h[?25l[34;82H7-14[31;14H[?25h[?25l[106mi[m)i[106m)[m[34;82H8-15[31;15H[?25h[?25l[106mn[m)n[106m)[m[34;82H9-16[31;16H[?25h[?25l[32min[m[32m[106mt[m)[32mt[m[106m)[m[34;82H10-17[31;17H[?25h[?25l[106m [m) [106m)[m[34;83H1-18[31;18H[?25h[?25l[106mi[m)i[106m)[m[34;83H2-19[31;19H[?25h[?25l[106m [m) [106m)[m[34;83H3-20[31;20H[?25h[?25l)[31;20H[K[31;19H[106m)[m[34;83H2-19[31;19H[?25h[?25l[106m=[m)=[106m)[m[34;83H3-20[31;20H[?25h[?25l[31m[106m0[m)[31m0[m[106m)[m[34;83H4-21[31;21H[?25h[?25l[31;13H([7C)[34;80H5,2    [32;2H[?25h[?25l[34;80H6,2-9[33;9H[?25h[?25l[34;80H5,2  [32;2H[?25h[?25l[31;13H[106m([7C)[m[34;80H4,14-21[31;21H[?25h[?25l[31;13H([7C)[34;83H3-20[31;20H[?25h[?25l[31;13H[106m([7C)[m[34;83H4-21[31;21H[?25h[?25l)[31;21H[K[31;20H[106m)[m[34;83H3-20[31;20H[?25h[?25l)[31;20H[K[31;19H[106m)[m[34;83H2-19[31;19H[?25h[?25l)[31;19H[K[31;18H[106m)[m[34;83H1-18[31;18H[?25h[?25l)[31;18H[K[31;17H[106m)[m[34;83H0-17[31;17H[?25h[?25lin)[31;17H[K[31;16H[106m)[m[34;82H9-16 [31;16H[?25h[?25l)[31;16H[K[31;15H[106m)[m[34;82H8-15[31;15H[?25h[?25l[106mn[m)n[106m)[m[34;82H9-16[31;16H[?25h[?25l[32min[m[32m[106mt[m)[32mt[m[106m)[m[34;82H10-17[31;17H[?25h[?25l[106m [m) [106m)[m[34;83H1-18[31;18H[?25h[?25l[106mx[m)x[106m)[m[34;83H2-19[31;19H[?25h[?25l[106m;[m);[106m)[m[34;83H3-20[31;20H[?25h[?25l)[31;20H[K[31;19H[106m)[m[34;83H2-19[31;19H[?25h[?25l[106m:[m):[106m)[m[34;83H3-20[31;20H[?25h[?25l[106mc[m)c[106m)[m[34;83H4-21[31;21H[?25h[?25l[106mo[m)o[106m)[m[34;83H5-22[31;22H[?25h[?25l[106ml[m)l[106m)[m[34;83H6-23[31;23H[?25h[?25l[106mu[m)u[106m)[m[34;83H7-24[31;24H[?25h[?25l[106mm[m)m[106m)[m[34;83H8-25[31;25H[?25h[?25l[106mn[m)n[106m)[m[34;83H9-26[31;26H[?25h[?25l[106m2[m)2[106m)[m[34;82H20-27[31;27H[?25h[?25l)[31;27H[K[31;26H[106m)[m[34;82H19-26[31;26H[?25h[?25l[106m1[m)1[106m)[m[34;82H20-27[31;27H[?25h[?25l[34;83H1-28[31;28H[?25h[?25l{[31;13H([13C)[106m{
}[m[34;83H2-29[31;29H[?25h[?25l}[106m}[m
}[34;83H3-30[31;30H[?25h[?25l[34;83H2-29[31;29H[?25h[?25l[1;33r[33;1H
[1;34r[31;33r[31;1H[L[1;34r[30;29H[K[31;9H}[34;79H[K[34;79H55,2-9[8CBot[31;9H[106m}[?25h[?25l[1;33r[m[33;1H
[1;34r[31;33r[31;1H[L[1;34r[30;9H[K[31;9H}[34;79H[K[34;79H56,2-9[8CBot[31;9H[106m}[?25h[?25l[m[29;28H{[31;9H}[34;80H5[30;9H[?25h[?25l[34;82H3-17[30;17H[?25h[?25lc[34;82H4-18[30;18H[?25h[?25lo[34;82H5-19[30;19H[?25h[?25lu[34;82H6-20[30;20H[?25h[?25lt[34;82H7-21[30;21H[?25h[?25l[34;82H8-22[30;22H[?25h[?25l<[34;82H9-23[30;23H[?25h[?25l<[34;82H10-24[30;24H[?25h[?25lX[34;83H1-25[30;25H[?25h[?25l[30;24H[K[34;83H0-24[30;24H[?25h[?25lx[34;83H1-25[30;25H[?25h[?25l<[34;83H2-26[30;26H[?25h[?25l<[34;83H3-27[30;27H[?25h[?25le[34;83H4-28[30;28H[?25h[?25ln[34;83H5-29[30;29H[?25h[?25ld[34;83H6-30[30;30H[?25h[?25ll[34;83H7-31[30;31H[?25h[?25l'[34;83H8-32[30;32H[?25h[?25l[30;31H[K[34;83H7-31[30;31H[?25h[?25l;[34;83H8-32[30;32H[?25h[34;1H[K[30;31H[?25l[34;69H^[[30;31H[34;69H  [30;32H[34;79H55,17-31      Bot[30;31H[?25h[?25l[34;69H:[30;31H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 58L, 1417C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
1990
1983
1978
1984
1985
1982
1966
1966
1976
1963
1988
1987
1988
1988
1989
1960
1956
1955
1962
1958
1962
1979
1966
1986
1985
1988
1992
1992
1992
1992
1924
1988
1986
1985
1959
1987
1988
1988
1955
1988
1989
1992
1988
1987
1957
1958
1967
1964
1962
1958
1962
1973
1932
1982
1988
1987
1992
1986
1986
1990
1984
1988
1988
1942
1977
1990
1945
1985
1975
1970
1935
1944
1941
1982
1949
1940
1956
1937
1935
1938
1952
1954
1969
1990
1982
1970
1983
1973
1972
1973
1976
1991
1964
1953
1968
1982
1987
1993
1993
1981
1992
1985
1973
1986
1948
1965
1988
1988
1973
1982
1954
1990
1983
1987
1984
1963
1988
1974
1983
1986
1987
1982
1977
1989
1943
1989
1987
1984
1989
1985
1963
1931
1968
1987
1988
1991
1987
1962
1992
1986
1961
1962
1991
1992
1987
1954
1986
1989
1990
1990
1969
1948
1946
1950
1990
1989
1992
1949
1975
1989
1967
1987
1983
1986
1981
1980
1989
1989
1981
1990
1961
1990
1991
1993
1979
1991
1950
1985
1992
1974
1977
1990
1943
1981
1945
1979
1984
1961
1974
1967
1992
1987
1985
1992
1979
1981
1978
1992
1987
1991
1981
1989
1980
1983
1956
1931
1972
1986
1979
1991
1944
1992
1990
1991
1972
1955
1987
1931
1926
1935
1931
1932
1939
1928
1929
1930
1982
1953
1975
1989
1979
1959
1961
1988
1986
1988
1964
1979
1932
1990
1992
1988
1984
1969
1990
1985
1984
1987
1987
1989
1936
1988
1987
1991
1987
1970
1978
1972
1974
1986
1980
1980
1931
1964
1948
1946
1990
1987
1985
1964
1976
1956
1968
1967
1975
1991
1991
1991
1991
1986
1988
1988
1986
1943
1987
1973
1947
1986
1934
1991
1989
1982
1940
1989
1932
1990
1988
1987
1970
1986
1989
1927
1991
1987
1986
1991
1948
1983
1990
1955
1983
1991
1979
1986
1972
1976
1975
1970
1977
1972
1955
1945
1956
1992
1978
1970
1990
1983
1984
1989
1986
1984
1990
1977
1987
1987
1978
1953
1988
1988
1985
1987
1983
1989
1988
1992
1978
1990
1957
1951
1971
1989
1974
1977
1938
1959
1941
1982
1991
1960
1954
1957
1964
1958
1959
1977
1991
1991
1986
1992
1991
1986
1962
1990
1979
1967
1990
1992
1988
1992
1990
1990
1988
1990
1988
1949
1989
1986
1977
1981
1992
1986
1989
1989
1990
1992
1990
1988
1988
1988
1983
1986
1988
1983
1965
1981
1964
1988
1991
1991
1970
1962
1988
1972
1976
1989
1991
1992
1983
1987
1989
1990
1982
1952
1970
1988
1976
1988
1941
1940
1987
1951
1956
1970
1988
1980
1989
1986
1990
1992
1987
1941
1941
1950
1939
1992
1952
1953
1978
1986
1985
1969
1969
1993
1976
1984
1986
1992
1978
1979
1986
1989
1989
1991
1989
1973
1927
1990
1992
1988
1990
1972
1965
1988
1988
1989
1992
1990
1987
1989
1974
1988
1991
1971
1990
1985
1989
1991
1986
1943
1987
1991
1940
1990
1992
1979
1980
1968
1986
1976
1992
1992
1958
1990
1990
1991
1988
1988
1991
1972
1966
1982
1971
1973
1970
1986
1984
1975
1992
1979
1990
1975
1987
1966
1990
1986
1986
1988
1976
1936
1985
1960
1992
1963
1986
1965
1988
1986
1990
1985
1979
1989
1990
1992
1986
1981
1992
1987
1967
1979
1991
1984
1983
1985
1985
1989
1991
1987
1968
1970
1941
1949
1991
1957
1967
1968
1950
1977
1985
1993
1991
1973
1931
1984
1991
1988
1948
1987
1983
1990
1963
1959
1986
1990
1986
1939
1986
1985
1984
1984
1955
1988
1968
1973
1969
1957
1985
1973
1970
1981
1988
1991
1986
1988
1992
1979
1984
1974
1966
1977
1975
1973
1990
1955
1966
1987
1989
1987
1974
1953
1989
1973
1992
1987
1970
1955
1968
1964
1991
1979
1961
1966
1987
1968
1960
1991
1950
1947
1949
1993
1990
1954
1979
1987
1962
1988
1988
1991
1962
1989
1963
1937
1936
1931
1984
1990
1963
1986
1979
1986
1990
1974
1982
1993
1990
1991
1949
1950
1948
1968
1971
1961
1984
1982
1988
1960
1966
1953
1969
1954
1976
1982
1981
1989
1985
1984
1979
1971
1952
1990
1956
1971
1943
1946
1951
1962
1957
1980
1987
1926
1920
1928
1991
1989
1991
1982
1987
1969
1976
1987
1988
1955
1971
1991
1940
1980
1990
1973
1991
1987
1973
1971
1988
1935
1990
1989
1976
1969
1993
1975
1970
1989
1983
1951
1980
1983
1991
1990
1972
1970
1985
1987
1991
1938
1971
1948
1990
1991
1986
1971
1985
1990
1947
1937
1947
1949
1937
1949
1957
1982
1986
1990
1949
1990
1956
1962
1986
1986
1990
1981
1993
1990
1977
1972
1991
1992
1992
1992
1993
1993
1989
1983
1992
1982
1953
1990
1992
1992
1986
1990
1989
1986
1993
1989
1990
1991
1992
1989
1968
1989
1991
1988
1991
1953
1991
1960
1991
1958
1979
1992
1967
1991
1991
1992
1939
1932
1965
1992
1939
1938
1991
1992
1991
1992
1991
1993
1991
1932
1988
1991
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:23:22 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 58L, 1417C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awardd[2;1Hs,image;[3;25Hgetline(infile, year,[31m';'[m);[4;25H[38;5;130mif[m (!year.empty()){[5;33Hcolumn1.push_back(stoi(year));}[6;25H[38;5;130melse[m{column1.push_back([31m0[m); }[8;25Hgetline(infile, length,[31m';'[m);[9;25H[38;5;130mif[m(!length.empty()){[10;25Hcolumn2.push_back(stoi(length));}[11;25H[38;5;130melse[m{column2.push_back([31m0[m);}

               [9Cgetline(infile, title,[31m';'[m);
                        column3.push_back(title);[15;11H              getline(infile, subject,[31m';'[m);[15;55H[K[16;10H               column4.push_back(subject);[16;52H[K[17;11H              getline(infile, actor,[31m';'[m);[18;10H               column5.push_back(actor);[18;50H[K[19;9H                getline(infile, actress,[31m';'[m);
                        column6.push_back(actress);[21;14H           getline(infile, director,[31m';'[m);[22;7H                  column7.push_back(director);[23;25Hgetline(infile,popularity,[31m';'[m);
                [34m//      column8.push_back(stoi(popularity));[m[24;61H[K[25;5H                    getline(infile, awards,[31m';'[m);[25;53H[K[26;5H                    getline(infile, image,[35m'\n'[m);[26;53H[K[27;1H                        column10.push_back(image);
                }[28;18H[K[29;5H    [38;5;130mfor[m ([32mint[m x:column1){[29;29H[K[30;5H            cout <<x<<endl;[30;32H[K[31;5H    }[31;10H[K[32;1H}
        [33;9H[K[34;79H55,17-31      Bot[30;31H[?25h[?25l[34;69H~@k[30;31H[34;69H   [29;28H[106m{[31;9H}[m[34;80H4,21-28[29;28H[?25h[?25l[34;69H~@k[29;28H[34;69H   [28;17H[29;28H{[31;9H}[34;80H3,3-17 [28;17H[?25h[?25l[34;69H~@k[28;17H[34;69H   [27;31H[34;80H2,10-31[27;31H[?25h[?25l[34;69H~@k[27;31H[34;69H   [26;31H[34;80H1[26;31H[?25h[?25l[34;69H~@k[26;31H[34;69H   [25;31H[34;80H0[25;31H[?25h[?25l[34;69H~@k[25;31H[34;69H   [24;31H[34;79H49,12[24;31H[?25h[?25l[34;69H~@k[24;31H[34;69H   [23;31H[34;80H8,10[23;31H[?25h[?25l[34;69H~@k[23;31H[34;69H   [22;31H[34;80H7[22;31H[?25h[?25l[34;69H~@k[22;31H[34;69H   [21;31H[34;80H6[21;31H[?25h[?25l[34;69H~@k[21;31H[34;69H   [20;31H[34;80H5[20;31H[?25h[?25l[34;69H~@k[20;31H[34;69H   [19;31H[34;80H4[19;31H[?25h[?25l[34;69H~@k[19;31H[34;69H   [18;31H[34;80H3[18;31H[?25h[?25l[34;69H~@k[18;31H[34;69H   [17;31H[34;80H2[17;31H[?25h[?25l[34;69H~@k[17;31H[34;69H   [16;31H[34;80H1[16;31H[?25h[?25l[34;69H~@k[16;31H[34;69H   [15;31H[34;80H0[15;31H[?25h[?25l[34;69H~@k[15;31H[34;69H   [14;31H[34;79H39[14;31H[?25h[?25l[34;69H~@k[14;31H[34;69H   [13;31H[34;80H8[13;31H[?25h[?25l[34;69H~@k[13;31H[34;69H   [12;24H[34;80H7,3-24 [12;24H[?25h[?25l[34;69H~@k[12;24H[34;69H   [11;31H[34;80H6,10-31[11;31H[?25h[?25l[34;69H~@k[11;31H[34;69H   [10;31H[34;80H5[10;31H[?25h[?25l[34;69H~@k[10;31H[34;69H   [9;31H[34;80H4[9;31H[?25h[?25l[34;69H~@k[9;31H[34;69H   [8;31H[34;80H3[8;31H[?25h[?25l[34;69H~@k[8;31H[34;69H   [7;1H[34;80H2,0-1  [7;1H[?25h[?25l[34;69H~@k[7;1H[34;69H   [6;31H[34;80H1,10-31[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;32H[1;33r[1;1H[L[1;34r[34;1H[K[34;79H30,4-32[7C96%[6;32H[?25h[?25l[34;69H~@k[6;32H[34;69H   [6;31H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(getline(infile,x)){[34;79H[K[34;79H29,10-31      92%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;31H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;79H[K[34;79H28,10-31      88%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;31H[1;33r[1;1H[2L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,10-31      80%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,0-1[8C76%[6;1H[?25h[?25l[34;69H~@k[6;1H[34;69H   [6;31H[1;33r[1;1H[L[1;34r[1;9Hstring x;[6;22H[106m([8C)[m[34;79H[K[34;79H25,24-31      73%[6;31H[?25h[?25l[34;69H~@k[6;31H[34;69H   [6;23H[1;33r[1;1H[L[1;34r[7;22H([8C)[34;79H[K[34;79H24,16-23      69%[6;23H[?25h[?25l[34;69H~@k[6;23H[34;69H   [6;18H[1;33r[1;1H[L[1;34r[1;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H23,11-18      65%[6;18H[?25h[?25l[34;69H~@k[6;18H[34;69H   [7;23H[34;80H4,16-23[7;23H[?25h[?25l[34;69H~@k[7;23H[34;69H   [8;31H[8;22H[106m([8C)[m[34;80H5,24-31[8;31H[?25h[?25l[34;69H~@k[8;31H[34;69H   [9;1H[8;22H([8C)[34;80H6,0-1  [9;1H[?25h[?25l[34;69H~@k[9;1H[34;69H   [8;31H[8;22H[106m([8C)[m[34;80H5,24-31[8;31H[?25h[?25l[34;69H~@k[8;31H[34;69H   [8;30H[8;22H([8C)[34;83H3-30[8;30H[?25h[?25l[34;69H~@k[8;30H[34;69H   [8;31H[8;22H[106m([8C)[m[34;83H4-31[8;31H[?25h[?25l[34;69H,[8;31H[34;69H [8;31H[?25h[?25l[34;69Hi[8;31H[34;69H [8;31H[34;1H[1m-- INSERT --[m[34;79H[K[34;79H25,24-31      65%[8;31H[?25h[?25l[8;14H[106m([m[7C([8C)[106m)[m[34;83H5-32[8;32H[?25h[?25l[8;14H([7C[106m([8C)[m)[34;83H4-31[8;31H[?25h[?25l[106m,[m)){,[106m)[m[34;83H5-32[8;32H[?25h[?25l[8;22H([9C)[34;80H6,1    [9;1H[?25h[?25l[34;80H7,11-32[10;32H[?25h[?25l[12;32H[106m([16C)[m[34;80H8[12;32H[?25h[?25l([16C)[34;80H9[13;32H[?25h[?25l[34;79H30,4-25 [14;25H[?25h[?25l[34;80H1,11-32[15;32H[?25h[?25l[34;80H2,1    [16;1H[?25h[?25l[17;32H[106m([18C)[m[34;80H3,11-32[17;32H[?25h[?25l([18C)[34;80H4[18;32H[?25h[?25l[34;80H5[19;32H[?25h[?25l[34;80H6[20;32H[?25h[?25l[34;80H7,4-25 [21;25H[?25h[?25l[22;32H[106m([17C)[m[34;80H8,11-32[22;32H[?25h[?25l([17C)[34;80H9[23;32H[?25h[?25l[24;32H[106m([19C)[m[34;79H40[24;32H[?25h[?25l([19C)[34;80H1[25;32H[?25h[?25l[26;32H[106m([17C)[m[34;80H2[26;32H[?25h[?25l([17C)[34;80H3[27;32H[?25h[?25l[28;32H[106m([19C)[m[34;80H4[28;32H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H45,11-32      69%[27;32H([19C)[28;32H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;79H[K[34;79H46,11-32      73%[28;32H[106m([20C)[28;32H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H47,11-32      76%[27;32H([20C)[28;32H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H48,11-32      80%[28;32H[106m([21C)[28;32H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9H[38;5;130mfor[m ([32mint[m x:column1){[34;79H[K[34;79H49,13-32      84%[27;32H([21C)[28;32H[?25h[?25l[1;33r[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;79H[K[34;79H50,11-32      88%[28;32H[106m([18C)[28;32H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9H}[34;79H[K[34;79H51,11-32      92%[27;32H([18C)[28;32H[106m([18C)[28;32H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;1H}[34;79H[K[34;79H52,11-32      96%[27;32H([18C)[28;32H[?25h[?25l[1;33r[33;1H
[1;34r[34;79H[K[34;79H53,4-18[7CBot[28;18H[?25h[?25l[34;80H2,11-32[27;32H[?25h[?25l[26;32H[106m([18C)[m[34;80H1[26;32H[?25h[?25l[25;32H[106m([18C)[m[26;32H([18C)[34;80H0[25;32H[?25h[?25l([18C)[26;32H[106m([18C)[m[34;80H1[26;32H[?25h[?25l([18C)[34;83H0-31[26;31H[?25h[?25le[106m([18C)[m[34;83H1-32[26;32H[?25h[?25l([18C)[34;83H0-31[26;31H[?25h[?25le[106m([18C)[m[34;83H1-32[26;32H[?25h[?25l[106mi[m(infile, image,[35m'\n[m[35m[106m'[m);[26;32Hi[106m([m[17C[35m'[m[106m)[m[34;83H2-33[26;33H[?25h[?25l([106mi[mnfile, image,[35m'\n'[m)[106m;[m[26;53H[K[26;32H[106m([mi[17C[106m)[m;[34;83H1-32[26;32H[?25h[?25l[34;83H2-33[26;33H[?25h[?25l([18C)[34;83H3-34[26;34H[?25h[?25l[34;83H4-35[26;35H[?25h[?25l[34;83H5-36[26;36H[?25h[?25l[34;83H6-37[26;37H[?25h[?25l[34;83H7-38[26;38H[?25h[?25l[34;83H8-39[26;39H[?25h[?25l[34;83H9-40[26;40H[?25h[?25l[34;82H20-41[26;41H[?25h[?25l[34;83H1-42[26;42H[?25h[?25l[34;83H2-43[26;43H[?25h[?25l[34;83H3-44[26;44H[?25h[?25l[34;83H4-45[26;45H[?25h[?25l[34;83H5-46[26;46H[?25h[?25l[34;83H6-47[26;47H[?25h[?25l[34;83H7-48[26;48H[?25h[?25l[34;83H8-49[26;49H[?25h[?25l[34;83H9-50[26;50H[?25h[?25l'\');[26;52H[K[34;83H8-49[26;49H[?25h[?25l');[26;51H[K[34;83H7-48[26;48H[?25h[?25l[31m';'[m);[34;83H8-49[26;49H[?25h[34;1H[K[26;48H[?25l[34;69H^[[26;48H[34;69H  [26;49H[34;79H51,27-48      Bot[26;48H[?25h[?25l[34;69H:[26;48H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 58L, 1417C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:25:25:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K)[m[Kâ€™ token
   25 |  while(getline(infile,x,[01;31m[K)[m[K){
      |                         [01;31m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:26:01 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 58L, 1417C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9H[38;5;130mwhile[m(getline(infile,x,)){[3;25Hstring year,length,title,subject,actor,actress,director,popularity,awardd[4;1Hs,image;[5;25Hgetline(infile, year,[31m';'[m);[6;25H[38;5;130mif[m (!year.empty()){[7;33Hcolumn1.push_back(stoi(year));}[8;25H[38;5;130melse[m{column1.push_back([31m0[m); }[10;25Hgetline(infile, length,[31m';'[m);[11;25H[38;5;130mif[m(!length.empty()){[12;25Hcolumn2.push_back(stoi(length));}
               [9C[38;5;130melse[m{column2.push_back([31m0[m);}
                        [14;26H[K[15;11H              getline(infile, title,[31m';'[m);[15;52H[K[16;10H               column3.push_back(title);[16;50H[K[17;11H              getline(infile, subject,[31m';'[m);[18;10H               column4.push_back(subject);[19;9H                getline(infile, actor,[31m';'[m);
                        column5.push_back(actor);[21;14H           getline(infile, actress,[31m';'[m);[22;7H                  column6.push_back(actress);[23;25Hgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[24;53H[K[25;5H                    getline(infile,popularity,[31m';'[m);[25;56H[K[26;5H            [34m//      column8.push_back(stoi(popularity));[m[26;61H[K[27;1H                        getline(infile, awards,[31m';'[m);
                        getline(infile, image,[31m';'[m);[28;52H[K[29;5H                    column10.push_back(image);
                }[30;18H[K[31;5H    [38;5;130mfor[m ([32mint[m x:column1){[32;17Hcout <<x<<endl;
        }[33;10H[K[34;79H51,27-48      92%[28;48H[?25h[?25l[34;69H~@k[28;48H[34;69H   [27;48H[34;80H0[27;48H[?25h[?25l[34;69H~@k[27;48H[34;69H   [26;48H[34;79H49,29[26;48H[?25h[?25l[34;69H~@k[26;48H[34;69H   [25;48H[34;80H8,27[25;48H[?25h[?25l[34;69H~@k[25;48H[34;69H   [24;48H[34;80H7[24;48H[?25h[?25l[34;69H~@k[24;48H[34;69H   [23;48H[34;80H6[23;48H[?25h[?25l[34;69H~@k[23;48H[34;69H   [22;48H[34;80H5[22;48H[?25h[?25l[34;69H~@k[22;48H[34;69H   [21;48H[34;80H4[21;48H[?25h[?25l[34;69H~@k[21;48H[34;69H   [20;48H[106m([mactor[106m)[m[34;80H3[20;48H[?25h[?25l[34;69H~@k[20;48H[34;69H   [19;48H[20;42H(actor)[34;80H2[19;48H[?25h[?25l[34;69H~@k[19;48H[34;69H   [18;48H[34;80H1[18;48H[?25h[?25l[34;69H~@k[18;48H[34;69H   [17;48H[34;80H0[17;48H[?25h[?25l[34;69H~@k[17;48H[34;69H   [16;48H[106m([mtitle[106m)[m[34;79H39[16;48H[?25h[?25l[34;69H~@k[16;48H[34;69H   [15;48H[16;42H(title)[34;80H8[15;48H[?25h[?25l[34;69H~@k[15;48H[34;69H   [14;24H[34;80H7,3-24 [14;24H[?25h[?25l[34;69H~@k[14;24H[34;69H   [13;48H[34;80H6,27-48[13;48H[?25h[?25l[34;69H~@k[13;48H[34;69H   [12;48H[34;80H5[12;48H[?25h[?25l[34;69H~@k[12;48H[34;69H   [11;44H[106m{[12;57H}[m[34;80H4,23-44[11;44H[?25h[?25l[34;69H~@k[11;44H[34;69H   [10;48H[11;44H{[12;57H}[34;80H3,27-48[10;48H[?25h[?25l[34;69H~@k[10;48H[34;69H   [9;1H[34;80H2,0-1  [9;1H[?25h[?25l[34;69H~@k[9;1H[34;69H   [8;48H[34;80H1,27-48[8;48H[?25h[?25l[34;69H~@k[8;48H[34;69H   [7;48H[34;80H0,20[7;48H[?25h[?25l[34;69H~@k[7;48H[34;69H   [6;43H[106m{[7;63H}[m[34;79H29,22-43[6;43H[?25h[?25l[34;69H~@k[6;43H[34;69H   [6;48H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[7;43H{[8;63H}[34;1H[K[34;79H28,27-48      88%[6;48H[?25h[?25l[34;69H~@k[6;48H[34;69H   [6;48H[1;33r[1;1H[2L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,27-48      80%[6;48H[?25h[?25l[34;69H~@k[6;48H[34;69H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,0-1[8C76%[6;1H[?25h[?25l[34;69H~@k[6;1H[34;69H   [6;34H[1;33r[1;1H[L[1;34r[1;9Hstring x;[34;79H[K[34;79H25,27-34      73%[6;34H[?25h[?25l[34;69H~@k[6;34H[34;69H   [6;23H[1;33r[1;1H[L[1;34r[34;79H[K[34;79H24,16-23      69%[6;23H[?25h[?25l[34;69H~@k[6;23H[34;69H   [6;18H[1;33r[1;1H[L[1;34r[1;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[34;79H[K[34;79H23,11-18      65%[6;18H[?25h[?25l[34;69H~@k[6;18H[34;69H   [6;48H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;79H[K[34;79H22,41-48      61%[6;48H[?25h[?25l[34;69H~@k[6;48H[34;69H   [7;18H[34;80H3,11-1[7;18H[?25h[?25l[34;69H~@k[7;18H[34;69H   [8;23H[34;80H4,16-23[8;23H[?25h[?25l[34;69H~@k[8;23H[34;69H   [9;34H[34;80H5,27-34[9;34H[?25h[?25l[34;69H~@k[9;34H[34;69H   [9;33H[9;14H[106m([18C)[m[34;83H6-33[9;33H[?25h[?25l[34;69H~@k[9;33H[34;69H   [9;32H[9;14H([7C[106m([9C)[m)[34;83H5-32[9;32H[?25h[?25l[34;69Hi[9;32H[34;69H [9;32H[34;1H[1m-- INSERT --[m[34;79H[K[34;79H25,25-32      61%[9;32H[?25h[?25l[9;22H([9C)[34;83H4-31[9;31H[?25h[?25l[9;22H[106m([9C)[m[34;83H5-32[9;32H[?25h[?25l)[1C{[9;34H[K[9;31H[106m)[m)[34;83H4-31[9;31H[?25h[34;1H[K[9;30H[?25l[34;69H^[[9;30H[34;69H  [9;31H[9;22H([8C)[34;79H25,23-30      61%[9;30H[?25h[?25l[34;69H:[9;30H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 58L, 1416C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
1990
1983
1978
1984
1985
1982
1966
1966
1976
1963
1988
1987
1988
1988
1989
1960
1956
1955
1962
1958
1962
1979
1966
1986
1985
1988
1992
1992
1992
1992
1924
1988
1986
1985
1959
1987
1988
1988
1955
1988
1989
1992
1988
1987
1957
1958
1967
1964
1962
1958
1962
1973
1932
1982
1988
1987
1992
1986
1986
1990
1984
1988
1988
1942
1977
1990
1945
1985
1975
1970
1935
1944
1941
1982
1949
1940
1956
1937
1935
1938
1952
1954
1969
1990
1982
1970
1983
1973
1972
1973
1976
1991
1964
1953
1968
1982
1987
1993
1993
1981
1992
1985
1973
1986
1948
1965
1988
1988
1973
1982
1954
1990
1983
1987
1984
1963
1988
1974
1983
1986
1987
1982
1977
1989
1943
1989
1987
1984
1989
1985
1963
1931
1968
1987
1988
1991
1987
1962
1992
1986
1961
1962
1991
1992
1987
1954
1986
1989
1990
1990
1969
1948
1946
1950
1990
1989
1992
1949
1975
1989
1967
1987
1983
1986
1981
1980
1989
1989
1981
1990
1961
1990
1991
1993
1979
1991
1950
1985
1992
1974
1977
1990
1943
1981
1945
1979
1984
1961
1974
1967
1992
1987
1985
1992
1979
1981
1978
1992
1987
1991
1981
1989
1980
1983
1956
1931
1972
1986
1979
1991
1944
1992
1990
1991
1972
1955
1987
1931
1926
1935
1931
1932
1939
1928
1929
1930
1982
1953
1975
1989
1979
1959
1961
1988
1986
1988
1964
1979
1932
1990
1992
1988
1984
1969
1990
1985
1984
1987
1987
1989
1936
1988
1987
1991
1987
1970
1978
1972
1974
1986
1980
1980
1931
1964
1948
1946
1990
1987
1985
1964
1976
1956
1968
1967
1975
1991
1991
1991
1991
1986
1988
1988
1986
1943
1987
1973
1947
1986
1934
1991
1989
1982
1940
1989
1932
1990
1988
1987
1970
1986
1989
1927
1991
1987
1986
1991
1948
1983
1990
1955
1983
1991
1979
1986
1972
1976
1975
1970
1977
1972
1955
1945
1956
1992
1978
1970
1990
1983
1984
1989
1986
1984
1990
1977
1987
1987
1978
1953
1988
1988
1985
1987
1983
1989
1988
1992
1978
1990
1957
1951
1971
1989
1974
1977
1938
1959
1941
1982
1991
1960
1954
1957
1964
1958
1959
1977
1991
1991
1986
1992
1991
1986
1962
1990
1979
1967
1990
1992
1988
1992
1990
1990
1988
1990
1988
1949
1989
1986
1977
1981
1992
1986
1989
1989
1990
1992
1990
1988
1988
1988
1983
1986
1988
1983
1965
1981
1964
1988
1991
1991
1970
1962
1988
1972
1976
1989
1991
1992
1983
1987
1989
1990
1982
1952
1970
1988
1976
1988
1941
1940
1987
1951
1956
1970
1988
1980
1989
1986
1990
1992
1987
1941
1941
1950
1939
1992
1952
1953
1978
1986
1985
1969
1969
1993
1976
1984
1986
1992
1978
1979
1986
1989
1989
1991
1989
1973
1927
1990
1992
1988
1990
1972
1965
1988
1988
1989
1992
1990
1987
1989
1974
1988
1991
1971
1990
1985
1989
1991
1986
1943
1987
1991
1940
1990
1992
1979
1980
1968
1986
1976
1992
1992
1958
1990
1990
1991
1988
1988
1991
1972
1966
1982
1971
1973
1970
1986
1984
1975
1992
1979
1990
1975
1987
1966
1990
1986
1986
1988
1976
1936
1985
1960
1992
1963
1986
1965
1988
1986
1990
1985
1979
1989
1990
1992
1986
1981
1992
1987
1967
1979
1991
1984
1983
1985
1985
1989
1991
1987
1968
1970
1941
1949
1991
1957
1967
1968
1950
1977
1985
1993
1991
1973
1931
1984
1991
1988
1948
1987
1983
1990
1963
1959
1986
1990
1986
1939
1986
1985
1984
1984
1955
1988
1968
1973
1969
1957
1985
1973
1970
1981
1988
1991
1986
1988
1992
1979
1984
1974
1966
1977
1975
1973
1990
1955
1966
1987
1989
1987
1974
1953
1989
1973
1992
1987
1970
1955
1968
1964
1991
1979
1961
1966
1987
1968
1960
1991
1950
1947
1949
1993
1990
1954
1979
1987
1962
1988
1988
1991
1962
1989
1963
1937
1936
1931
1984
1990
1963
1986
1979
1986
1990
1974
1982
1993
1990
1991
1949
1950
1948
1968
1971
1961
1984
1982
1988
1960
1966
1953
1969
1954
1976
1982
1981
1989
1985
1984
1979
1971
1952
1990
1956
1971
1943
1946
1951
1962
1957
1980
1987
1926
1920
1928
1991
1989
1991
1982
1987
1969
1976
1987
1988
1955
1971
1991
1940
1980
1990
1973
1991
1987
1973
1971
1988
1935
1990
1989
1976
1969
1993
1975
1970
1989
1983
1951
1980
1983
1991
1990
1972
1970
1985
1987
1991
1938
1971
1948
1990
1991
1986
1971
1985
1990
1947
1937
1947
1949
1937
1949
1957
1982
1986
1990
1949
1990
1956
1962
1986
1986
1990
1981
1993
1990
1977
1972
1991
1992
1992
1992
1993
1993
1989
1983
1992
1982
1953
1990
1992
1992
1986
1990
1989
1986
1993
1989
1990
1991
1992
1989
1968
1989
1991
1988
1991
1953
1991
1960
1991
1958
1979
1992
1967
1991
1991
1992
1939
1932
1965
1992
1939
1938
1991
1992
1991
1992
1991
1993
1991
1932
1988
1991
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:26:16 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 58L, 1416C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[11;9Hifstream infile;[12;9Hinfile.open([31m"films.txt"[m);
        [38;5;130mif[m(infile.fail()){
                cout << [31m"Error with file"[m;[14;43H[K[15;11H      exit([31m1[m);[15;28H[K[16;9H}[16;10H[K[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[19;9H[K[20;1H        string x;[20;18H[K[21;9Hvector <[32mint[m> column1, column2,column8;[22;7H  vector<string> column3,column4,column5,column6,column7,column10;[23;9H[32mint[m sum=[31m0[m;
        [32mdouble[m average;[24;25H[K[25;5H    [38;5;130mwhile[m(getline(infile,x)){[25;35H[K[26;5H[K[27;1H                        string year,length,title,subject,actor,actress,director,popularity,awardd[28;1Hs,image;[28;9H[K[29;5H                    getline(infile, year,[31m';'[m);
                        [38;5;130mif[m (!year.empty()){[30;44H[K[31;5H                            column1.push_back(stoi(year));}[32;25H[38;5;130melse[m{column1.push_back([31m0[m); }[33;1H[K[34;79H25,23-30      Top[25;30H[?25h[?25l[34;69H~@k[25;30H[34;69H   [26;1H[34;80H6,0-1  [26;1H[?25h[?25l[34;69H~@k[26;1H[34;69H   [26;1H[?25h[?25l[34;69H~@k[26;1H[34;69H   [25;30H[34;80H5,23-30[25;30H[?25h[?25l[34;69Hi[25;30H[34;69H [25;30H[34;1H[1m-- INSERT --[m[34;13H[K[34;79H25,23-30      Top[25;30H[?25h[?25l[25;22H[106m([8C)[m[34;83H4-31[25;31H[?25h[?25l[106m,[m)){,[106m)[m[34;83H5-32[25;32H[?25h[?25l[106m'[m)){'[106m)[m[34;83H6-33[25;33H[?25h[?25l[106m'[m)){'[106m)[m[34;83H7-34[25;34H[?25h[?25l[25;22H([11C)[34;83H6-33[25;33H[?25h[?25l\')){[34;83H7-34[25;34H[?25h[?25l[97m[101m'\/'[m)){[34;83H8-35[25;35H[?25h[?25l'\')){[25;38H[K[34;83H7-34[25;34H[?25h[?25l[35m'\n'[m)){[34;83H8-35[25;35H[?25h[34;1H[K[25;34H[?25l[34;69H^[[25;34H[34;69H  [25;35H[34;79H25,27-34      Top[25;34H[?25h[?25l[34;69H:[25;34H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 58L, 1421C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
1990
1983
1978
1984
1985
1982
1966
1966
1976
1963
1988
1987
1988
1988
1989
1960
1956
1955
1962
1958
1962
1979
1966
1986
1985
1988
1992
1992
1992
1992
1924
1988
1986
1985
1959
1987
1988
1988
1955
1988
1989
1992
1988
1987
1957
1958
1967
1964
1962
1958
1962
1973
1932
1982
1988
1987
1992
1986
1986
1990
1984
1988
1988
1942
1977
1990
1945
1985
1975
1970
1935
1944
1941
1982
1949
1940
1956
1937
1935
1938
1952
1954
1969
1990
1982
1970
1983
1973
1972
1973
1976
1991
1964
1953
1968
1982
1987
1993
1993
1981
1992
1985
1973
1986
1948
1965
1988
1988
1973
1982
1954
1990
1983
1987
1984
1963
1988
1974
1983
1986
1987
1982
1977
1989
1943
1989
1987
1984
1989
1985
1963
1931
1968
1987
1988
1991
1987
1962
1992
1986
1961
1962
1991
1992
1987
1954
1986
1989
1990
1990
1969
1948
1946
1950
1990
1989
1992
1949
1975
1989
1967
1987
1983
1986
1981
1980
1989
1989
1981
1990
1961
1990
1991
1993
1979
1991
1950
1985
1992
1974
1977
1990
1943
1981
1945
1979
1984
1961
1974
1967
1992
1987
1985
1992
1979
1981
1978
1992
1987
1991
1981
1989
1980
1983
1956
1931
1972
1986
1979
1991
1944
1992
1990
1991
1972
1955
1987
1931
1926
1935
1931
1932
1939
1928
1929
1930
1982
1953
1975
1989
1979
1959
1961
1988
1986
1988
1964
1979
1932
1990
1992
1988
1984
1969
1990
1985
1984
1987
1987
1989
1936
1988
1987
1991
1987
1970
1978
1972
1974
1986
1980
1980
1931
1964
1948
1946
1990
1987
1985
1964
1976
1956
1968
1967
1975
1991
1991
1991
1991
1986
1988
1988
1986
1943
1987
1973
1947
1986
1934
1991
1989
1982
1940
1989
1932
1990
1988
1987
1970
1986
1989
1927
1991
1987
1986
1991
1948
1983
1990
1955
1983
1991
1979
1986
1972
1976
1975
1970
1977
1972
1955
1945
1956
1992
1978
1970
1990
1983
1984
1989
1986
1984
1990
1977
1987
1987
1978
1953
1988
1988
1985
1987
1983
1989
1988
1992
1978
1990
1957
1951
1971
1989
1974
1977
1938
1959
1941
1982
1991
1960
1954
1957
1964
1958
1959
1977
1991
1991
1986
1992
1991
1986
1962
1990
1979
1967
1990
1992
1988
1992
1990
1990
1988
1990
1988
1949
1989
1986
1977
1981
1992
1986
1989
1989
1990
1992
1990
1988
1988
1988
1983
1986
1988
1983
1965
1981
1964
1988
1991
1991
1970
1962
1988
1972
1976
1989
1991
1992
1983
1987
1989
1990
1982
1952
1970
1988
1976
1988
1941
1940
1987
1951
1956
1970
1988
1980
1989
1986
1990
1992
1987
1941
1941
1950
1939
1992
1952
1953
1978
1986
1985
1969
1969
1993
1976
1984
1986
1992
1978
1979
1986
1989
1989
1991
1989
1973
1927
1990
1992
1988
1990
1972
1965
1988
1988
1989
1992
1990
1987
1989
1974
1988
1991
1971
1990
1985
1989
1991
1986
1943
1987
1991
1940
1990
1992
1979
1980
1968
1986
1976
1992
1992
1958
1990
1990
1991
1988
1988
1991
1972
1966
1982
1971
1973
1970
1986
1984
1975
1992
1979
1990
1975
1987
1966
1990
1986
1986
1988
1976
1936
1985
1960
1992
1963
1986
1965
1988
1986
1990
1985
1979
1989
1990
1992
1986
1981
1992
1987
1967
1979
1991
1984
1983
1985
1985
1989
1991
1987
1968
1970
1941
1949
1991
1957
1967
1968
1950
1977
1985
1993
1991
1973
1931
1984
1991
1988
1948
1987
1983
1990
1963
1959
1986
1990
1986
1939
1986
1985
1984
1984
1955
1988
1968
1973
1969
1957
1985
1973
1970
1981
1988
1991
1986
1988
1992
1979
1984
1974
1966
1977
1975
1973
1990
1955
1966
1987
1989
1987
1974
1953
1989
1973
1992
1987
1970
1955
1968
1964
1991
1979
1961
1966
1987
1968
1960
1991
1950
1947
1949
1993
1990
1954
1979
1987
1962
1988
1988
1991
1962
1989
1963
1937
1936
1931
1984
1990
1963
1986
1979
1986
1990
1974
1982
1993
1990
1991
1949
1950
1948
1968
1971
1961
1984
1982
1988
1960
1966
1953
1969
1954
1976
1982
1981
1989
1985
1984
1979
1971
1952
1990
1956
1971
1943
1946
1951
1962
1957
1980
1987
1926
1920
1928
1991
1989
1991
1982
1987
1969
1976
1987
1988
1955
1971
1991
1940
1980
1990
1973
1991
1987
1973
1971
1988
1935
1990
1989
1976
1969
1993
1975
1970
1989
1983
1951
1980
1983
1991
1990
1972
1970
1985
1987
1991
1938
1971
1948
1990
1991
1986
1971
1985
1990
1947
1937
1947
1949
1937
1949
1957
1982
1986
1990
1949
1990
1956
1962
1986
1986
1990
1981
1993
1990
1977
1972
1991
1992
1992
1992
1993
1993
1989
1983
1992
1982
1953
1990
1992
1992
1986
1990
1989
1986
1993
1989
1990
1991
1992
1989
1968
1989
1991
1988
1991
1953
1991
1960
1991
1958
1979
1992
1967
1991
1991
1992
1939
1932
1965
1992
1939
1938
1991
1992
1991
1992
1991
1993
1991
1932
1988
1991
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ [Ag++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:26:53 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 58L, 1421C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[11;9Hifstream infile;[12;9Hinfile.open([31m"films.txt"[m);
        [38;5;130mif[m(infile.fail()){
                cout << [31m"Error with file"[m;[14;43H[K[15;11H      exit([31m1[m);[15;28H[K[16;9H}[16;10H[K[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[19;9H[K[20;1H        string x;[20;18H[K[21;9Hvector <[32mint[m> column1, column2,column8;[22;7H  vector<string> column3,column4,column5,column6,column7,column10;[23;9H[32mint[m sum=[31m0[m;
        [32mdouble[m average;[24;25H[K[25;5H    [38;5;130mwhile[m(getline(infile,x,[35m'\n'[m)){[25;39H[K[26;5H[K[27;1H                        string year,length,title,subject,actor,actress,director,popularity,awardd[28;1Hs,image;[28;9H[K[29;5H                    getline(infile, year,[31m';'[m);
                        [38;5;130mif[m (!year.empty()){[30;44H[K[31;5H                            column1.push_back(stoi(year));}[32;25H[38;5;130melse[m{column1.push_back([31m0[m); }[33;1H[K[34;79H25,27-34      Top[25;34H[?25h[?25l[34;69H~@k[25;34H[34;69H   [25;35H[34;83H8-35[25;35H[?25h[?25l[34;69H~@k[25;35H[34;69H   [25;34H[34;83H7-34[25;34H[?25h[?25l[34;69H~@k[25;34H[34;69H   [25;35H[34;83H8-35[25;35H[?25h[?25l[34;69Hi[25;35H[34;69H [25;35H[34;1H[1m-- INSERT --[m[34;13H[K[34;79H25,28-35      Top[25;35H[?25h[?25l'\')){[25;38H[K[34;83H7-34[25;34H[?25h[?25l')){[25;37H[K[34;83H6-33[25;33H[?25h[?25l[25;22H[106m([11C)[m[34;83H7-34[25;34H[?25h[?25l[25;22H([11C)[34;83H6-33[25;33H[?25h[?25l[25;22H[106m([11C)[m[34;83H7-34[25;34H[?25h[?25l[25;14H[106m([m[7C([11C)[106m)[m[34;83H8-35[25;35H[?25h[?25l[25;14H([7C[106m([11C)[m)[34;83H7-34[25;34H[?25h[?25l)[1C{[25;36H[K[25;33H[106m)[m)[34;83H6-33[25;33H[?25h[?25l)[1C{[25;35H[K[25;32H[106m)[m)[34;83H5-32[25;32H[?25h[?25l)[1C{[25;34H[K[25;31H[106m)[m)[34;83H4-31[25;31H[?25h[?25l)[1C{[25;33H[K[25;30H[106m)[m)[34;83H3-30[25;30H[?25h[?25l)[1C{[25;32H[K[25;29H[106m)[m)[34;83H2-29[25;29H[?25h[?25l)[1C{[25;31H[K[25;28H[106m)[m)[34;83H1-28[25;28H[?25h[?25l)[1C{[25;30H[K[25;27H[106m)[m)[34;83H0-27[25;27H[?25h[?25l(infi)[34;82H19-26[25;26H[?25h[?25l[34;83H8-25[25;25H[?25h[?25l[34;83H7-24[25;24H[?25h[?25l[106m([minfi[106m)[m[34;83H6-23[25;23H[?25h[?25l[106mi[mnfi)[97m[106m)[m{[25;29H[K[25;22Hinfi)[97m[101m)[m[34;83H5-22[25;22H[?25h[?25linfi)[97m[101m)[m{[25;28H[K[34;83H4-21[25;21H[?25h[?25linfi)[97m[101m)[m{[25;27H[K[34;83H3-20[25;20H[?25h[?25lnfi)[97m[101m)[m{[25;26H[K[34;83H2-19[25;19H[?25h[?25linfi)[97m[101m)[m{[25;25H[K[34;83H1-18[25;18H[?25h[?25linfi)[97m[101m)[m{[25;24H[K[34;83H0-17[25;17H[?25h[?25linfi)[97m[101m)[m{[25;23H[K[34;82H9-16 [25;16H[?25h[?25linfi)[97m[101m)[m{[25;22H[K[25;14H[106m([minfi[106m)[m[34;82H8-15[25;15H[?25h[?25l(infi)[34;82H9-16[25;16H[?25h[?25l[34;82H10-17[25;17H[?25h[?25l[34;83H1-18[25;18H[?25h[?25l[106m([minfi[106m)[m[34;83H2-19[25;19H[?25h[?25l[106ml[m)[97m[101m)[m{l[106m)[m[34;83H3-20[25;20H[?25h[?25l[106me[m)[97m[101m)[m{e[106m)[m[34;83H4-21[25;21H[?25h[?25l[106m.[m)[97m[101m)[m{.[106m)[m[34;83H5-22[25;22H[?25h[?25l[106mg[m)[97m[101m)[m{g[106m)[m[34;83H6-23[25;23H[?25h[?25l[106mo[m)[97m[101m)[m{o[106m)[m[34;83H7-24[25;24H[?25h[?25l[106mo[m)[97m[101m)[m{o[106m)[m[34;83H8-25[25;25H[?25h[?25l[106md[m)[97m[101m)[m{d[106m)[m[34;83H9-26[25;26H[?25h[?25l[106m([m)){[25;14H([12C[106m)[m[34;82H20-27[25;27H[?25h[?25l[2C[97m[101m)[m{[25;14H[106m([m[11C()[106m)[m[34;83H1-28[25;28H[?25h[?25l[25;14H([13C)[34;83H2-29[25;29H[?25h[?25l{[25;30H[K[25;14H[106m([13C)[m[34;83H1-28[25;28H[?25h[34;1H[K[25;27H[?25l[34;69H^[[25;27H[34;69H  [25;28H[25;14H([11C[106m()[m)[34;79H25,20-27      Top[25;27H[?25h[?25l[34;69H:[25;27H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 58L, 1412C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
Aborted (core dumped)
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:32:35 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 58L, 1412C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[11;9Hifstream infile;[12;9Hinfile.open([31m"films.txt"[m);
        [38;5;130mif[m(infile.fail()){
                cout << [31m"Error with file"[m;[14;43H[K[15;11H      exit([31m1[m);[15;28H[K[16;9H}[16;10H[K[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;9H[34m//infile.ignore(std::numeric_limits<std::streamsize>::max(),'\n');[m[19;9H[K[20;1H        string x;[20;18H[K[21;9Hvector <[32mint[m> column1, column2,column8;[22;7H  vector<string> column3,column4,column5,column6,column7,column10;[23;9H[32mint[m sum=[31m0[m;
        [32mdouble[m average;[24;25H[K[25;5H    [38;5;130mwhile[m(infile.good[106m()[m){[25;30H[K[26;5H[K[27;1H                        string year,length,title,subject,actor,actress,director,popularity,awardd[28;1Hs,image;[28;9H[K[29;5H                    getline(infile, year,[31m';'[m);
                        [38;5;130mif[m (!year.empty()){[30;44H[K[31;5H                            column1.push_back(stoi(year));}[32;25H[38;5;130melse[m{column1.push_back([31m0[m); }[33;1H[K[34;79H25,20-27      Top[25;27H[?25h[?25l[34;69H~@k[25;27H[34;69H   [24;23H[25;26H()[34;80H4,16-23[24;23H[?25h[?25l[34;69H~@k[24;23H[34;69H   [23;18H[34;80H3,11-18[23;18H[?25h[?25l[34;69H~@k[23;18H[34;69H   [22;27H[34;80H2,20-27[22;27H[?25h[?25l[34;69H~@k[22;27H[34;69H   [21;27H[34;80H1[21;27H[?25h[?25l[34;69H~@k[21;27H[34;69H   [20;17H[34;80H0,10-1[20;17H[?25h[?25l[34;69H~@k[20;17H[34;69H   [19;8H[34;79H19,1-8  [19;8H[?25h[?25l[34;69H~@k[19;8H[34;69H   [18;27H[34;80H8,20-27[18;27H[?25h[?25l[34;69H~@k[18;27H[34;69H   [18;26H[34;82H19-26[18;26H[?25h[?25l[34;69H~@k[18;26H[34;69H   [18;25H[34;83H8-25[18;25H[?25h[?25l[34;69H~@k[18;25H[34;69H   [18;24H[34m[106m([48C)[m[34;83H7-24[18;24H[?25h[?25l[34;69H~@k[18;24H[34;69H   [18;23H[1C[34m([48C)[m[34;83H6-23[18;23H[?25h[?25l[34;69H~@k[18;23H[34;69H   [18;22H[34;83H5-22[18;22H[?25h[?25l[34;69H~@k[18;22H[34;69H   [18;21H[34;83H4-21[18;21H[?25h[?25l[34;69H~@k[18;21H[34;69H   [18;20H[34;83H3-20[18;20H[?25h[?25l[34;69H~@k[18;20H[34;69H   [18;19H[34;83H2-19[18;19H[?25h[?25l[34;69H~@k[18;19H[34;69H   [18;18H[34;83H1-18[18;18H[?25h[?25l[34;69H~@k[18;18H[34;69H   [18;17H[34;83H0-17[18;17H[?25h[?25l[34;69H~@k[18;17H[34;69H   [18;16H[34;82H9-16 [18;16H[?25h[?25l[34;69H~@k[18;16H[34;69H   [18;15H[34;82H8-15[18;15H[?25h[?25l[34;69H~@k[18;15H[34;69H   [18;14H[34;82H7-14[18;14H[?25h[?25l[34;69H~@k[18;14H[34;69H   [18;13H[34;82H6-13[18;13H[?25h[?25l[34;69H~@k[18;13H[34;69H   [18;12H[34;82H5-12[18;12H[?25h[?25l[34;69H~@k[18;12H[34;69H   [18;11H[34;82H4-11[18;11H[?25h[?25l[34;69H~@k[18;11H[34;69H   [18;10H[34;82H3-10[18;10H[?25h[?25l[34;69H~@k[18;10H[34;69H   [18;11H[34;82H4-11[18;11H[?25h[?25l[34;69H~@k[18;11H[34;69H   [18;10H[34;82H3-10[18;10H[?25h[?25l[34;69H~@k[18;10H[34;69H   [18;9H[34;82H2-9 [18;9H[?25h[?25l[34;69Hi[18;9H[34;69H [18;9H[34;1H[1m-- INSERT --[m[34;13H[K[34;79H18,2-9[8CTop[18;9H[?25h[?25l[34;82H3-10[18;10H[?25h[?25l/infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;74H[K[34;82H2-9 [18;9H[?25h[?25l/infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;66H[K[34;82H1  [18;1H[?25h[?25l[34;82H2[18;2H[?25h[?25linfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;65H[K[34;82H1[18;1H[?25h[?25l`infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;82H2[18;2H[?25h[?25l`infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;82H3[18;3H[?25h[?25linfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;66H[K[34;82H2[18;2H[?25h[?25linfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;65H[K[34;82H1[18;1H[?25h[?25l        infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;82H2-9[18;9H[?25h[34;1H[K[18;8H[?25l[34;69H^[[18;8H[34;69H  [18;9H[34;79H18,1-8[8CTop[18;8H[?25h[?25l[34;69H:[18;8H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 58L, 1410C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
Aborted (core dumped)
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
terminate called after throwing an instance of 'std::invalid_argument'
  what():  stoi
Aborted (core dumped)
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:33:01 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 58L, 1410C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[11;9Hifstream infile;[12;9Hinfile.open([31m"films.txt"[m);
        [38;5;130mif[m(infile.fail()){
                cout << [31m"Error with file"[m;[14;43H[K[15;11H      exit([31m1[m);[15;28H[K[16;9H}[16;10H[K[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[19;9H[K[20;1H        string x;[20;18H[K[21;9Hvector <[32mint[m> column1, column2,column8;[22;7H  vector<string> column3,column4,column5,column6,column7,column10;[23;9H[32mint[m sum=[31m0[m;
        [32mdouble[m average;[24;25H[K[25;5H    [38;5;130mwhile[m(infile.good()){[25;30H[K[26;5H[K[27;1H                        string year,length,title,subject,actor,actress,director,popularity,awardd[28;1Hs,image;[28;9H[K[29;5H                    getline(infile, year,[31m';'[m);
                        [38;5;130mif[m (!year.empty()){[30;44H[K[31;5H                            column1.push_back(stoi(year));}[32;25H[38;5;130melse[m{column1.push_back([31m0[m); }[33;1H[K[34;79H18,1-8[8CTop[18;8H[?25h[?25l[34;69H~@k[18;8H[34;69H   [19;8H[34;80H9[19;8H[?25h[?25l[34;69H~@k[19;8H[34;69H   [20;8H[34;79H20[20;8H[?25h[?25l[34;69H~@k[20;8H[34;69H   [21;8H[34;80H1[21;8H[?25h[?25l[34;69H~@k[21;8H[34;69H   [22;8H[34;80H2[22;8H[?25h[?25l[34;69H~@k[22;8H[34;69H   [23;8H[34;80H3[23;8H[?25h[?25l[34;69H~@k[23;8H[34;69H   [24;8H[34;80H4[24;8H[?25h[?25l[34;69H~@k[24;8H[34;69H   [25;8H[34;80H5[25;8H[?25h[?25l[34;69H~@k[25;8H[34;69H   [24;8H[34;80H4[24;8H[?25h[?25l[34;69H~@k[24;8H[34;69H   [23;8H[34;80H3[23;8H[?25h[?25l[34;69H~@k[23;8H[34;69H   [22;8H[34;80H2[22;8H[?25h[?25l[34;69H~@k[22;8H[34;69H   [21;8H[34;80H1[21;8H[?25h[?25l[34;69H~@k[21;8H[34;69H   [20;8H[34;80H0[20;8H[?25h[?25l[34;69H~@k[20;8H[34;69H   [19;8H[34;79H19[19;8H[?25h[?25l[34;69H~@k[19;8H[34;69H   [20;8H[34;79H20[20;8H[?25h[?25l[34;69H~@k[20;8H[34;69H   [21;8H[34;80H1[21;8H[?25h[?25l[34;69H~@k[21;8H[34;69H   [22;8H[34;80H2[22;8H[?25h[?25l[34;69H~@k[22;8H[34;69H   [23;8H[34;80H3[23;8H[?25h[?25l[34;69H~@k[23;8H[34;69H   [24;8H[34;80H4[24;8H[?25h[?25l[34;69H~@k[24;8H[34;69H   [25;8H[34;80H5[25;8H[?25h[?25l[34;69H~@k[25;8H[34;69H   [26;1H[34;80H6,0-1[26;1H[?25h[?25l[34;69H~@k[26;1H[34;69H   [27;8H[34;80H7,1-8[27;8H[?25h[?25l[34;69H~@k[27;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, length,[31m';'[m);[34;1H[K[34;79H28,1-8[9C3%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25H[38;5;130mif[m(!length.empty()){[34;79H[K[34;79H29,1-8[9C7%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hcolumn2.push_back(stoi(length));}[34;79H[K[34;79H30,1-8[8C11%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;79H[K[34;79H31,1-8[8C15%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [27;8H[34;80H0[27;8H[?25h[?25l[34;69H~@k[27;8H[34;69H   [28;8H[34;80H1[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;1H[1;33r[33;1H
[1;34r[34;79H[K[34;79H32,0-1[8C19%[28;1H[?25h[?25l[34;69H~@k[28;1H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;79H[K[34;79H33,1-8[8C23%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;79H[K[34;79H34,1-8[8C26%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;79H[K[34;79H35,1-8[8C30%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;79H[K[34;79H36,1-8[8C34%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;79H[K[34;79H37,1-8[8C38%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;79H[K[34;79H38,1-8[8C42%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;79H[K[34;79H39,1-8[8C46%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;79H[K[34;79H40,1-8[8C50%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;79H[K[34;79H41,1-8[8C53%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;79H[K[34;79H42,1-8[8C57%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;79H[K[34;79H43,1-8[8C61%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;17H[34m//      column8.push_back(stoi(popularity));[m[34;79H[K[34;79H44,1-8[8C65%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H45,1-8[8C69%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[31m';'[m);[34;79H[K[34;79H46,1-8[8C73%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;79H[K[34;79H47,1-8[8C76%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;17H}[34;79H[K[34;79H48,1-8[8C80%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m ([32mint[m x:column1){[34;79H[K[34;79H49,1-8[8C84%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;79H[K[34;79H50,1-8[8C88%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;9H}[34;79H[K[34;79H51,1-8[8C92%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[33;1H}[34;79H[K[34;79H52,1-8[8C96%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [28;8H[1;33r[33;1H
[1;34r[34;79H[K[34;79H53,1-8[8CBot[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [29;8H[34;80H4[29;8H[?25h[?25l[34;69H~@k[29;8H[34;69H   [30;8H[34;80H5[30;8H[?25h[?25l[34;69H~@k[30;8H[34;69H   [31;8H[34;80H6[31;8H[?25h[?25l[34;69H~@k[31;8H[34;69H   [32;1H[34;80H7,1  [32;1H[?25h[?25l[34;69H~@k[32;1H[34;69H   [33;8H[34;80H8,1-8[33;8H[?25h[?25l[34;69H~@k[33;8H[34;69H   [33;8H[?25h[?25l[34;69H~@k[33;8H[34;69H   [33;8H[?25h[?25l[34;69H~@k[33;8H[34;69H   [33;8H[?25h[?25l[34;69H~@k[33;8H[34;69H   [33;8H[?25h[?25l[34;69H~@k[33;8H[34;69H   [32;1H[34;80H7,1  [32;1H[?25h[?25l[34;69H~@k[32;1H[34;69H   [31;8H[34;80H6,1-8[31;8H[?25h[?25l[34;69H~@k[31;8H[34;69H   [30;8H[34;80H5[30;8H[?25h[?25l[34;69H~@k[30;8H[34;69H   [29;8H[34;80H4[29;8H[?25h[?25l[34;69H~@k[29;8H[34;69H   [28;8H[34;80H3[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [27;8H[34;80H2[27;8H[?25h[?25l[34;69H~@k[27;8H[34;69H   [26;8H[34;80H1[26;8H[?25h[?25l[34;69H~@k[26;8H[34;69H   [25;8H[34;80H0[25;8H[?25h[?25l[34;69H~@k[25;8H[34;69H   [24;8H[34;79H49[24;8H[?25h[?25l[34;69H~@k[24;8H[34;69H   [23;8H[34;80H8[23;8H[?25h[?25l[34;69H~@k[23;8H[34;69H   [22;8H[34;80H7[22;8H[?25h[?25l[34;69H~@k[22;8H[34;69H   [21;8H[34;80H6[21;8H[?25h[?25l[34;69H~@k[21;8H[34;69H   [20;8H[34;80H5[20;8H[?25h[?25l[34;69H~@k[20;8H[34;69H   [19;8H[34;80H4[19;8H[?25h[?25l[34;69H~@k[19;8H[34;69H   [18;8H[34;80H3[18;8H[?25h[?25l[34;69H~@k[18;8H[34;69H   [17;8H[34;80H2[17;8H[?25h[?25l[34;69H~@k[17;8H[34;69H   [16;8H[34;80H1[16;8H[?25h[?25l[34;69H~@k[16;8H[34;69H   [15;8H[34;80H0[15;8H[?25h[?25l[34;69H~@k[15;8H[34;69H   [14;8H[34;79H39[14;8H[?25h[?25l[34;69H~@k[14;8H[34;69H   [13;8H[34;80H8[13;8H[?25h[?25l[34;69H~@k[13;8H[34;69H   [12;8H[34;80H7[12;8H[?25h[?25l[34;69H~@k[12;8H[34;69H   [11;8H[34;80H6[11;8H[?25h[?25l[34;69H~@k[11;8H[34;69H   [10;8H[34;80H5[10;8H[?25h[?25l[34;69H~@k[10;8H[34;69H   [9;8H[34;80H4[9;8H[?25h[?25l[34;69H~@k[9;8H[34;69H   [8;8H[34;80H3[8;8H[?25h[?25l[34;69H~@k[8;8H[34;69H   [7;1H[34;80H2,0-1[7;1H[?25h[?25l[34;69H~@k[7;1H[34;69H   [6;8H[34;80H1,1-8[6;8H[?25h[?25l[34;69H~@k[6;8H[34;69H   [6;8H[1;33r[1;1H[L[1;34r[34;79H[K[34;79H30,1-8[8C96%[6;8H[?25h[?25l[34;69H~@k[6;8H[34;69H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;79H[K[34;79H29,1-8[8C92%[6;8H[?25h[?25l[34;69H~@k[6;8H[34;69H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;79H[K[34;79H28,1-8[8C88%[6;8H[?25h[?25l[34;69H~@k[6;8H[34;69H   [6;8H[1;33r[1;1H[2L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[2;9H[32mint[m sum=[31m0[m;[34;79H[K[34;79H27,1-8[8C80%[6;8H[?25h[?25l[34;69H~@k[6;8H[34;69H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;79H[K[34;79H26,0-1[8C76%[6;1H[?25h[?25l[34;69H~@k[6;1H[34;69H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hstring x;[34;79H[K[34;79H25,1-8[8C73%[6;8H[?25h[?25l[34;69H~@k[6;8H[34;69H   [6;8H[1;33r[1;1H[L[1;34r[34;79H[K[34;79H24,1-8[8C69%[6;8H[?25h[?25l[34;69H~@k[6;8H[34;69H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;79H[K[34;79H23,1-8[8C65%[6;8H[?25h[?25l[34;69H~@k[6;8H[34;69H   [7;8H[34;80H4[7;8H[?25h[?25l[34;69H~@k[7;8H[34;69H   [8;8H[34;80H5[8;8H[?25h[?25l[34;69H~@k[8;8H[34;69H   [9;1H[34;80H6,0-1[9;1H[?25h[?25l[34;69H~@k[9;1H[34;69H   [10;8H[34;80H7,1-8[10;8H[?25h[?25l[34;69H~@k[10;8H[34;69H   [12;8H[34;80H8[12;8H[?25h[?25l[34;69H~@k[12;8H[34;69H   [13;8H[34;80H9[13;8H[?25h[?25l[34;69H~@k[13;8H[34;69H   [14;8H[34;79H30[14;8H[?25h[?25l[34;69H/[14;8H[34;69H[K[34;1H/[?2004h[?25h/[?25l[17;33H[7minfile[m[34;79H33,12-33      65%[34;79H[K[34;3H[?25h[?25l[34;2H[K[17;33Hinfile[34;79H30,1[10C65%[34;79H[K[34;2H[?25h [?25l[14;1H[34;79H30,1[10C65%[14;1H[?25h[?25l[34;69Hi[14;1H[34;69H [14;1H[34;1H[1m-- INSERT --[m[34;79H[K[34;79H30,1[10C65%[14;1H[?25h[?25l[34;79H29[13;1H[?25h[?25l/[34;82H2[13;2H[?25h[?25l[34m//                      if (!year.empty()){[m[34;82H3[13;3H[?25h[?25l[34;80H8,1[12;1H[?25h[?25l[34;80H9,3[13;3H[?25h[?25l/                       [38;5;130mif[m (!year.empty()){[34;82H2[13;2H[?25h[?25l [34;82H1[13;1H[?25h[?25l[34;79H30[14;1H[?25h[?25l/[34;82H2[14;2H[?25h[?25l[34m//                              column1.push_back(stoi(year));}[m[34;82H3[14;3H[?25h[?25l[34;80H1,1[15;1H[?25h[?25l[34;80H2[16;1H[?25h[?25l[34;80H3[17;1H[?25h[?25l[34;80H4[18;1H[?25h[?25l/[34;82H2[18;2H[?25h[?25l[34m//                      if(!length.empty()){[m[34;82H3[18;3H[?25h[?25l/                       [38;5;130mif[m(!length.empty()){[34;82H2[18;2H[?25h[?25l [34;82H1[18;1H[?25h[?25l[17;33r[33;1H
[1;34r[17;25Hgetline(infile, length,[31m';'[m);[20C[38;5;130mif[m(!length.empty()){[33;25Hgetline(infile, awards,[31m';'[m);[34;79H[K[34;79H33,32-53      68%[17;53H[?25h[?25l[18;33r[18;1H[L[1;34r[17;73H[K[18;25H[38;5;130mif[m(!length.empty()){[34;79H[K[34;79H34,1[10C65%[18;1H[?25h[?25l[34;80H5[19;1H[?25h[?25l/[34;82H2[19;2H[?25h[?25l[34m//                      column2.push_back(stoi(length));}[m[34;82H3[19;3H[?25h[34;1H[K[19;2H[?25l[34;69H^[[19;2H[34;69H  [19;3H[34;79H35,2[10C65%[19;2H[?25h[?25l[34;69H:[19;2H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 58L, 1414C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:31:4:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ before â€˜[01m[Kelse[m[Kâ€™
   31 |    [01;31m[Kelse[m[K{column1.push_back(0); }
      |    [01;31m[K^~~~[m[K
[01m[KTasks.cpp:29:22:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K{[m[Kâ€™
   29 |    if (!year.empty())[01;36m[K{[m[K
      |                      [01;36m[K^[m[K
[01m[KTasks.cpp:36:4:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ before â€˜[01m[Kelse[m[Kâ€™
   36 |    [01;31m[Kelse[m[K{column2.push_back(0);}
      |    [01;31m[K^~~~[m[K
[01m[KTasks.cpp:34:23:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K{[m[Kâ€™
   34 |    if(!length.empty())[01;36m[K{[m[K
      |                       [01;36m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:33:59 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 58L, 1414C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[32mint[m main(){[3;9Hifstream infile;[4;9Hinfile.open([31m"films.txt"[m);[5;9H[38;5;130mif[m(infile.fail()){[6;17Hcout << [31m"Error with file"[m;[7;17Hexit([31m1[m);[8;9H}[9;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[12;9Hstring x;
        vector <[32mint[m> column1, column2,column8;
        vector<string> column3,column4,column5,column6,column7,column10;[15;9H[32mint[m sum=[31m0[m;[15;19H[K[16;9H[32mdouble[m average;[16;24H[K[17;9H[38;5;130mwhile[m(infile.good()){[18;10H[K[19;9H                string year,length,title,subject,actor,actress,director,popularity,awardd[20;1Hs,image;[20;9H[K[21;14H           getline(infile, year,[31m';'[m);[22;7H                  [38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year));}[m
                        [38;5;130melse[m{column1.push_back([31m0[m); }[24;53H[K[25;5H[K[26;5H                    getline(infile, length,[31m';'[m);[26;53H[K[27;1H                        [38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));}[m[28;58H[K[29;5H                    [38;5;130melse[m{column2.push_back([31m0[m);}
                        [30;25H[K[31;5H                    getline(infile, title,[31m';'[m);[32;25Hcolumn3.push_back(title);
                        getline(infile, subject,[31m';'[m);[34;79H35,2[10C30%[28;2H[?25h[?25l[34;69H~@k[28;2H[34;69H   [27;8H[34;80H4,1-8[27;8H[?25h[?25l[34;69H~@k[27;8H[34;69H   [26;8H[34;80H3[26;8H[?25h[?25l[34;69H~@k[26;8H[34;69H   [25;1H[34;80H2,0-1[25;1H[?25h[?25l[34;69H~@k[25;1H[34;69H   [24;8H[34;80H1,1-8[24;8H[?25h[?25l[34;69H~@k[24;8H[34;69H   [23;2H[34;80H0,2  [23;2H[?25h[?25l[34;69H~@k[23;2H[34;69H   [22;8H[34;79H29,1-8[22;8H[?25h[?25l[34;69H~@k[22;8H[34;69H   [22;8H[?25h[?25l[34;69H~@k[22;8H[34;69H   [22;8H[?25h[?25l[34;69H~@k[22;8H[34;69H   [23;2H[34;79H30,2  [23;2H[?25h[?25l[34;69H~@k[23;2H[34;69H   [23;8H[34;82H3-8[23;8H[?25h[?25l[34;69H~@k[23;8H[34;69H   [23;16H[34;82H4-16[23;16H[?25h[?25l[34;69H~@k[23;16H[34;69H   [23;24H[34;82H5-24[23;24H[?25h[?25l[34;69H~@k[23;24H[34;69H   [23;32H[34;82H6-32[23;32H[?25h[?25l[34;69Hi[23;32H[34;69H [23;25H[34;1H[1m-- INSERT --[m[34;13H[K[34;79H30,6-25[7C30%[23;25H[?25h[?25l[34;82H7-33[23;33H[?25h[?25l[34;82H8-34[23;34H[?25h[?25l[34;82H9-35[23;35H[?25h[?25l[34;82H10-36[23;36H[?25h[?25l[34;83H1-37[23;37H[?25h[?25l[34;83H2-38[23;38H[?25h[?25l[34;83H3-39[23;39H[?25h[?25l[34;83H4-40[23;40H[?25h[?25l[34;83H5-41[23;41H[?25h[?25l[34;83H6-42[23;42H[?25h[?25l[34;83H7-43[23;43H[?25h[?25l[34;83H8-44[23;44H[?25h[?25l[34;83H9-45[23;45H[?25h[?25l[34;82H20-46[23;46H[?25h[?25l[34;83H1-47[23;47H[?25h[?25l[34;83H2-48[23;48H[?25h[?25l[34;83H3-49[23;49H[?25h[?25l[1C[34m[106m([10C)[m[34;83H4-50[23;50H[?25h[?25l[34;83H5-51[23;51H[?25h[?25l[34m([10C)[m[34;83H6-52[23;52H[?25h[?25l[34;83H7-53[23;53H[?25h[?25l[34;83H8-54[23;54H[?25h[?25l[1C[34m[106m([4C)[m[34;83H9-55[23;55H[?25h[?25l[34;82H30-56[23;56H[?25h[?25l[34m(year)[m[34;83H1-57[23;57H[?25h[?25l[34;83H2-58[23;58H[?25h[?25l[34;83H3-59[23;59H[?25h[?25l[34m[106m([4C)[m[34;83H4-60[23;60H[?25h[?25l[23;50H[34m[106m([m[4C[34m(year)[m[34m[106m)[m[34;83H5-61[23;61H[?25h[?25l[34;83H6-62[23;62H[?25h[?25l[22;43H[106m{[m[23;50H[34m([10C)[m[1C[34m[106m}[m[34;83H7-63[23;63H[?25h[?25l[22;43H{[23;50H[34m[106m([10C)[m[1C[34m}[m[34;83H6-62[23;62H[?25h[?25l[24;33r[24;1H[L[1;34r[23;62H[K[24;1H[34m//                              ;}[m[34;79H[K[34;79H31,7-33[7C29%[23;50H[34m([10C)[24;33H[?25h[?25l[m[22;43H[106m{[m[24;34H[34m[106m}[m[34;82H8-34[24;34H[?25h[?25l[34m}[m[24;34H[K[24;33H[34m[106m}[m[34;82H7-33[24;33H[?25h[?25l[22;43H{[24;33H[34m}[m[34;80H2,12-33[25;33H[?25h[?25l[34;80H3,1    [26;1H[?25h[?25l[27;32H[106m([18C)[m[34;80H4,12-33[27;33H[?25h[?25l([18C)[34;80H5[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;79H[K[34;79H36,14-33      33%[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;79H[K[34;79H37,12-33      37%[28;33H[?25h[?25l[34;83H1-32[28;32H[?25h[?25l[34;83H0-31[28;31H[?25h[?25l[106m{[21C}[m[34;82H9-30 [28;30H[?25h[?25l[34;82H8-29[28;29H[?25h[?25l{[21C}[34;82H7-28[28;28H[?25h[?25l[34;82H6-27[28;27H[?25h[?25l[34;82H5-26[28;26H[?25h[?25l[34;82H4-25[28;25H[?25h[?25l[34;82H3-17[28;17H[?25h[?25l[34;82H2-9 [28;9H[?25h[?25l[34;82H1  [28;1H[?25h[?25l[34;80H6[27;1H[?25h[?25l[34;82H2[27;2H[?25h[?25l[34;82H3[27;3H[?25h[?25l[34;82H4-9[27;9H[?25h[?25l[34;82H5-17[27;17H[?25h[?25l[34;82H6-25[27;25H[?25h[?25l[34;82H7-26[27;26H[?25h[?25l[34;82H8-27[27;27H[?25h[?25l[34;82H9-28[27;28H[?25h[?25l[34;82H10-29[27;29H[?25h[?25l[34;83H1-30[27;30H[?25h[?25l[34;83H2-31[27;31H[?25h[?25l[34;83H3-32[27;32H[?25h[?25l[34;83H4-33[27;33H[?25h[?25l[34;83H5-34[27;34H[?25h[?25l[34;83H6-35[27;35H[?25h[?25l[34;83H7-36[27;36H[?25h[?25l[34;83H8-37[27;37H[?25h[?25l[34;83H9-38[27;38H[?25h[?25l[34;82H20-39[27;39H[?25h[?25l[34;83H1-40[27;40H[?25h[?25l[34;83H2-41[27;41H[?25h[?25l[1C[34m[106m([12C)[m[34;83H3-42[27;42H[?25h[?25l[34;83H4-43[27;43H[?25h[?25l[34m([12C)[m[34;83H5-44[27;44H[?25h[?25l[34;83H6-45[27;45H[?25h[?25l[34;83H7-46[27;46H[?25h[?25l[1C[34m[106m([6C)[m[34;83H8-47[27;47H[?25h[?25l[34;83H9-48[27;48H[?25h[?25l[34m(length)[m[34;82H30-49[27;49H[?25h[?25l[34;83H1-50[27;50H[?25h[?25l[34;83H2-51[27;51H[?25h[?25l[34;83H3-52[27;52H[?25h[?25l[34;83H4-53[27;53H[?25h[?25l[34m[106m([6C)[m[34;83H5-54[27;54H[?25h[?25l[27;42H[34m[106m([m[4C[34m(length)[m[34m[106m)[m[34;83H6-55[27;55H[?25h[?25l[34;83H7-56[27;56H[?25h[?25l[26;44H[106m{[m[27;42H[34m([12C)[m[1C[34m[106m}[m[34;83H8-57[27;57H[?25h[?25l[28;33r[28;1H[L[1;34r[27;57H[K[28;1H[34m//                      }[m[34;79H[K[34;79H37,6-25[7C35%[28;25H[34m[106m}[?25h[?25l[m[34;82H7-26[28;26H[?25h[?25l[34;82H6-25[28;25H[?25h[?25l[26;44H{[28;25H[34m}[m[34;82H5-17[28;17H[?25h[?25l[34m}[m[28;18H[K[34;82H4-9 [28;9H[?25h[?25l[34;82H3  [28;3H[?25h[?25l/               }[34;82H2[28;2H[?25h[?25l [34;82H1[28;1H[?25h[34;1H[K[28;1H[?25l[34;69H^[[28;1H[34;69H  [28;1H[34;79H37,1-8[8C35%[28;8H[?25h[?25l[34;69H:[28;8H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 60L, 1423C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:32:4:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ before â€˜[01m[Kelse[m[Kâ€™
   32 |    [01;31m[Kelse[m[K{column1.push_back(0); }
      |    [01;31m[K^~~~[m[K
[01m[KTasks.cpp:29:22:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K{[m[Kâ€™
   29 |    if (!year.empty())[01;36m[K{[m[K
      |                      [01;36m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:34:35 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 60L, 1423C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;
        [32mint[m sum=[31m0[m;
        [32mdouble[m average;[14;24H[K[15;9H[38;5;130mwhile[m(infile.good()){[15;30H[K[16;10H[K[17;11H              string year,length,title,subject,actor,actress,director,popularity,awardd[18;1Hs,image;[18;10H[K[19;9H                getline(infile, year,[31m';'[m);
                        [38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))
//                              }[m[23;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;1H[K[25;5H                    getline(infile, length,[31m';'[m);[25;53H[K[26;5H                    [38;5;130mif[m(!length.empty()){[26;45H[K[27;1H[34m//                      column2.push_back(stoi(length));[m
                }[28;18H[K[29;5H                    [38;5;130melse[m{column2.push_back([31m0[m);}
                        [30;25H[K[31;5H                    getline(infile, title,[31m';'[m);[32;25Hcolumn3.push_back(title);
                        getline(infile, subject,[31m';'[m);[34;79H37,1-8[8C35%[28;8H[?25h[?25l[34;69H~@k[28;8H[34;69H   [27;8H[34;80H6,3[27;8H[?25h[?25l[34;69H~@k[27;8H[34;69H   [26;8H[34;80H5,1[26;8H[?25h[?25l[34;69H~@k[26;8H[34;69H   [25;8H[34;80H4[25;8H[?25h[?25l[34;69H~@k[25;8H[34;69H   [24;1H[34;80H3,0-1[24;1H[?25h[?25l[34;69H~@k[24;1H[34;69H   [23;8H[34;80H2,1-8[23;8H[?25h[?25l[34;69H~@k[23;8H[34;69H   [22;8H[34;80H1,3[22;8H[?25h[?25l[34;69H~@k[22;8H[34;69H   [22;2H[34;82H2  [22;2H[?25h[?25l[34;69H~@k[22;2H[34;69H   [22;1H[34;82H1[22;1H[?25h[?25l[34;69H~@k[22;1H[34;69H   [21;61H[21;50H[34m[106m([10C)[m[34;80H0,35-61[21;61H[?25h[?25l[34;69H~@k[21;61H[34;69H   [21;61H[?25h[?25l[34;69Hi[21;61H[34;69H [21;61H[34;1H[1m-- INSERT --[m[34;13H[K[34;79H30,35-61      35%[21;61H[?25h[?25l[20;43H[106m{[m[21;50H[34m([10C)[m[22;33H[34m[106m}[m[34;80H1,8-34 [22;34H[?25h[?25l[34;82H7-33[22;33H[?25h[?25l[20;43H{[22;33H[34m}[m[34;82H6-25[22;25H[?25h[?25l[34m}[m[22;26H[K[34;82H5-17[22;17H[?25h[?25l[34m}[m[22;18H[K[34;82H4-9 [22;9H[?25h[?25l[34m}[m[22;10H[K[34;82H3  [22;3H[?25h[?25l/       }[34;82H2[22;2H[?25h[?25l [34;82H1[22;1H[?25h[34;1H[K[22;1H[?25l[34;69H^[[22;1H[34;69H  [22;1H[34;79H31,1-8[8C35%[22;8H[?25h[?25l[34;69HL[22;8H[34;69H [28;17H[26;44H[106m{[28;17H}[m[34;80H7,3-17[28;17H[?25h[?25l[34;69H~@k[28;17H[34;69H   [28;16H[26;44H{[28;17H}[34;82H2-16[28;16H[?25h[?25l[34;69H~@k[28;16H[34;69H   [28;17H[26;44H[106m{[28;17H}[m[34;82H3-17[28;17H[?25h[?25l[34;69H^[[28;17H[34;69H  [28;17H[34;69H^[[28;17H[34;69H  [28;17H[?25h[?25l[34;69H:[28;17H[34;69H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 60L, 1418C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ wq[K[Kg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:34:56 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 60L, 1418C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;
        [32mint[m sum=[31m0[m;
        [32mdouble[m average;[14;24H[K[15;9H[38;5;130mwhile[m(infile.good()){[15;30H[K[16;10H[K[17;11H              string year,length,title,subject,actor,actress,director,popularity,awardd[18;1Hs,image;[18;10H[K[19;9H                getline(infile, year,[31m';'[m);
                        [38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[22;7H  }[22;10H[K[23;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;1H[K[25;5H                    getline(infile, length,[31m';'[m);[25;53H[K[26;5H                    [38;5;130mif[m(!length.empty())[106m{[m[26;45H[K[27;1H[34m//                      column2.push_back(stoi(length));[m
                [106m}[m[28;18H[K[29;5H                    [38;5;130melse[m{column2.push_back([31m0[m);}
                        [30;25H[K[31;5H                    getline(infile, title,[31m';'[m);[32;25Hcolumn3.push_back(title);
                        getline(infile, subject,[31m';'[m);[34;79H37,3-17[7C35%[28;17H[?25h[?25l[34;69H~@k[28;17H[34;69H   [27;24H[26;44H{[28;17H}[34;80H6,5-24[27;24H[?25h[?25l[34;69H~@k[27;24H[34;69H   [26;24H[34;80H5,3[26;24H[?25h[?25l[34;69H~@k[26;24H[34;69H   [25;24H[34;80H4[25;24H[?25h[?25l[34;69H~@k[25;24H[34;69H   [24;1H[34;80H3,0-1 [24;1H[?25h[?25l[34;69H~@k[24;1H[34;69H   [23;24H[34;80H2,3-24[23;24H[?25h[?25l[34;69H~@k[23;24H[34;69H   [22;9H[20;43H[106m{[22;9H}[m[34;80H1,2-9 [22;9H[?25h[?25l[34;69H~@k[22;9H[34;69H   [21;24H[20;43H{[22;9H}[34;80H0,5-24[21;24H[?25h[?25l[34;69H~@k[21;24H[34;69H   [20;24H[34;79H29,3[20;24H[?25h[?25l[34;69H~@k[20;24H[34;69H   [19;24H[34;80H8[19;24H[?25h[?25l[34;69H~@k[19;24H[34;69H   [17;24H[34;80H7[17;24H[?25h[?25l[34;69H~@k[17;24H[34;69H   [16;1H[34;80H6,0-1 [16;1H[?25h[?25l[34;69H~@k[16;1H[34;69H   [16;1H[?25h[?25l[34;69H~@k[16;1H[34;69H   [16;1H[?25h[?25l[34;69H~@k[16;1H[34;69H   [16;1H[?25h[?25l[34;69H~@k[16;1H[34;69H   [15;17H[34;80H5,10-17[15;17H[?25h[?25l[34;69H~@k[15;17H[34;69H   [14;17H[34;80H4[14;17H[?25h[?25l[34;69H~@k[14;17H[34;69H   [15;17H[34;80H5[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awardss[18;1H,image;[19;25Hgetline(infile, year,[31m';'[m);[20;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[22;9H}[23;25H[38;5;130melse[m{column1.push_back([31m0[m); }[25;25Hgetline(infile, length,[31m';'[m);[26;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[28;17H}[29;25H[38;5;130melse[m{column2.push_back([31m0[m);}[31;25Hgetline(infile, title,[31m';'[m);[32;25Hcolumn3.push_back(title);[33;25Hgetline(infile, subject,[31m';'[m);[34;80H25,10-17      35%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,ii[18;1Hmage;[19;25Hgetline(infile, year,[31m';'[m);[20;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[22;9H}[23;25H[38;5;130melse[m{column1.push_back([31m0[m); }[25;25Hgetline(infile, length,[31m';'[m);[26;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[28;17H}[29;25H[38;5;130melse[m{column2.push_back([31m0[m);}[31;25Hgetline(infile, title,[31m';'[m);[32;25Hcolumn3.push_back(title);[33;25Hgetline(infile, subject,[31m';'[m);[34;82H25,10-17      35%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,imaa[18;1Hge;[19;25Hgetline(infile, year,[31m';'[m);[20;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[22;9H}[23;25H[38;5;130melse[m{column1.push_back([31m0[m); }[25;25Hgetline(infile, length,[31m';'[m);[26;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[28;17H}[29;25H[38;5;130melse[m{column2.push_back([31m0[m);}[31;25Hgetline(infile, title,[31m';'[m);[32;25Hcolumn3.push_back(title);[33;25Hgetline(infile, subject,[31m';'[m);[34;84H25,10-17      35%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,imagg[18;1He;[19;25Hgetline(infile, year,[31m';'[m);[20;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[22;9H}[23;25H[38;5;130melse[m{column1.push_back([31m0[m); }[25;25Hgetline(infile, length,[31m';'[m);[26;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[28;17H}[29;25H[38;5;130melse[m{column2.push_back([31m0[m);}[31;25Hgetline(infile, title,[31m';'[m);[32;25Hcolumn3.push_back(title);[33;25Hgetline(infile, subject,[31m';'[m);[34;85H25,10-17      35%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;87H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;88H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;90H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;93H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;95H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;97H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;99H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;101H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;104H25,10-17      37%[15;17H[?25h[27m[23m[29m[m[H[2J[?25l[1;9Hifstream infile;[2;9Hinfile.open([31m"films.txt"[m);[3;9H[38;5;130mif[m(infile.fail()){[4;17Hcout << [31m"Error with file"[m;[5;17Hexit([31m1[m);[6;9H}[7;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[8;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hstring x;[11;9Hvector <[32mint[m> column1, column2,column8;[12;9Hvector<string> column3,column4,column5,column6,column7,column10;[13;9H[32mint[m sum=[31m0[m;[14;9H[32mdouble[m average;[15;9H[38;5;130mwhile[m(infile.good()){[17;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[18;25Hgetline(infile, year,[31m';'[m);[19;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[21;9H}[22;25H[38;5;130melse[m{column1.push_back([31m0[m); }[24;25Hgetline(infile, length,[31m';'[m);[25;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[27;17H}[28;25H[38;5;130melse[m{column2.push_back([31m0[m);}[30;25Hgetline(infile, title,[31m';'[m);[31;25Hcolumn3.push_back(title);[32;25Hgetline(infile, subject,[31m';'[m);[33;25Hcolumn4.push_back(subject);[34;105H25,10-17      37%[15;17H[?25h[?25l[34;95Hi[15;17H[34;95H [15;17H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H25,10-17      37%[15;17H[?25h[?25l[34;106H6,1    [16;1H[?25h[?25l[34;106H7,3-17[17;17H[?25h[?25l[34;106H8[18;17H[?25h[?25l[34;108H4-25[18;25H[?25h[?25l[34;106H9[19;25H[?25h[?25l[20;33r[20;1H[L[1;34r[19;25H[K[20;25H[38;5;130mif[m (!year.empty()){[34;105H[K[34;105H30,4-25[7C35%[20;25H[?25h[?25l[34;105H29[19;25H[?25h[?25lc[34;108H5-26[19;26H[?25h[?25lo[34;108H6-27[19;27H[?25h[?25lu[34;108H7-28[19;28H[?25h[?25lt[34;108H8-29[19;29H[?25h[?25l[34;108H9-30[19;30H[?25h[?25l<[34;108H10-31[19;31H[?25h[?25l<[34;109H1-32[19;32H[?25h[?25l[34;109H2-33[19;33H[?25h[?25ly[34;109H3-34[19;34H[?25h[?25le[34;109H4-35[19;35H[?25h[?25la[34;109H5-36[19;36H[?25h[?25lr[34;109H6-37[19;37H[?25h[?25l;[34;109H7-38[19;38H[?25h[?25l[34;109H6-37[19;37H[?25h[?25l<;[34;109H7-38[19;38H[?25h[?25l<;[34;109H8-39[19;39H[?25h[?25le;[34;109H9-40[19;40H[?25h[?25ln;[34;108H20-41[19;41H[?25h[?25ld;[34;109H1-42[19;42H[?25h[?25ll;[34;109H2-43[19;43H[?25h[34;1H[K[19;42H[?25l[34;95H^[[19;42H[34;95H  [19;43H[34;105H29,21-42      35%[19;42H[?25h[?25l[34;95H:[19;42H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 61L, 1441C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
1990
113
Dead Zone, The
Action
Gere, Richard
Adams, Maud
Loma, José Antonio de la
28
No
NicholasCage.png
1982
117
A Man & a Woman
Drama
Trintignant, Jean-Louis
Aleandro, Norma
Kulik, Buzz
2
No
NicholasCage.png
1988
116
Running Man, The
Action
Penn, Sean
Anderson, Erika
Sinise, Gary
88
No
paulNewman.png
1960
91
Seventh Seal, The
Drama
Björnstrand, Gunnar
Andersson, Harriet
Bergman, Ingmar
18
No
NicholasCage.png
1962
103
Ten
Comedy
Sydow, Max von
Andrews, Julie
Konchalovsky, Andrei
59
No
NicholasCage.png
1988
106
Tommy
Mystery
Haas, Lukas
Archer, Anne
Noyce, Phillip
82
No
NicholasCage.png
1924
90
Big Blue, The
Drama
Roberts, Eric
Arquette, Rosanna
Seidelman, Susan
83
No
NicholasCage.png
1987
118
Thunderball
Mystery
Ustinov, Peter
Bacall, Lauren
Wellman, William
27
No
NicholasCage.png
1989
96
Eighty-Four Charing Cross Road
Drama
Jacoby, Billy
Barbeau, Adrienne
Frears, Stephen
62
No
brigitteBardot.png
1958
90
A Coeur Joie, (Head Over Heels)
Westerns
Palance, Jack
Bardot, Brigitte
Malle, Louis
34
No
brigitteBardot.png
1962
90
Ms. Don Juan
Drama
Kendall, Henry
Barrymore, Deborah
Spielberg, Steven
44
No
JackNicholson.png
1987
101
Final Analysis
Action
Rourke, Mickey
Basinger, Kim
Pearce, Richard
84
Yes
Bergman.png
1984
101
Split Decisions
Comedy
Hauser, Wings
Bedelia, Bonnie
DeMille, Cecil B.
55
No
NicholasCage.png
1990
99
Scarlet Street
Action
Burns, George
Bergen, Candice
Milius, John
10
No
NicholasCage.png
1935
97
Gaslight
Drama
Sjöström, Victor
Bergman, Ingrid
Gibson, Alan
2
No
ingridBergman.png
1940
120
Anastasia
Drama
Ekman, Gösta
Bergman, Ingrid
Molander, Gustaf
26
No
ingridBergman.png
1952
83
Fear
Drama
Matthau, Walter
Bergman, Ingrid

71
No
glennFord.png
1970
108
Best of the Big Laff Off, The
Drama
Reynolds, Burt
Binoche, Juliette
Huston, John
0
Yes
Bergman.png
1976
94
Five Easy Pieces
Drama
Connery, Sean
Blair, Linda
Bernds, Edward
12
Yes
clintEastwood.png
1982
102
Under the Sun of Satan
Drama
Cosby, Bill
Booth, Connie

67
No
NicholasCage.png
1992

Kiss of the Spider Woman
Action
Newman, Paul
Brewster, Diane
Rumar, Craig
76
No
NicholasCage.png
1965
104
Frantic
Science Fiction
Irons, Jeremy
Burd, Stephanie
Friedkin, William
82
No
johnFord.png
1954
114
End of Innocence, The
Mystery
Olsen, Merlin
Capone, Nadia
Day, Robert
75
No
NicholasCage.png
1963
64
Year My Voice Broke, The
War
Hopkins, Anthony
Carrera, Barbara
Mackenzie, John
50
No
NicholasCage.png
1987
107
Fast Times at Ridgemont High
Comedy
Moore, Frank
Champion, Marge
Lambert, Bruce
22
No
NicholasCage.png
1989
103
Witches of Eastwick, The
Action
Davis, Guy
Chong, Rae Dawn
Rifkin, Adam
69
No
NicholasCage.png
1963
68
Big Trail, The
Western
Eastwood, Clint
Clarke, Caitlin
Konchalovsky, Andrei
0
No
NicholasCage.png
1991
105
Like Father Like Son
Drama
Hope, Bob
Collins, Pauline
Joffe, Roland
15
No
NicholasCage.png
1961
110
Sundays & Cybele
Science Fiction
McDowall, Roddy
Crosby, Denise
Walton, Kip
82
No
NicholasCage.png
1954
82
Betty Blue
Music
Chase, Chevy
Danilchenko, Svetlana
Allen, Woody
74
No
NicholasCage.png
1969
18
Three Godfathers
Mystery
Ford, Glenn
Davis, Bette
Mankiewicz, Joseph L.
33
No
NicholasCage.png
1989
120
Beauty & the Beast
Mystery
Richardson, Ralph
Deakins, Lucy
Wrede, Caspar
36
No
NicholasCage.png
1967
86
Fair Game
Action
Cruise, Tom
Deneuve, Catherine
Chouraqui, Elie
15
No
NicholasCage.png
1980
120
Fat Man & Little Boy
Drama
Connery, Sean
DeSoto, Rosana
Crichton, Michael
10
No
johnWayne.png
1961
60
Novice, The
Drama
Hurt, William
Donohoe, Amanda

78
No
NicholasCage.png
1991
97
Wagon Master
Western
Hopkins, Harold
DuBarry, Denise
Kollek, Amos
48
Yes
NicholasCage.png
1977
97
Wait Until Spring, Bandini
Comedy
Tracy, Spencer
Duperey, Anny
Gilliam, Terry
32
No
NicholasCage.png
1979
123
Beverly Hills Cop
Mystery
Mastroianni, Marcello
Ekland, Britt
Hamilton, Guy
45
No
NicholasCage.png
1992
94
Campus Man
Drama
Aiello, Danny
Farrow, Mia
Allen, Woody
8
No
NicholasCage.png
1981
70
Holocaust
Science Fiction
Whitaker, Forest
Ferratti, Rebecca
Belson, Jerry
83
No
NicholasCage.png
1981
110
Steel Magnolias
Comedy
Hamill, Mark
Fisher, Carrie
Marquand, Richard
72
No
burtLancaster.png
1931
89
Roma
Drama
Bridges, Jeff
Fonda, Jane
Pollack, Sydney
62
Yes
alfredHitchcock.png
1944
87
Naked Obsession
Mystery
Sharkey, Ray
Foreman, Deborah
Demme, Jonathan
76
No
NicholasCage.png
1955
103
Back to the Beach
Drama
Apfel, Oscar
Garbo, Greta
Brown, Clarence
83
Yes
gretaGarbo.png
1931
100
Grand Hotel
Drama
Douglas, Melvyn
Garbo, Greta
Niblo, Fred
73
No
gretaGarbo.png
1930
105
Tootsie
Comedy
Brando, Marlon
Gary, Lorraine
Spielberg, Steven
44
No
johnWayne.png
1979
122
Horse Soldiers, The
Action
Newman, Paul
Gless, Sharon
Mulligan, Robert
44
No
NicholasCage.png
1988
95
Outer Limits, The
Horror
Palance, Jack
Greist, Kim
Hitchcock, Alfred
19
No
NicholasCage.png
1992
76
Tokyo Pop
Action
Schwarzenegger, Arnold
Hamilton, Linda

81
No
NicholasCage.png
1985
82
Reckless
Comedy
Martin, Steve
Hannah, Daryl
Stone, Oliver
58
No
NicholasCage.png
1936
99
Blue Iguana, The
Drama
Gilman, Kenneth
Harry, Deborah
Holzman, Allan
8
No
NicholasCage.png
1970
100
Foul Play
Comedy
Albert, Edward
Hawn, Goldie
Miller, Robert Ellis
14
No
NicholasCage.png
1980
109
Private Benjamin
Mystery
Colman, Ronald
Hayward, Susan
Hathaway, Henry
49
No
NicholasCage.png
1946
98
Dick Tracy
Drama
Prysirr, Geof
Henner, Marilu
Holcomb, Rod
87
Yes
burtLancaster.png
1976
109
Rainmaker, The
Comedy
O'Toole, Peter
Hepburn, Katharine
Kramer, Stanley
51
No
katharineHepburn.png
1991
116
Dragon Seed
Drama
Tracy, Spencer
Hepburn, Katharine

31
No
NicholasCage.png
1988
99
Souvenir
Drama
Leadbitter, Bill
Hoak, Clare
Taylor, Ray
19
No
NicholasCage.png
1973
94
Hawk of Powder River
Drama
Webb, Greg
Hubley, Season
Ford, John
42
No
NicholasCage.png
1989
110
World According to Garp, The
Science Fiction
Tracy, Spencer
Huston, Anjelica
Mazursky, Paul
8
No
NicholasCage.png
1990
129
Crossing Delancey
Drama
Thaw, John
Jackson, Glenda
Russell, Ken
76
No
Bergman.png
1989
132
Easy Virtue
Comedy
Davidson, Tommy
Johnson, Michelle
Cox, Alex
44
No
brando.png
1991
102
Port of Call
Comedy
Chapman, Graham
Kahn, Madeline
Amurri, Franco
42
No
NicholasCage.png
1983
145
Awakenings
Comedy
Allen, Woody
Keaton, Diane
Beresford, Bruce
54
Yes
NicholasCage.png
1976
86
Love & Death
Comedy
Potter, Martin
Keller, Marthe
Frankenheimer, John
36
No
johnFord.png
1955
113
Woman Who Came Back
Action
Jones, Henry
Kensit, Patsy
Herman, Mark

No
NicholasCage.png
1970
96
Days of Thunder
Comedy
Depardieu, Gérard
Kinski, Nastassia
Zieff, Howard
8
No
NicholasCage.png
1986
102
A Year of the Quiet Sun
Western
Hogan, Paul
Kozlowski, Linda
Wenders, Wim
53
No
NicholasCage.png
1987
110
Go Tell the Spartans
Comedy
Mori, Masayuki
Ladd, Diane
Coolidge, Martha
62
No
NicholasCage.png
1985
84
Big Town, The
Drama
Howell, C. Thomas
Lane, Diane
Hill, Walter
66
No
NicholasCage.png
1992
58
Get Out Your Handkerchiefs
Music
Seagal, Steven
Leigh, Janet
Sternberg, Josef von
36
Yes
NicholasCage.png
1971
128
In Country
Action
Dreyfuss, Richard
Locke, Sondra
Eastwood, Clint
1
No
NicholasCage.png
1959
68
Mr. & Mrs. Smith
Drama
Cruise, Tom
Longstreth, Emily
Dell, Stewart
31
No
sophiaLoren.png
1954
118
Legend of the Lost
Action
Boyd, Stphen
Loren, Sophia
Mann, Delbert
54
No
sophiaLoren.png
1977
112
Sophia Loren, Her Own Story
Drama
O'Toole, Peter
Loren, Sophia

75
No
NicholasCage.png
1991
64
Mission, The
Comedy
Mason, James
MacDowell, Andie
Weir, Peter
73
Yes
JackNicholson.png
1967

Postcards from the Edge
Western
Z'Dar, Robert
MacMahon, Aline
De Winter, Harry
54
No
NicholasCage.png
1990
50
Madonna, Justify My Love
Music
Goldthwait, Bob
Madsen, Virginia
Hopper, Dennis
50
No
NicholasCage.png
1949
104
Deep Cover
Drama
Eastwood, Clint
Mason, Marsha
Ross, Herbert
62
No
NicholasCage.png
1992
119
Children of a Lesser God
Comedy
Banderas, Antonio
Maura, Carmen
Keach, James
0
No
NicholasCage.png
1992
81
Dances with Wolves
Drama
Hackman, Gene
McGee, Vonetta
Barbash, Uri
6
Yes
NicholasCage.png
1983
102
Top Gun
Drama
Daniels, Jeff
McGovern, Elizabeth
Brickman, Marshall
18
No
NicholasCage.png
1981
89
Tom Jones
Comedy
Mason, Jackie
Metcalf, Laurie
Stone, Oliver
80
No
NicholasCage.png
1970
127
Man Who Shot Liberty Valance, The
Action
Reubens, Paul
Mimieux, Yvette
Fosse, Bob
79
No
NicholasCage.png
1989
100
Four American Composers
Action
Garr, Eddie
Monroe, Marilyn

25
No
NicholasCage.png
1989
102
Ghost
Drama
Moore, Dudley
Moore, Terry
Mann, Daniel
66
No
NicholasCage.png
1988
90
Front, The
Drama
Biehn, Michael
Muldaur, Diana
Vorhaus, Bernard
29
No
alfredHitchcock.png
1987
112
Operation Pacific
Horror
Brando, Marlon
Negoda, Natalya
Dearden, Basil
58
No
NicholasCage.png
1980
110
Star Trek V: The Final Frontier
Action
Stallone, Sylvester
Nielsen, Brigitte

65
No
alfredHitchcock.png
1987
93
Bury Me Not on the Lone Prairie
Western
Brown, Johnny Mack
O'Hara, Maureen
Ford, John
29
No
johnWayne.png
1992
72
Big Jim McLain
Western
Brando, Marlon
Ondra, Anny
Forbes, Bryan
32
No
NicholasCage.png
1985
116
Z
Drama
Williamson, Nicol
Parillaud, Anne
Bergman, Andrew
10
No
NicholasCage.png
1984
95
From the Hip
Comedy
Reid, Christopher
Perrine, Valerie
Brooks, Mel
12
No
NicholasCage.png
1986
115
Married to the Mob
Adventure
Bridges, Jeff
Pfeiffer, Michelle
Schepisi, Fred
50
No
NicholasCage.png
1973
360
My Best Girl
Horror
Irons, Jeremy
Pleshette, Suzanne
Greenaway, Peter
59
No
NicholasCage.png
1990
123
Hideaways, The
Comedy
Sellers, Peter
Prentiss, Paula
Zucker, David
50
No
NicholasCage.png
1989
87
Pleasure Palace
Drama
Read, James
Questel, Mae
Patterson, Willi
35
No
johnWayne.png
1974
84
Police Academy 5: Assignment Miami Beach
Comedy
Hopkins, Linda
Redgrave, Jane
Russell, Ken
73
No
NicholasCage.png
1985
104
Money, The
Drama
Walken, Christopher
Rigg, Diana
Deutch, Howard
49
No
NicholasCage.png
1987
119
Flatliners
Action
Brown, Johnny Mack
Rogers, Ginger
Cimino, Michael
59
No
alfredHitchcock.png
1979
87
Rodeo Girl
Western
Wayne, John
Ross, Katharine
Lynch, David
28
Yes
woody.png
1992
92
Fisher King, The
Comedy
Brando, Marlon
Russell, Betsy

84
No
NicholasCage.png
1991
109
Smallest Show on Earth, The
Science Fiction
Connery, Sean
Ryan, Meg
Stone, Oliver
41
No
alfredHitchcock.png
1966
213
Ballad of Narayama, The
Mystery
Capolicchio, Lino
Sanda, Dominique
Huston, John
26
No
clintEastwood.png
1986
89
Buddy System, The
Drama
Gray, Charles
Savelyeva, Lyudmila

9
No
NicholasCage.png
1990

Passenger, The
Drama
Singer, Marc
Schön, Margarete
Wendkos, Paul
88
No
NicholasCage.png
1986
123
Whoopee Boys, The
Drama
Hessman, Howard
Shields, Brooke
Avildsen, John G.
13
No
NicholasCage.png
1985
110
Spartacus
Comedy
Newman, Paul
Sinclair, Madge
Poitier, Sidney
3
No
NicholasCage.png
1965
101
Lonely Passion of Judith Hearne, The
Comedy
Estevez, Emilio
Snodgress, Carrie
Wharmby, Tony
29
No
NicholasCage.png
1979
122
Picasso Trigger
Action
Connery, Sean
Stanwyck, Barbara
Mate, Rudolph
45
No
NicholasCage.png
1981
114
Basic Instinct
Action
Dreyfuss, Richard
Strain, Julie
Corman, Roger
32
Yes
merylStreep.png
1991
183
Falling in Love
Comedy
Russell, Kurt
Streep, Meryl
Pollack, Sydney
37
No
merylStreep.png
1989
103
Kids & Pesticides
Music
Dreyfuss, Richard
Streisand, Barbra
Wyler, William
39
No
NicholasCage.png
1941
102
Devil's Wanton, The
Drama
Tracy, Spencer
Taylor, Elizabeth
Dmytryk, Edward
72
No
elizabethTaylor.png
1968
243
Father of the Bride
Drama
Cariou, Len
Taylor, Elizabeth
Trikonis, Gus
79
No
elizabethTaylor.png
1991

Ash Wednesday
Drama
Dix, Richard
Taylor, Joan

74
No
NicholasCage.png
1988
97
Fort Apache
Drama
Busker, Ricky
Thompson, Andrea
Chapman, Michael
16
No
NicholasCage.png
1963
95
Magician, The
Drama
Pryor, Richard
Tilton, Charlene

51
No
NicholasCage.png
1939
95
Peggy Sue Got Married
War
Nicholson, Jack
Turner, Kathleen
Russell, Ken
68
No
NicholasCage.png
1955
98
Cannibal Women in the Avocado Jungle of Death
Comedy
Dullea, Keir
Ullman, Liv
Bergman, Ingmar
37
No
NicholasCage.png
1957
158
Teen Wolf
Action
Bottoms, Timothy
Valberg, Brigitta
Bertolucci, Bernardo
47
No
paulNewman.png
1988
85
After Dark My Sweet
Adventure
Rowe, Nicholas
Warner, Julie
Roth, Bobby
82
No
weaver.png
1979
97
Soggy Bottom U. S. A.
Drama
Buchholz, Horst
Welch, Raquel
De Filippo, Eduardo
67
No
NicholasCage.png
1975
106
Last of Sheila, The
Drama
Jones, Tom
Venora, Diane

74
Yes
johnFord.png
1987
91
Major League
Drama
Patric, Jason
Wiest, Dianne
Coppola, Francis Ford
39
No
NicholasCage.png
1989
83
Cahill, United States Marshal
Horror
Malkovich, John
Winger, Debra
Rafelson, Bob
39
No
NicholasCage.png
1955
90
Scalphunters, The
Drama
Eastwood, Clint
Von Zerneck, Danielle
Edwards, Blake
9
No
NicholasCage.png
1961
110
A Big Hand for the Little Lady
Comedy
Malkovich, John
Woodward, Joanne
Newman, Paul
54
No
paulNewman.png
1991
108
Men, The
Mystery
Stewart, James
York, Susannah
Simon, S. Sylvan
69
No
Bergman.png
1990
94
Apache
Drama
Wilder, Gene

Almodóvar, Pedro
34
No
seanConnery.png
1988
85
Pelle the Conqueror
Drama
Brando, Marlon

Bertolucci, Bernardo
72
No
NicholasCage.png
1963
141
Swing It, Sailor!
Drama
Chaplin, Charles

Clair, Rene
68
No
brando.png
1990
81
Raven, The
Horror
Cage, Nicolas

De Bello, John
7
No
NicholasCage.png
1990
130
Little Prince, The
Western
Eastwood, Clint

Fellini, Federico
40
No
johnFord.png
1991
59
Pioneer Marshal
Western
Hale, Monte

Ford, Philip
61
No
NicholasCage.png
1971
114
Ferry to Hong Kong
Comedy
Cleese, John

Guney, Yilmaz
75
No
burtLancaster.png
1960
76
Ride in the Whirlwind
Western
Clift, Montgomery

Hitchcock, Alfred
50
No
alfredHitchcock.png
1976
124
Monty Python Live at the Hollywood Bowl
Drama
Stallone, Sylvester

Irvin, John
30
No
NicholasCage.png
1984
85
Monty Python's Life of Brian
Comedy
Finch, Peter

Kazan, Elia
36
No
NicholasCage.png
1956
121
A Clockwork Orange
War
Fujita, Susumu

Kurosawa, Akira
65
No
NicholasCage.png
1962
200
Throne of Blood
Action
Nakadai, Tatsuya

Lambert, Bruce

No
NicholasCage.png
1920
90
Spies
Drama
Tracy, Spencer

Lennon, Biddy W.
6
No
spencerTracy.png
1982
109
Good Morning, Vietnam
Drama
Marvin, Lee

Lucidi, Maurizio
34
No
johnWayne.png
1988
90
Ladykillers, The
Drama
Cleese, John

Mate, Rudolph
69
No
NicholasCage.png
1980
111
Hunt for Red October, The
Drama
Lancaster, Burt

Minnelli, Vincente
68
No
NicholasCage.png
1973
90
Sometimes a Great Notion
Comedy
Jarratt, John

Nigh, William
57
No
NicholasCage.png
1989
116
All the President's Men
Action
Holden, William

Perier, Etienne
26
No
NicholasCage.png
1970
122
Cyborg
Comedy
Martin, Pepper

Ray, Nicholas
49
No
NicholasCage.png
1983
96
Burning Poles, Cecil Taylor in Performance
Action
Martin, Steve

Rydell, Mark
22
Yes
NicholasCage.png
1985
112
Disorderlies
Drama
Keillor, Garrison

Sherman, George
75
No
clintEastwood.png
1948
132
Indiana Jones & the Last Crusade
Mystery
Poitier, Sidney

Stone, Oliver
79
No
clintEastwood.png
1985
96
Erasure, Live Wild!
Drama
Dean, Eddie

Taylor, Ray
43
No
NicholasCage.png
1949
53
Mystery of the Hooded Horsemen
Western
Wilson, Whip

Thomas, Gerald
7
No
johnWayne.png
1986
109
Dead Poets Society
Drama
Johnson, Van

Werner, Peter
51
No
NicholasCage.png
1962

Monty Python's Flying Circus
Comedy
Chapman, Graham


86
No
seanConnery.png
1993
60
Live at Harrah's
Mystery
De Niro, Robert


11
No
clintEastwood.png
1992
60
Tightrope
Drama
Fonda, Henry


54
No
NicholasCage.png
1989
60
Shakespeare Series
Western
Hitchcock, Alfred


60
No
NicholasCage.png
1990
112
Crimson Pirate, The
Mystery
Lancaster, Burt


3
No
NicholasCage.png
1989
98
Steve Martin Live!
Comedy
Matheson, Tim


24
No
NicholasCage.png
1991
91
Harper
Western
Newman, Paul


3
No
NicholasCage.png
1991

Salsa: The Motion Picture
War
Seagal, Steven


72
No
NicholasCage.png
1960
121
Two-Way Stretch
Horror
Tamblyn, Russ


31
No
NicholasCage.png
1967
93
Edison the Man
Drama
Tracy, Spencer


70
No
johnWayne.png
1932
210
In Harm's Way
War
Wayne, John


24
No
johnWayne.png
1991
56
Lawless Frontier
Western
Wayne, John


73
No
johnWayne.png
1993
134
Riders of Destiny
Western
Wayne, John


18
No
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks :wq[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:36:40 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 61L, 1441C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[10;9Hifstream infile;[11;9Hinfile.open([31m"films.txt"[m);[12;9H[38;5;130mif[m(infile.fail()){
                cout << [31m"Error with file"[m;
                exit([31m1[m);[14;26H[K[15;9H}[15;11H[K[16;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;10H[K[19;9Hstring x;[19;18H[K[20;1H        vector <[32mint[m> column1, column2,column8;[21;9Hvector<string> column3,column4,column5,column6,column7,column10;[22;7H  [32mint[m sum=[31m0[m;[22;19H[K[23;9H[32mdouble[m average;
        [38;5;130mwhile[m(infile.good()){[24;30H[K[25;5H[K[26;5H                    string year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,[31m';'[m);
                        cout << year<<endl;[28;44H[K[29;5H                    [38;5;130mif[m (!year.empty()){[29;44H[K[30;1H[34m//                              column1.push_back(stoi(year))[m[30;62H[K[31;5H    }[31;10H[K[32;25H[38;5;130melse[m{column1.push_back([31m0[m); }[33;1H[K[34;105H29,21-42[7C3%[28;42H[?25h[?25l[34;95H~@k[28;42H[34;95H   [28;42H[1;33r[33;1H
[1;34r[28;28H[106m([13C)[m[33;25Hgetline(infile, length,[31m';'[m);[34;1H[K[34;105H30,21-42[7C7%[28;42H[?25h[?25l[34;95H~@k[28;42H[34;95H   [28;42H[1;33r[33;1H
[1;34r[27;28H([13C)[33;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H31,16-42      10%[28;42H[?25h[?25l[34;95H~@k[28;42H[34;95H   [28;9H[1;33r[33;1H
[1;34r[26;43H[106m{[28;9H}[m[33;1H[34m//                      column2.push_back(stoi(length));[m[34;105H[K[34;105H32,2-9[8C14%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [27;42H[26;43H{[28;9H}[34;106H1,16-42[27;42H[?25h[?25l[34;95H~@k[27;42H[34;95H   [26;42H[26;28H[106m([13C)[m[34;106H0,21[26;42H[?25h[?25l[34;95H~@k[26;42H[34;95H   [27;42H[26;28H([13C)[34;106H1,16[27;42H[?25h[?25l[34;95H~@k[27;42H[34;95H   [26;42H[26;28H[106m([13C)[m[34;106H0,21[26;42H[?25h[?25l[34;95H~@k[26;42H[34;95H   [25;42H[26;28H([13C)[34;105H29[25;42H[?25h[?25l[34;95H~@k[25;42H[34;95H   [25;43H[34;109H2-43[25;43H[?25h[?25l[34;95H~@k[25;43H[34;95H   [25;42H[34;109H1-42[25;42H[?25h[?25l[34;95H~@k[25;42H[34;95H   [25;41H[34;109H0-41[25;41H[?25h[?25l[34;95H~@k[25;41H[34;95H   [25;40H[34;108H19-40[25;40H[?25h[?25l[34;95H~@k[25;40H[34;95H   [25;39H[34;109H8-39[25;39H[?25h[?25l[34;95H~@k[25;39H[34;95H   [25;40H[34;109H9-40[25;40H[?25h[?25l[34;95Hi[25;40H[34;95H [25;40H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H29,19-40      14%[25;40H[?25h[?25l[34;108H20-41[25;41H[?25h[?25l[34;109H1-42[25;42H[?25h[?25l[34;109H2-43[25;43H[?25h[?25l;[25;43H[K[34;109H1-42[25;42H[?25h[?25l;[25;42H[K[34;109H0-41[25;41H[?25h[?25l;[25;41H[K[34;108H19-40[25;40H[?25h[?25l;[25;40H[K[34;109H8-39[25;39H[?25h[?25l[34;105H30[26;39H[?25h[?25l[34;106H1,13[27;39H[?25h[?25l[26;43H[106m{[28;9H}[m[34;106H2,3-10 [28;10H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H33,18-39      17%[25;43H{[27;9H}[28;39H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H34,1[10C21%[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H35,18-39      25%[28;39H[?25h[?25l[34;109H9-40[28;40H[?25h[?25l[34;108H20-41[28;41H[?25h[?25l[34;109H1-42[28;42H[?25h[?25l[34;109H2-43[28;43H[?25h[?25l[34;109H3-44[28;44H[?25h[?25l[34;109H4-45[28;45H[?25h[?25l[34;109H5-46[28;46H[?25h[?25l[34;109H6-47[28;47H[?25h[?25l[34;109H7-48[28;48H[?25h[?25l[34;109H8-49[28;49H[?25h[?25l[34;109H9-50[28;50H[?25h[?25l[28;32H[106m([18C)[m[34;108H30-51[28;51H[?25h[?25l[34;109H1-52[28;52H[?25h[?25l[28;32H([18C)[34;109H2-53[28;53H[?25h[?25l[1;33r[33;1H
[1;34r[28;33r[28;1H[L[1;34r[34;105H[K[34;105H36,4-25[7C27%[28;25H[?25h[?25lc[34;108H5-26[28;26H[?25h[?25lo[34;108H6-27[28;27H[?25h[?25lu[34;108H7-28[28;28H[?25h[?25lt[34;108H8-29[28;29H[?25h[?25l[34;108H9-30[28;30H[?25h[?25l<[34;108H10-31[28;31H[?25h[?25l<[34;109H1-32[28;32H[?25h[?25l[34;109H2-33[28;33H[?25h[?25ll[34;109H3-34[28;34H[?25h[?25le[34;109H4-35[28;35H[?25h[?25lm[34;109H5-36[28;36H[?25h[?25l[28;35H[K[34;109H4-35[28;35H[?25h[?25ln[34;109H5-36[28;36H[?25h[?25lf[34;109H6-37[28;37H[?25h[?25l[28;36H[K[34;109H5-36[28;36H[?25h[?25lg[34;109H6-37[28;37H[?25h[?25lt[34;109H7-38[28;38H[?25h[?25lh[34;109H8-39[28;39H[?25h[?25l;[34;109H9-40[28;40H[?25h[34;1H[K[28;39H[?25l[34;95H^[[28;39H[34;95H  [28;40H[34;105H36,18-39      27%[28;39H[?25h[?25l[34;95H:[28;39H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 62L, 1456C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cpp[Kvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:37:54 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 62L, 1456C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[32mint[m main(){[3;9Hifstream infile;[4;9Hinfile.open([31m"films.txt"[m);[5;9H[38;5;130mif[m(infile.fail()){[6;17Hcout << [31m"Error with file"[m;[7;17Hexit([31m1[m);[8;9H}[9;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[10;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[12;9Hstring x;
        vector <[32mint[m> column1, column2,column8;
        vector<string> column3,column4,column5,column6,column7,column10;[15;9H[32mint[m sum=[31m0[m;[15;19H[K[16;9H[32mdouble[m average;[16;24H[K[17;9H[38;5;130mwhile[m(infile.good()){[18;10H[K[19;9H                string year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,[31m';'[m);[21;14H           cout << year<<;[21;41H[K[22;7H                  [38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m
        }[24;10H[K[25;5H                    [38;5;130melse[m{column1.push_back([31m0[m); }[25;53H[K[26;5H[K[27;1H                        getline(infile, length,[31m';'[m);
                        cout << length;[28;41H[K[29;5H                    [38;5;130mif[m(!length.empty()){[29;45H[K[30;1H[34m//                      column2.push_back(stoi(length));[m[30;57H[K[31;5H            }[31;19H[K[32;25H[38;5;130melse[m{column2.push_back([31m0[m);}
                        [33;25H[K[34;105H36,18-39      27%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;1H[K[34;105H37,18-39      31%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;105H[K[34;105H38,20-39      34%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;44H[106m{[28;17H}[m[33;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H39,3-17[7C37%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;39H[1;33r[33;1H
[1;34r[25;44H{[27;17H}[33;25Hcolumn4.push_back(subject);[34;105H[K[34;105H40,18-39      41%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H41,3-24[7C44%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H42,18-39      48%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H43,18-39      51%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H44,18-39      55%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H45,18-39      58%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H46,18-39      62%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H47,18-39      65%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;17H[34m//      column8.push_back(stoi(popularity));[m[34;105H[K[34;105H48,18-39      68%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H49,18-39      72%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[31m';'[m);[34;105H[K[34;105H50,18-39      75%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H51,18-39      79%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H52,18-39      82%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m ([32mint[m x:column1){[34;105H[K[34;105H53,20-39      86%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;105H[K[34;105H54,18-39      89%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H55,18-39      93%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;39H[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H56,18-39      96%[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;17H[1;33r[33;1H
[1;34r[34;105H[K[34;105H57,3-17[7CBot[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [29;28H[106m{[31;9H}[m[34;106H8,21-28[29;28H[?25h[?25l[34;95H~@k[29;28H[34;95H   [30;31H[29;28H{[31;9H}[34;106H9,17-31[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [31;9H[29;28H[106m{[31;9H}[m[34;105H60,2-9  [31;9H[?25h[?25l[34;95H~@k[31;9H[34;95H   [32;1H[29;28H{[31;9H}[34;106H1,1  [32;1H[?25h[?25l[34;95H~@k[32;1H[34;95H   [33;8H[34;106H2,1-8[33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [32;1H[34;106H1,1  [32;1H[?25h[?25l[34;95H~@k[32;1H[34;95H   [31;9H[29;28H[106m{[31;9H}[m[34;106H0,2-9[31;9H[?25h[?25l[34;95H~@k[31;9H[34;95H   [31;8H[29;28H{[31;9H}[34;108H1-8[31;8H[?25h[?25l[34;95H/[31;8H[34;95H[K[34;1H/[?2004h[?25h/[?25l[1;33r[1;1H[29L[1;34r[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[11;9Hifstream [7minfile[m;[12;9Hinfile.open([31m"films.txt"[m);[13;9H[38;5;130mif[m(infile.fail()){[14;17Hcout << [31m"Error with file"[m;[15;17Hexit([31m1[m);[16;9H}[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[20;9Hstring x;[21;9Hvector <[32mint[m> column1, column2,column8;[22;9Hvector<string> column3,column4,column5,column6,column7,column10;[23;9H[32mint[m sum=[31m0[m;[24;9H[32mdouble[m average;[25;9H[38;5;130mwhile[m(infile.good()){[27;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[28;25Hgetline(infile, year,[31m';'[m);[29;25Hcout << year<<;[34;1H[K[34;105H11,11-18      Top//[34;105H[K[34;3H[?25h[?25l[34;2H[K[1;33r[1;1H[29M[1;34r[6;25Hgetline(infile, length,[31m';'[m);[7;25Hcout << length;[8;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[10;17H}[11;25H[38;5;130melse[m{column2.push_back([31m0[m);}[13;25Hgetline(infile, title,[31m';'[m);[14;25Hcolumn3.push_back(title);[15;25Hgetline(infile, subject,[31m';'[m);[16;25Hcolumn4.push_back(subject);[17;25Hgetline(infile, actor,[31m';'[m);[18;25Hcolumn5.push_back(actor);[19;25Hgetline(infile, actress,[31m';'[m);[20;25Hcolumn6.push_back(actress);[21;25Hgetline(infile, director,[31m';'[m);[22;25Hcolumn7.push_back(director);[23;25Hgetline(infile,popularity,[31m';'[m);[24;17H[34m//      column8.push_back(stoi(popularity));[m[25;25Hgetline(infile, awards,[31m';'[m);[26;25Hgetline(infile, image,[31m';'[m);[27;25Hcolumn10.push_back(image);[28;17H}[29;9H[38;5;130mfor[m ([32mint[m x:column1){[30;17Hcout <<x<<endl;[31;9H}
}[34;1H[K[34;105H60,1[10CBot/[34;105H[K[34;2H[?25h [?25l[31;1H[34;105H60,1[10CBot[31;1H[?25h[?25l[34;95Hi[31;1H[34;95H [31;1H


[1m-- INSERT --[m[34;105H[K[34;105H60,1[10CBot[31;1H[?25h[?25l/[34;108H2[31;2H[?25h[?25l[34m//      }[m[34;108H3[31;3H[?25h[?25l[34;105H59,1[30;1H[?25h[?25l/[34;108H2[30;2H[?25h[?25l[34m//              cout <<x<<endl;[m[34;108H3[30;3H[?25h[?25l[34;106H8,1[29;1H[?25h[?25l/[34;108H2[29;2H[?25h[?25l[34m//      for (int x:column1){[m[34;108H3[29;3H[?25h[?25l[34;106H7,1[28;1H[?25h[34;1H[K[28;1H[?25l[34;95H^[[28;1H[34;95H  [28;1H[34;105H57,1-8[8CBot[28;8H[?25h[?25l[34;95H:[28;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 62L, 1462C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cpp[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:29:18:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
   29 |    cout << year<<[01;31m[K;[m[K
      |                  [01;31m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:38:11 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 62L, 1462C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[3;9H}[4;25H[38;5;130melse[m{column1.push_back([31m0[m); }[6;25Hgetline(infile, length,[31m';'[m);[7;25Hcout << length;[8;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[10;17H}[11;25H[38;5;130melse[m{column2.push_back([31m0[m);}

               [9Cgetline(infile, title,[31m';'[m);
                        column3.push_back(title);[15;11H              getline(infile, subject,[31m';'[m);[15;55H[K[16;10H               column4.push_back(subject);[16;52H[K[17;11H              getline(infile, actor,[31m';'[m);[18;10H               column5.push_back(actor);[18;50H[K[19;9H                getline(infile, actress,[31m';'[m);
                        column6.push_back(actress);[21;14H           getline(infile, director,[31m';'[m);[22;7H                  column7.push_back(director);[23;25Hgetline(infile,popularity,[31m';'[m);
                [34m//      column8.push_back(stoi(popularity));[m[24;61H[K[25;5H                    getline(infile, awards,[31m';'[m);[25;53H[K[26;5H                    getline(infile, image,[31m';'[m);[26;52H[K[27;1H                        column10.push_back(image);
                }[28;18H[K[29;1H[34m//      for (int x:column1){[m[29;29H[K[30;1H[34m//              cout <<x<<endl;[m[30;32H[K[31;1H[34m//      }[m[31;10H[K[32;1H}
        [33;9H[K[34;105H57,1-8[8CBot[28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [27;8H[34;106H6[27;8H[?25h[?25l[34;95H~@k[27;8H[34;95H   [26;8H[34;106H5[26;8H[?25h[?25l[34;95H~@k[26;8H[34;95H   [25;8H[34;106H4[25;8H[?25h[?25l[34;95H~@k[25;8H[34;95H   [24;8H[34;106H3[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [23;8H[34;106H2[23;8H[?25h[?25l[34;95H~@k[23;8H[34;95H   [22;8H[34;106H1[22;8H[?25h[?25l[34;95H~@k[22;8H[34;95H   [21;8H[34;106H0[21;8H[?25h[?25l[34;95H~@k[21;8H[34;95H   [20;8H[34;105H49[20;8H[?25h[?25l[34;95H~@k[20;8H[34;95H   [19;8H[34;106H8[19;8H[?25h[?25l[34;95H~@k[19;8H[34;95H   [18;8H[34;106H7[18;8H[?25h[?25l[34;95H~@k[18;8H[34;95H   [17;8H[34;106H6[17;8H[?25h[?25l[34;95H~@k[17;8H[34;95H   [16;8H[34;106H5[16;8H[?25h[?25l[34;95H~@k[16;8H[34;95H   [15;8H[34;106H4[15;8H[?25h[?25l[34;95H~@k[15;8H[34;95H   [14;8H[34;106H3[14;8H[?25h[?25l[34;95H~@k[14;8H[34;95H   [13;8H[34;106H2[13;8H[?25h[?25l[34;95H~@k[13;8H[34;95H   [12;8H[34;106H1[12;8H[?25h[?25l[34;95H~@k[12;8H[34;95H   [11;8H[34;106H0[11;8H[?25h[?25l[34;95H~@k[11;8H[34;95H   [10;8H[34;105H39[10;8H[?25h[?25l[34;95H~@k[10;8H[34;95H   [9;8H[34;106H8,3[9;8H[?25h[?25l[34;95H~@k[9;8H[34;95H   [8;8H[34;106H7,1[8;8H[?25h[?25l[34;95H~@k[8;8H[34;95H   [7;8H[34;106H6[7;8H[?25h[?25l[34;95H~@k[7;8H[34;95H   [7;16H[34;108H2-16[7;16H[?25h[?25l[34;95H~@k[7;16H[34;95H   [7;24H[34;108H3-24[7;24H[?25h[?25l[34;95H~@k[7;24H[34;95H   [7;25H[34;108H4-25[7;25H[?25h[?25l[34;95H~@k[7;25H[34;95H   [7;26H[34;108H5-26[7;26H[?25h[?25l[34;95H~@k[7;26H[34;95H   [7;27H[34;108H6-27[7;27H[?25h[?25l[34;95H~@k[7;27H[34;95H   [7;28H[34;108H7-28[7;28H[?25h[?25l[34;95H~@k[7;28H[34;95H   [7;29H[34;108H8-29[7;29H[?25h[?25l[34;95H~@k[7;29H[34;95H   [7;30H[34;108H9-30[7;30H[?25h[?25l[34;95H~@k[7;30H[34;95H   [7;31H[34;108H10-31[7;31H[?25h[?25l[34;95H~@k[7;31H[34;95H   [7;32H[34;109H1-32[7;32H[?25h[?25l[34;95H~@k[7;32H[34;95H   [7;33H[34;109H2-33[7;33H[?25h[?25l[34;95H~@k[7;33H[34;95H   [7;34H[34;109H3-34[7;34H[?25h[?25l[34;95H~@k[7;34H[34;95H   [7;35H[34;109H4-35[7;35H[?25h[?25l[34;95H~@k[7;35H[34;95H   [7;36H[34;109H5-36[7;36H[?25h[?25l[34;95H~@k[7;36H[34;95H   [7;37H[34;109H6-37[7;37H[?25h[?25l[34;95H~@k[7;37H[34;95H   [7;38H[34;109H7-38[7;38H[?25h[?25l[34;95H~@k[7;38H[34;95H   [7;39H[34;109H8-39[7;39H[?25h[?25l[34;95H<[7;39H[?25h[?25l[34;96H<[7;39H[34;95H  [7;17Hcout << length;[7;33H[K[34;108H3-17 [7;17H[?25h[?25l[34;95He[7;17H[34;95H [7;20H[34;108H6-20[7;20H[?25h[?25l[34;95Hn[7;20H[34;1H/\<infile\>[34;13H[K[34;1H[13;33H[34;105H42,12-33      Bot[13;33H[?25h[?25l[34;95Hd[13;33H[?25h[?25l[34;96Hl[13;33H[34;95H  [13;33Hnfile, title,[31m';'[m);[13;51H[K[13;33H[?25h[?25l[34;95Hi[13;33H[34;95H [13;33H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H42,12-33      Bot[13;33H[?25h[?25l[34;106H1,4-25 [12;25H[?25h[?25l[34;106H0,12-33[11;33H[?25h[?25l[8;44H[106m{[10;17H}[m[34;105H39,4-18 [10;18H[?25h[?25l[8;44H{[10;17H}[34;106H8,14-33[9;33H[?25h[?25l[8;44H[106m{[10;17H}[m[34;106H9,4-18 [10;18H[?25h[?25l[8;44H{[10;17H}[34;105H40,12-33[11;33H[?25h[?25l[34;106H1,4-25 [12;25H[?25h[?25l[34;106H0,12-33[11;33H[?25h[?25l[8;44H[106m{[10;17H}[m[34;105H39,4-18 [10;18H[?25h[?25l[8;44H{[10;17H}[34;106H8,14-33[9;33H[?25h[?25l[34;106H7,12[8;33H[?25h[?25l[34;109H3-34[8;34H[?25h[?25l[34;109H4-35[8;35H[?25h[?25l[34;109H5-36[8;36H[?25h[?25l[34;109H6-37[8;37H[?25h[?25l[34;109H7-38[8;38H[?25h[?25l[34;109H8-39[8;39H[?25h[?25l[34;109H9-40[8;40H[?25h[?25ly[106m()[m[34;108H20-41[8;41H[?25h[?25l[34;109H1-42[8;42H[?25h[?25l[34;109H0-41[8;41H[?25h[?25l()[34;108H19-40[8;40H[?25h[?25l[34;109H8-39[8;39H[?25h[?25l[34;106H6,18-32[7;32H[?25h[?25l[34;109H7-31[7;31H[?25h[?25l<;[34;109H8-32[7;32H[?25h[?25l<;[34;109H9-33[7;33H[?25h[?25le;[34;108H20-34[7;34H[?25h[?25ln;[34;109H1-35[7;35H[?25h[?25ld;[34;109H2-36[7;36H[?25h[?25ll;[34;109H3-37[7;37H[?25h[?25l[34;106H5,16[6;37H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcout << year<<;[34;105H[K[34;105H34,1[10C96%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;105H[K[34;105H33,16-37      93%[6;37H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[34;105H[K[34;105H32,3-10[7C89%[4;43H[106m{[6;9H}[?25h[?25l[1;33r[m[1;1H[L[1;34r[34;105H[K[34;105H31,11-37      86%[5;43H{[7;9H}[6;37H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;105H[K[34;105H30,16-37      82%[6;37H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;105H[K[34;105H29,16-37      79%[6;37H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mint[m sum=[31m0[m;[34;105H[K[34;105H28,16-37      75%[6;37H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[34;105H[K[34;105H27,16-37      72%[6;37H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;105H[K[34;105H26,1[10C68%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hstring x;[34;105H[K[34;105H25,23-30      65%[6;30H[?25h[?25l[34;106H6,1    [7;1H[?25h[?25l[34;106H7,16-37[8;37H[?25h[?25l[34;106H8[9;37H[?25h[?25l[34;106H9[10;37H[?25h[?25l[34;105H30[11;37H[?25h[?25l[34;105H29[10;37H[?25h[?25l[34;109H7-38[10;38H[?25h[?25l[34;109H8-39[10;39H[?25h[?25l;[10;39H[K[34;109H7-38[10;38H[?25h[?25l;[10;38H[K[34;109H6-37[10;37H[?25h[?25l<;[34;109H7-38[10;38H[?25h[?25l,;[34;109H8-39[10;39H[?25h[?25l;[10;39H[K[34;109H7-38[10;38H[?25h[?25l<;[34;109H8-39[10;39H[?25h[?25l[31m";[m[34;109H9-40[10;40H[?25h[?25l[31m"[m;[34;108H20-41[10;41H[?25h[?25l[34;108H19-40[10;40H[?25h[?25l[31m "[m;[34;108H20-41[10;41H[?25h[?25l[31m "[m;[34;109H1-42[10;42H[?25h[?25l[31m "[m;[34;109H2-43[10;43H[?25h[?25l[31m "[m;[34;109H3-44[10;44H[?25h[?25l[31m "[m;[34;109H4-45[10;45H[?25h[?25l[31m "[m;[34;109H5-46[10;46H[?25h[?25l[31m "[m;[34;109H6-47[10;47H[?25h[34;1H[K[10;46H[?25l[34;95H^[[10;46H[34;95H  [10;47H[34;105H29,25-46      65%[10;46H[?25h[?25l[34;95H:[10;46H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 62L, 1475C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:42:12:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Knfile[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kinfile[m[Kâ€™?
   42 |    getline([01;31m[Knfile[m[K, title,';');
      |            [01;31m[K^~~~~[m[K
      |            [32m[Kinfile[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:38:54 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 62L, 1475C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[10;9Hifstream infile;[11;9Hinfile.open([31m"films.txt"[m);[12;9H[38;5;130mif[m(infile.fail()){
                cout << [31m"Error with file"[m;
                exit([31m1[m);[14;26H[K[15;9H}[15;11H[K[16;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[17;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[18;10H[K[19;9Hstring x;[19;18H[K[20;1H        vector <[32mint[m> column1, column2,column8;[21;9Hvector<string> column3,column4,column5,column6,column7,column10;[22;7H  [32mint[m sum=[31m0[m;[22;19H[K[23;9H[32mdouble[m average;
        [38;5;130mwhile[m(infile.good()){[24;30H[K[25;5H[K[26;5H                    string year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,[31m';'[m);
                        cout << year<<[31m"       "[m;[28;49H[K[29;5H                    [38;5;130mif[m (!year.empty()){[29;44H[K[30;1H[34m//                              column1.push_back(stoi(year))[m[30;62H[K[31;5H    }[31;10H[K[32;25H[38;5;130melse[m{column1.push_back([31m0[m); }[33;1H[K[34;105H29,25-46[7C3%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;43H[1;33r[33;1H
[1;34r[28;43H[106m{[30;9H}[m[33;25Hgetline(infile, length,[31m';'[m);[34;1H[K[34;105H30,22-43[7C6%[28;43H[?25h[?25l[34;95H~@k[28;43H[34;95H   [28;46H[1;33r[33;1H
[1;34r[27;43H{[29;9H}[33;17Hcout << length<<endl;[34;105H[K[34;105H31,20-46      10%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;9H[1;33r[33;1H
[1;34r[26;43H[106m{[28;9H}[m[33;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H32,2-9[8C13%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;46H[1;33r[33;1H
[1;34r[25;43H{[27;9H}[33;1H[34m//                      column2.push_back(stoi(length));[m[34;105H[K[34;105H33,25-46      17%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H34,0-1[8C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;46H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H35,25-46      24%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;37H[1;33r[33;1H
[1;34r[34;105H[K[34;105H36,23-37      27%[28;37H[?25h[?25l[34;95H~@k[28;37H[34;95H   [28;44H[1;33r[33;1H
[1;34r[28;44H[106m{[30;17H}[m[33;25Hgetline(nfile, title,[31m';'[m);[34;105H[K[34;105H37,23-44      31%[28;44H[?25h[?25l[34;95H~@k[28;44H[34;95H   [28;46H[1;33r[33;1H
[1;34r[27;44H{[29;17H}[33;25Hcolumn3.push_back(title);[34;105H[K[34;105H38,27-46      34%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;44H[106m{[28;17H}[m[33;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H39,3-17[7C37%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;46H[1;33r[33;1H
[1;34r[25;44H{[27;17H}[33;25Hcolumn4.push_back(subject);[34;105H[K[34;105H40,25-46      41%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H41,3-24[7C44%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;46H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H42,25-46      48%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;46H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H43,25-46      51%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;46H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H44,25-46      55%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;46H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H45,25-46      58%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;46H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H46,25-46      62%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [28;46H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H47,25-46      65%[28;46H[?25h[?25l[34;95H~@k[28;46H[34;95H   [27;46H[34;106H6[27;46H[?25h[?25l[34;95H~@k[27;46H[34;95H   [26;46H[34;106H5[26;46H[?25h[?25l[34;95H~@k[26;46H[34;95H   [25;46H[34;106H4[25;46H[?25h[?25l[34;95H~@k[25;46H[34;95H   [25;45H[34;109H4-45[25;45H[?25h[?25l[34;95H~@k[25;45H[34;95H   [24;45H[34;106H3[24;45H[?25h[?25l[34;95H~@k[24;45H[34;95H   [23;45H[34;106H2[23;45H[?25h[?25l[34;95H~@k[23;45H[34;95H   [23;44H[34;109H3-44[23;44H[?25h[?25l[34;95H~@k[23;44H[34;95H   [23;43H[34;109H2-43[23;43H[?25h[?25l[34;95H~@k[23;43H[34;95H   [23;42H[34;109H1-42[23;42H[?25h[?25l[34;95H~@k[23;42H[34;95H   [23;41H[34;109H0-41[23;41H[?25h[?25l[34;95H~@k[23;41H[34;95H   [23;40H[34;108H19-40[23;40H[?25h[?25l[34;95H~@k[23;40H[34;95H   [23;39H[34;109H8-39[23;39H[?25h[?25l[34;95H~@k[23;39H[34;95H   [23;38H[34;109H7-38[23;38H[?25h[?25l[34;95H~@k[23;38H[34;95H   [23;37H[34;109H6-37[23;37H[?25h[?25l[34;95H~@k[23;37H[34;95H   [23;36H[34;109H5-36[23;36H[?25h[?25l[34;95H~@k[23;36H[34;95H   [23;35H[34;109H4-35[23;35H[?25h[?25l[34;95H~@k[23;35H[34;95H   [23;34H[34;109H3-34[23;34H[?25h[?25l[34;95H~@k[23;34H[34;95H   [23;33H[34;109H2-33[23;33H[?25h[?25l[34;95Hi[23;33H[34;95H [23;33H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H42,12-33      65%[23;33H[?25h[?25linfile, title,[31m';'[m);[34;109H3-34[23;34H[?25h[34;1H[K[23;33H[?25l[34;95H^[[23;33H[34;95H  [23;34H[34;105H42,12-33      65%[23;33H[?25h[?25l[34;95H:[23;33H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 62L, 1476C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
1990       111
113       High Heels
Dead Zone, The       Horror
Action       Connery, Sean
Gere, Richard       Adams, Brooke
Adams, Maud       Glen, John
Loma, José Antonio de la       14
28       No
No       NicholasCage.png
1990
NicholasCage.png
1982       188
117       Tragedy of a Ridiculous Man
A Man & a Woman       Drama
Drama       Trintignant, Jean-Louis
Trintignant, Jean-Louis       Aimee, Anouk
Aleandro, Norma       Puenzo, Luiz
Kulik, Buzz       51
2       No
No       johnWayne.png
1988
NicholasCage.png
1988       101
116       Raiders of the Lost Ark
Running Man, The       Science Fiction
Action       Glover, Danny
Penn, Sean       Alonso, Maria Conchita
Anderson, Erika       Pillsbury, Sam
Sinise, Gary       53
88       No
No       NicholasCage.png
1979
paulNewman.png
1960       90
91       Wild Strawberries
Seventh Seal, The       Drama
Drama       Taylor, Rod
Björnstrand, Gunnar       Andersson, Harriet
Andersson, Harriet       Bergman, Ingmar
Bergman, Ingmar       64
18       Yes
No       johnWayne.png
1967
NicholasCage.png
1962       
103       Elephant Walk
Ten       Comedy
Comedy       Reynolds, Burt
Sydow, Max von       Andrews, Julie
Andrews, Julie       Hitchcock, Alfred
Konchalovsky, Andrei       82
59       Yes
No       NicholasCage.png
1984
NicholasCage.png
1988       104
106       Magic
Tommy       Music
Mystery       Dreyfuss, Richard
Haas, Lukas       Aquino, Vanessa
Archer, Anne       Lyne, Adrian
Noyce, Phillip       28
82       No
No       NicholasCage.png
1991
NicholasCage.png
1924       110
90       Henry, Portrait of a Serial Killer
Big Blue, The       Drama
Drama       Glover, Danny
Roberts, Eric       Arquette, Rosanna
Arquette, Rosanna       Scorsese, Martin
Seidelman, Susan       41
83       No
No       NicholasCage.png
1926
NicholasCage.png
1987       102
118       Vincent, Francois, Paul & the Others
Thunderball       Action
Mystery       Chesney, Arthur
Ustinov, Peter       Bacall, Lauren
Bacall, Lauren       Lumet, Sidney
Wellman, William       15
27       No
No       NicholasCage.png
1991
NicholasCage.png
1989       103
96       Island of Dr. Moreau, The
Eighty-Four Charing Cross Road       Drama
Drama       Hopkins, Anthony
Jacoby, Billy       Barash, Olivia
Barbeau, Adrienne       Romero, George A.
Frears, Stephen       6
62       No
No       brigitteBardot.png
1969
brigitteBardot.png
1958       77
90       Voulez-Vous Danser Avec Moi?
A Coeur Joie, (Head Over Heels)       Action
Westerns       Connery, Sean
Palance, Jack       Bardot, Brigitte
Bardot, Brigitte       Koster, Henry
Malle, Louis       30
34       No
No       brigitteBardot.png
1955
brigitteBardot.png
1962       100
90       And God Created Woman
Ms. Don Juan       Drama
Drama       Byrne, Gabriel
Kendall, Henry       Barry, Joan
Barrymore, Deborah       Schaffner, Franklin J.
Spielberg, Steven       8
44       No
No       NicholasCage.png
1989
JackNicholson.png
1987       95
101       Mother Lode
Final Analysis       Drama
Action       Connery, Sean
Rourke, Mickey       Basinger, Kim
Basinger, Kim       Moxey, John Llewellyn
Pearce, Richard       11
84       No
Yes       NicholasCage.png
1946
Bergman.png
1984       95
101       Act of Piracy
Split Decisions       Drama
Comedy       Cage, Nicolas
Hauser, Wings       Beck, Kimberly
Bedelia, Bonnie       Pakula, Alan J.
DeMille, Cecil B.       59
55       No
No       NicholasCage.png
1982
NicholasCage.png
1990       105
99       Secret Beyond the Door
Scarlet Street       Drama
Action       Blanc, Mel
Burns, George       Berenson, Marisa
Bergen, Candice       Attenborough, Richard
Milius, John       2
10       No
No       NicholasCage.png
1972
NicholasCage.png
1935       75
97       Autumn Sonata
Gaslight       Drama
Drama       Grant, Cary
Sjöström, Victor       Bergman, Ingrid
Bergman, Ingrid       Fleming, Victor
Gibson, Alan       15
2       No
No       ingridBergman.png
1946
ingridBergman.png
1940       90
120       Goodbye Again
Anastasia       Drama
Drama       Crosby, Bing
Ekman, Gösta       Bergman, Ingrid
Bergman, Ingrid       Molander, Gustaf
Molander, Gustaf       88
26       No
No       ingridBergman.png
1956
ingridBergman.png
1952       110
83       Voyage in Italy
Fear       Drama
Drama       Vitale, Mario
Matthau, Walter       Bergman, Ingrid
Bergman, Ingrid       
       16
71       No
No       NicholasCage.png
1991
glennFord.png
1970       94
108       King of Comedy
Best of the Big Laff Off, The       Comedy
Drama       Abraham, F. Murray
Reynolds, Burt       Billingsley, Jennifer
Binoche, Juliette       Kaufman, Philip
Huston, John       65
0       Yes
Yes       NicholasCage.png
1952
Bergman.png
1976       116
94       Easy Rider
Five Easy Pieces       Drama
Drama       Sutherland, Donald
Connery, Sean       Blackman, Honor
Blair, Linda       Boorman, John
Bernds, Edward       
12       No
Yes       NicholasCage.png
1973
clintEastwood.png
1982       123
102       Nightbreed
Under the Sun of Satan       Drama
Drama       Meril, Macha
Cosby, Bill       Boosler, Elayne
Booth, Connie       Gilliam, Terry
       62
67       No
No       NicholasCage.png
1928
NicholasCage.png
1992       106
       Good Fellas
Kiss of the Spider Woman       Drama
Action       Eastwood, Clint
Newman, Paul       Brennan, Eileen
Brewster, Diane       Pevney, Joseph
Rumar, Craig       45
76       No
No       NicholasCage.png
1987
NicholasCage.png
1965       123
104       From the Life of the Marionettes
Frantic       Mystery
Science Fiction       Douglas, Michael
Irons, Jeremy       Bujold, Geneviève
Burd, Stephanie       Lambert, Bruce
Friedkin, William       28
82       Yes
No       NicholasCage.png
1952
johnFord.png
1954       40
114       School Daze
End of Innocence, The       Drama
Mystery       Connery, Sean
Olsen, Merlin       Cannon, Katharine
Capone, Nadia       Bergman, Robert
Day, Robert       40
75       No
No       NicholasCage.png
1989
NicholasCage.png
1963       138
64       One Frightened Night
Year My Voice Broke, The       Drama
War       Belmondo, Jean-Paul
Hopkins, Anthony       Caron, Leslie
Carrera, Barbara       Taylor, Don
Mackenzie, John       51
50       No
No       NicholasCage.png
1972
NicholasCage.png
1987       119
107       Gremlins 2: The New Batch
Fast Times at Ridgemont High       Comedy
Comedy       McCarthy, Andrew
Moore, Frank       Chambers, Marilyn
Champion, Marge       Edwards, Blake
Lambert, Bruce       15
22       No
No       NicholasCage.png
1992
NicholasCage.png
1989       113
103       Moonstruck
Witches of Eastwick, The       Comedy
Action       Moore, Roger
Davis, Guy       Chong, Rae Dawn
Chong, Rae Dawn       
Rifkin, Adam       77
69       Yes
No       NicholasCage.png
1965
NicholasCage.png
1963       120
68       Ambassador Bill
Big Trail, The       Western
Western       Newman, Paul
Eastwood, Clint       Clark, Susan
Clarke, Caitlin       Penn, Arthur
Konchalovsky, Andrei       7
0       No
No       MichellePfeiffer.png
1990
NicholasCage.png
1991       119
105       Tomorrow Is Forever
Like Father Like Son       Comedy
Drama       Stewart, James
Hope, Bob       Collins, Joan
Collins, Pauline       Gilbert, Lewis
Joffe, Roland       87
15       No
No       NicholasCage.png
1991
NicholasCage.png
1961       66
110       White Hunter, Black Heart
Sundays & Cybele       Drama
Science Fiction       LeMat, Paul
McDowall, Roddy       Crawford, Joan
Crosby, Denise       Lambert, Mary
Walton, Kip       13
82       No
No       NicholasCage.png
1988
NicholasCage.png
1954       96
82       Brink of Life
Betty Blue       Drama
Music       Savage, John
Chase, Chevy       D'Angelo, Beverly
Danilchenko, Svetlana       Kurosawa, Akira
Allen, Woody       22
74       No
No       NicholasCage.png
1971
NicholasCage.png
1969       128
18       Battle of Midway, The
Three Godfathers       Western
Mystery       Cotten, Joseph
Ford, Glenn       Davis, Bette
Davis, Bette       Goulding, Edmund
Mankiewicz, Joseph L.       23
33       No
No       NicholasCage.png
1988
NicholasCage.png
1989       104
120       Man Who Knew Too Much, The
Beauty & the Beast       Science Fiction
Mystery       McCrea, Joel
Richardson, Ralph       De Havilland, Olivia
Deakins, Lucy       Castle, Nick
Wrede, Caspar       4
36       No
No       NicholasCage.png
1990
NicholasCage.png
1967       90
86       Hurricane Smith
Fair Game       Action
Action       Moore, Roger
Cruise, Tom       DeMornay, Rebecca
Deneuve, Catherine       Berri, Claude
Chouraqui, Elie       15
15       No
No       NicholasCage.png
1977
NicholasCage.png
1980       135
120       Jean de Florette
Fat Man & Little Boy       Drama
Drama       Cage, Nicolas
Connery, Sean       DeSoto, Rosana
DeSoto, Rosana       Menendez, Ramon
Crichton, Michael       62
10       No
No       woody.png
1940
johnWayne.png
1961       190
60       Minsky's Follies
Novice, The       Comedy
Drama       Ganz, Bruno
Hurt, William       Dommartin, Solveig
Donohoe, Amanda       Roeg, Nicolas
       60
78       No
No       seanConnery.png
1991
NicholasCage.png
1991       102
97       My Darling Clementine
Wagon Master       Western
Western       Wayne, John
Hopkins, Harold       Drynan, Jeanie
DuBarry, Denise       Dahlin, Bob
Kollek, Amos       69
48       Yes
Yes       JackNicholson.png
1975
NicholasCage.png
1977       134
97       Barfly
Wait Until Spring, Bandini       Drama
Comedy       Powell, William
Tracy, Spencer       Dunne, Irene
Duperey, Anny       Resnais, Alain
Gilliam, Terry       5
32       No
No       johnWayne.png
1993
NicholasCage.png
1979       92
123       Molly Maguires, The
Beverly Hills Cop       Comedy
Mystery       Urich, Robert
Mastroianni, Marcello       Ekberg, Anita
Ekland, Britt       De Sica, Vittorio
Hamilton, Guy       41
45       No
No       NicholasCage.png
1993
NicholasCage.png
1992       97
94       Kandyland
Campus Man       Drama
Drama       Ford, Glenn
Aiello, Danny       Farrow, Mia
Farrow, Mia       Allen, Woody
Allen, Woody       80
8       Yes
No       NicholasCage.png
1986
NicholasCage.png
1981       96
70       Doughnuts & Society
Holocaust       Drama
Science Fiction       Jamieson, Malcolm
Whitaker, Forest       Fenn, Sherilyn
Ferratti, Rebecca       Kiersch, Fritz
Belson, Jerry       84
83       Yes
No       NicholasCage.png
1977
NicholasCage.png
1981       116
110       Norma Rae
Steel Magnolias       Drama
Comedy       Hanks, Tom
Hamill, Mark       Fisher, Carrie
Fisher, Carrie       Lucas, George
Marquand, Richard       4
72       No
No       NicholasCage.png
1957
burtLancaster.png
1931       
89       Bloodsucking Pharaohs in Pittsburgh
Roma       Drama
Drama       Douglas, Michael
Bridges, Jeff       Fonda, Jane
Fonda, Jane       Pakula, Alan J.
Pollack, Sydney       34
62       Yes
Yes       NicholasCage.png
1940
alfredHitchcock.png
1944       96
87       Stacey!
Naked Obsession       Mystery
Mystery       Lottimer, Ed
Sharkey, Ray       Ford, Maria
Foreman, Deborah       Coolidge, Martha
Demme, Jonathan       8
76       No
No       NicholasCage.png
1988
NicholasCage.png
1955       
103       My Left Foot
Back to the Beach       Comedy
Drama       Marshall, Herbert
Apfel, Oscar       Garbo, Greta
Garbo, Greta       Brown, Clarence
Brown, Clarence       72
83       No
Yes       gretaGarbo.png
1936
gretaGarbo.png
1931       91
100       Wild Orchids
Grand Hotel       Drama
Drama       Hale, Alan
Douglas, Melvyn       Garbo, Greta
Garbo, Greta       Mamoulian, Rouben
Niblo, Fred       72
73       No
No       gretaGarbo.png
1932
gretaGarbo.png
1930       76
105       A Child Is Waiting
Tootsie       Comedy
Comedy       Dreyfuss, Richard
Brando, Marlon       Garson, Greer
Gary, Lorraine       Spielberg, Steven
Spielberg, Steven       6
44       No
No       NicholasCage.png
1975
johnWayne.png
1979       89
122       Salvador
Horse Soldiers, The       Western
Action       Newton, Robert
Newman, Paul       Gleason, Jackie
Gless, Sharon       Hyam, Peter
Mulligan, Robert       60
44       No
No       NicholasCage.png
1978
NicholasCage.png
1988       134
95       Masculine Feminine
Outer Limits, The       Science Fiction
Horror       Currie, Sondra
Palance, Jack       Greenbush, Lindsay
Greist, Kim       
Hitchcock, Alfred       66
19       No
No       NicholasCage.png
1988
NicholasCage.png
1992       133
76       Slumber Party Massacre III
Tokyo Pop       Comedy
Action       Schwarzenegger, Arnold
Schwarzenegger, Arnold       Hamilton, Linda
Hamilton, Linda       Guillermin, John
       59
81       No
No       NicholasCage.png
1992
NicholasCage.png
1985       100
82       Final Terror, The
Reckless       Drama
Comedy       O'Toole, Peter
Martin, Steve       Hannah, Daryl
Hannah, Daryl       Scott, Ridley
Stone, Oliver       6
58       No
No       NicholasCage.png
1938
NicholasCage.png
1936       89
99       Inserts
Blue Iguana, The       Drama
Drama       Duvall, Robert
Gilman, Kenneth       Harris, Priscilla
Harry, Deborah       Cronenberg, David
Holzman, Allan       23
8       No
No       NicholasCage.png
1989
NicholasCage.png
1970       94
100       Swing Shift
Foul Play       Comedy
Comedy       Reynolds, Burt
Albert, Edward       Hawn, Goldie
Hawn, Goldie       Marshall, Garry
Miller, Robert Ellis       23
14       No
No       NicholasCage.png
1984
NicholasCage.png
1980       102
109       Sugarland Express, The
Private Benjamin       Comedy
Mystery       Heard, John
Colman, Ronald       Hayes, Helen
Hayward, Susan       Taylor, Jud
Hathaway, Henry       29
49       No
No       NicholasCage.png
1940
NicholasCage.png
1946       110
98       Loves of Carmen, The
Dick Tracy       Comedy
Drama       Connery, Sean
Prysirr, Geof       Hendrix, Leah Ayres
Henner, Marilu       Heckerling, Amy
Holcomb, Rod       27
87       No
Yes       NicholasCage.png
1960
burtLancaster.png
1976       106
109       Children's Hour, The
Rainmaker, The       Drama
Comedy       Tracy, Spencer
O'Toole, Peter       Hepburn, Katharine
Hepburn, Katharine       Kazan, Elia
Kramer, Stanley       50
51       No
No       johnWayne.png
1981
katharineHepburn.png
1991       101
116       Boom Town
Dragon Seed       Drama
Drama       Tracy, Spencer
Tracy, Spencer       Hepburn, Katharine
Hepburn, Katharine       
       12
31       No
No       NicholasCage.png
1987
NicholasCage.png
1988       163
99       Paris Trout
Souvenir       Drama
Drama       Shaw, Robert
Leadbitter, Bill       Hills, Beverly
Hoak, Clare       Brand, Larry
Taylor, Ray       77
19       No
No       NicholasCage.png
1980
NicholasCage.png
1973       102
94       Rita, Sue & Bob Too
Hawk of Powder River       Western
Drama       Barrymore, John
Webb, Greg       Howard, Barbara
Hubley, Season       Kaczender, George
Ford, John       9
42       No
No       NicholasCage.png
1987
NicholasCage.png
1989       114
110       Loulou
World According to Garp, The       Drama
Science Fiction       Kennedy, George
Tracy, Spencer       Hussey, Ruth
Huston, Anjelica       Coppola, Francis Ford
Mazursky, Paul       5
8       No
No       NicholasCage.png
1991
NicholasCage.png
1990       93
129       Competition, The
Crossing Delancey       Comedy
Drama       Kime, Jeffrey
Thaw, John       Jackson, Glenda
Jackson, Glenda       Frank, Melvin
Russell, Ken       18
76       No
No       NicholasCage.png
1955
Bergman.png
1989       90
132       Mephisto
Easy Virtue       Mystery
Comedy       Ford, Wallace
Davidson, Tommy       Johnson, Anne-Marie
Johnson, Michelle       Donen, Stanley
Cox, Alex       47
44       No
No       NicholasCage.png
1963
brando.png
1991       117
102       Night Train to Katmandu, THe
Port of Call       Drama
Comedy       O'Neal, Ryan
Chapman, Graham       Kahn, Madeline
Kahn, Madeline       Wilder, Gene
Amurri, Franco       19
42       No
No       NicholasCage.png
1988
NicholasCage.png
1983       97
145       Born on the Fourth of July
Awakenings       Drama
Comedy       Allen, Woody
Allen, Woody       Keaton, Diane
Keaton, Diane       Beatty, Warren
Beresford, Bruce       84
54       No
Yes       brando.png
1974
NicholasCage.png
1976       109
86       Play It Again, Sam
Love & Death       Comedy
Comedy       Allen, Woody
Potter, Martin       Keller, Hiram
Keller, Marthe       Avildsen, John G.
Frankenheimer, John       76
36       No
No       NicholasCage.png
1953
johnFord.png
1955       103
113       Rear Window
Woman Who Came Back       Drama
Action       Tracy, Spencer
Jones, Henry       Kelly, Nancy
Kensit, Patsy       Donner, Richard
Herman, Mark       69
       No
No       brando.png
1987
NicholasCage.png
1970       90
96       Dead Calm
Days of Thunder       Action
Comedy       Glanzelius, Anton
Depardieu, Gérard       Kinski, Nastassia
Kinski, Nastassia       Wenders, Wim
Zieff, Howard       73
8       No
No       NicholasCage.png
1987
NicholasCage.png
1986       90
102       Rain People, The
A Year of the Quiet Sun       Drama
Western       Wayne, John
Hogan, Paul       Kozlowski, Linda
Kozlowski, Linda       Faiman, Peter
Wenders, Wim       35
53       No
No       NicholasCage.png
1989
NicholasCage.png
1987       90
110       Mystery Train
Go Tell the Spartans       War
Comedy       Goodman, John
Mori, Masayuki       Kyô, Machiki
Ladd, Diane       Cohen, Martin B.
Coolidge, Martha       4
62       No
No       NicholasCage.png
1990
NicholasCage.png
1985       118
84       Stewardess School
Big Town, The       Drama
Drama       Dillon, Matt
Howell, C. Thomas       Lane, Diane
Lane, Diane       Finch, Charles
Hill, Walter       65
66       No
No       NicholasCage.png
1992
NicholasCage.png
1992       121
58       Crashing Thru
Get Out Your Handkerchiefs       Comedy
Music       Gable, Christopher
Seagal, Steven       LeBrock, Kelly
Leigh, Janet       Hitchcock, Alfred
Sternberg, Josef von       43
36       No
Yes       brando.png
1986
NicholasCage.png
1971       84
128       Christopher Columbus
In Country       Drama
Action       Burton, Richard
Dreyfuss, Richard       Locke, Sondra
Locke, Sondra       Eastwood, Clint
Eastwood, Clint       18
1       No
No       alfredHitchcock.png
1987
NicholasCage.png
1959       88
68       Racketeer
Mr. & Mrs. Smith       Comedy
Drama       Francois Cluzet
Cruise, Tom       Long, Shelley
Longstreth, Emily       Glatter, Lesli Linka
Dell, Stewart       9
31       No
No       sophiaLoren.png
1961
sophiaLoren.png
1954       107
118       Yesterday, Today & Tomorrow
Legend of the Lost       Action
Action       Cassavetes, John
Boyd, Stphen       Loren, Sophia
Loren, Sophia       Mann, Anthony
Mann, Delbert       13
54       No
No       sophiaLoren.png
1977
sophiaLoren.png
1977       105
112       Blood Feud
Sophia Loren, Her Own Story       Drama
Drama       Loggia, Robert
O'Toole, Peter       Loren, Sophia
Loren, Sophia       
       56
75       No
No       NicholasCage.png
1979
NicholasCage.png
1991       118
64       Ape Man, The
Mission, The       Drama
Comedy       Belushi, Jim
Mason, James       Lyon, Sue
MacDowell, Andie       Soderbergh, Steven
Weir, Peter       25
73       No
Yes       NicholasCage.png
1983
JackNicholson.png
1967       99
       Bliss of Mrs. Blossom, The
Postcards from the Edge       Comedy
Western       Eastwood, Clint
Z'Dar, Robert       MacLaren, Fawna
MacMahon, Aline       Howard, William K.
De Winter, Harry       74
54       No
No       NicholasCage.png
1991
NicholasCage.png
1990       60
50       Madonna Live, The Virgin Tour
Madonna, Justify My Love       Music
Music       
Goldthwait, Bob       Madsen, Virginia
Madsen, Virginia       Gibbins, Duncan
Hopper, Dennis       70
50       Yes
No       NicholasCage.png
1980
NicholasCage.png
1949       110
104       Hand, The
Deep Cover       Mystery
Drama       Crawford, Broderick
Eastwood, Clint       Mason, Marsha
Mason, Marsha       Eastwood, Clint
Ross, Herbert       6
62       No
No       NicholasCage.png
1991
NicholasCage.png
1992       101
119       Color of Money, The
Children of a Lesser God       Drama
Comedy       Banderas, Antonio
Banderas, Antonio       Maura, Carmen
Maura, Carmen       Almodóvar, Pedro
Keach, James       69
0       No
No       NicholasCage.png
1990
NicholasCage.png
1992       95
81       Glory Stompers, The
Dances with Wolves       Western
Drama       Jones, James Earl
Hackman, Gene       McDormand, Frances
McGee, Vonetta       Eastwood, Clint
Barbash, Uri       75
6       No
Yes       NicholasCage.png
1989
NicholasCage.png
1983       101
102       Made in Heaven
Top Gun       Action
Drama       Ford, Harrison
Daniels, Jeff       McGillis, Kelly
McGovern, Elizabeth       Benjamin, Richard
Brickman, Marshall       51
18       No
No       NicholasCage.png
1989
NicholasCage.png
1981       91
89       Paths of Glory
Tom Jones       Drama
Comedy       Burns, George
Mason, Jackie       Merrill, Dina
Metcalf, Laurie       Figgis, Mike
Stone, Oliver       78
80       No
No       woody.png
1987
NicholasCage.png
1970       194
127       Man Who Loved Cat Dancing, The
Man Who Shot Liberty Valance, The       Western
Action       Johnson, Don
Reubens, Paul       Miller, Penelope Ann
Mimieux, Yvette       Pal, George
Fosse, Bob       59
79       Yes
No       NicholasCage.png
1977
NicholasCage.png
1989       89
100       Fiendish Plot of Dr. Fu Manchu, The
Four American Composers       Music
Action       Hayden, Sterling
Garr, Eddie       Monroe, Marilyn
Monroe, Marilyn       Negulesco, Jean
       27
25       No
No       NicholasCage.png
1986
NicholasCage.png
1989       110
102       No Small Affair
Ghost       Science Fiction
Drama       Lowe, Rob
Moore, Dudley       Moore, Mary Tyler
Moore, Terry       Lewis, Joseph H.
Mann, Daniel       50
66       No
No       NicholasCage.png
1955
NicholasCage.png
1988       
90       Producers, The
Front, The       Drama
Drama       Annese, Frank
Biehn, Michael       Mueller, Maureen
Muldaur, Diana       Sturges, John
Vorhaus, Bernard       38
29       No
No       johnWayne.png
1955
alfredHitchcock.png
1987       60
112       Hud
Operation Pacific       War
Horror       Brenner, Barry
Brando, Marlon       Negami, Jun
Negoda, Natalya       
Dearden, Basil       75
58       No
No       burtLancaster.png
1923
NicholasCage.png
1980       109
110       Star Trek VI: The Undiscovered Country
Star Trek V: The Final Frontier       Action
Action       Metzler, Jim
Stallone, Sylvester       Nielsen, Brigitte
Nielsen, Brigitte       Scott, Tony
       40
65       No
No       NicholasCage.png
1958
alfredHitchcock.png
1987       91
93       Crack-Up
Bury Me Not on the Lone Prairie       Western
Western       Brown, Johnny Mack
Brown, Johnny Mack       O'Day, Nell
O'Hara, Maureen       Ford, John
Ford, John       64
29       No
No       alfredHitchcock.png
1971
johnWayne.png
1992       153
72       After the Rehearsal
Big Jim McLain       Western
Western       Ford, Glenn
Brando, Marlon       O'Malley, Pat
Ondra, Anny       Hitchcock, Alfred
Forbes, Bryan       40
32       No
No       NicholasCage.png
1982
NicholasCage.png
1985       108
116       Mister Roberts
Z       Drama
Drama       Wilby, James
Williamson, Nicol       Parfitt, Judy
Parillaud, Anne       Besson, Luc
Bergman, Andrew       53
10       No
No       NicholasCage.png
1986
NicholasCage.png
1984       95
95       Torn Apart
From the Hip       Comedy
Comedy       DeVito, Danny
Reid, Christopher       Perlman, Rhea
Perrine, Valerie       Clement, Dick
Brooks, Mel       27
12       No
No       NicholasCage.png
1980
NicholasCage.png
1986       107
115       Grease II
Married to the Mob       Comedy
Adventure       Broderick, Matthew
Bridges, Jeff       Pfeiffer, Michelle
Pfeiffer, Michelle       Landis, John
Schepisi, Fred       3
50       No
No       MichellePfeiffer.png
1971
NicholasCage.png
1973       106
360       Little Dorrit
My Best Girl       Drama
Horror       Frid, Jonathan
Irons, Jeremy       Pigg, Alexandra
Pleshette, Suzanne       Daves, Delmer
Greenaway, Peter       28
59       No
No       NicholasCage.png
1988
NicholasCage.png
1990       95
123       Experiment in Terror
Hideaways, The       Comedy
Comedy       O'Toole, Peter
Sellers, Peter       Prentiss, Paula
Prentiss, Paula       Taylor, Jud
Zucker, David       9
50       No
No       NicholasCage.png
1988
NicholasCage.png
1989       94
87       Mistress
Pleasure Palace       Action
Drama       Douglas, Michael
Read, James       Purl, Linda
Questel, Mae       Coppola, Francis Ford
Patterson, Willi       66
35       No
No       NicholasCage.png
1949
johnWayne.png
1974       104
84       Police Academy 6: City under Siege
Police Academy 5: Assignment Miami Beach       Comedy
Comedy       Guttenberg, Steve
Hopkins, Linda       Redd, Vi
Redgrave, Jane       Zinnemann, Fred
Russell, Ken       69
73       No
No       NicholasCage.png
1986
NicholasCage.png
1985       135
104       It Started with a Kiss
Money, The       Drama
Drama       Malkovich, John
Walken, Christopher       Richardson, Natasha
Rigg, Diana       Hunt, Peter R.
Deutch, Howard       75
49       No
No       NicholasCage.png
1986
NicholasCage.png
1987       93
119       Pretty Woman
Flatliners       Drama
Action       Williams, Robin
Brown, Johnny Mack       Robinson, Frances
Rogers, Ginger       
Cimino, Michael       58
59       No
No       NicholasCage.png
1951
alfredHitchcock.png
1979       198
87       To Die Standing
Rodeo Girl       Drama
Western       Newman, Paul
Wayne, John       Ross, Katharine
Ross, Katharine       Taylor, Don
Lynch, David       6
28       No
Yes       NicholasCage.png
1988
woody.png
1992       128
92       Permanent Record
Fisher King, The       Drama
Comedy       Pryor, Richard
Brando, Marlon       Rush, Barbara
Russell, Betsy       Quinn, John
       5
84       No
No       NicholasCage.png
1988
NicholasCage.png
1991       110
109       John Wayne Matinee Double Feature, No. 1
Smallest Show on Earth, The       Comedy
Science Fiction       Quaid, Dennis
Connery, Sean       Ryan, Meg
Ryan, Meg       Patrick, John
Stone, Oliver       60
41       No
No       NicholasCage.png
1991
alfredHitchcock.png
1966       127
213       Exodus
Ballad of Narayama, The       Drama
Mystery       Sheen, Martin
Capolicchio, Lino       Sanda, Dominique
Sanda, Dominique       Haines, Fred
Huston, John       65
26       No
No       NicholasCage.png
1971
clintEastwood.png
1986       103
89       Legend
Buddy System, The       Drama
Drama       Sutherland, Donald
Gray, Charles       Sarandon, Susan
Savelyeva, Lyudmila       Bondarchuk, Sergei
       79
9       No
No       NicholasCage.png
1991
NicholasCage.png
1990       83
       Hells Angels on Wheels
Passenger, The       Drama
Drama       Brando, Marlon
Singer, Marc       Schrage, Lisa
Schön, Margarete       Lang, Fritz
Wendkos, Paul       69
88       No
No       NicholasCage.png
1972
NicholasCage.png
1986       83
123       Bad Boys
Whoopee Boys, The       Comedy
Drama       Bottoms, Timothy
Hessman, Howard       Shields, Brooke
Shields, Brooke       Zeffirelli, Franco
Avildsen, John G.       78
13       No
No       alfredHitchcock.png
1977
NicholasCage.png
1985       56
110       Desiree
Spartacus       Drama
Comedy       Brando, Marlon
Newman, Paul       Simmons, Jean
Sinclair, Madge       Landis, John
Poitier, Sidney       36
3       No
No       NicholasCage.png
1987
NicholasCage.png
1965       128
101       Funny Farm
Lonely Passion of Judith Hearne, The       Drama
Comedy       Caine, Michael
Estevez, Emilio       Smith, Yeardley
Snodgress, Carrie       Eastwood, Clint
Wharmby, Tony       41
29       No
No       NicholasCage.png
1964
NicholasCage.png
1979       88
122       Missing
Picasso Trigger       Action
Action       Moss, Ronn
Connery, Sean       St. John, Jill
Stanwyck, Barbara       Green, Alfred E.
Mate, Rudolph       25
45       Yes
No       NicholasCage.png
1993
NicholasCage.png
1981       111
114       Hang 'em High
Basic Instinct       Mystery
Action       Schwarzenegger, Arnold
Dreyfuss, Richard       Stowe, Madeleine
Strain, Julie       Ouellette, Jean-Paul
Corman, Roger       64
32       No
Yes       merylStreep.png
1988
merylStreep.png
1991       112
183       Deer Hunter, The
Falling in Love       Drama
Comedy       Nicholson, Jack
Russell, Kurt       Streep, Meryl
Streep, Meryl       Pakula, Alan J.
Pollack, Sydney       88
37       No
No       merylStreep.png
1988
merylStreep.png
1989       99
103       Death Becomes Her
Kids & Pesticides       Drama
Music       Montand, Yves
Dreyfuss, Richard       Streisand, Barbra
Streisand, Barbra       Streisand, Barbra
Wyler, William       30
39       No
No       NicholasCage.png
1987
NicholasCage.png
1941       117
102       Sword of the Valiant
Devil's Wanton, The       Drama
Drama       Freeman, Morgan
Tracy, Spencer       Tandy, Jessica
Taylor, Elizabeth       Antonio, Lou
Dmytryk, Edward       74
72       No
No       elizabethTaylor.png
1972
elizabethTaylor.png
1968       109
243       Cleopatra
Father of the Bride       Comedy
Drama       Burton, Richard
Cariou, Len       Taylor, Elizabeth
Taylor, Elizabeth       Stevens, George
Trikonis, Gus       62
79       No
No       elizabethTaylor.png
1972
elizabethTaylor.png
1991       60
       Elizabeth Taylor Collection, The
Ash Wednesday       Drama
Drama       Johnson, Van
Dix, Richard       Taylor, Estelle
Taylor, Joan       Corman, Roger
       60
74       No
No       NicholasCage.png
1935
NicholasCage.png
1988       60
97       Marathon
Fort Apache       Western
Drama       Romero, Cesar
Busker, Ricky       Thayer, Brynn
Thompson, Andrea       Matthau, Charles
Chapman, Michael       65
16       No
No       NicholasCage.png
1985
NicholasCage.png
1963       80
95       Silence, The
Magician, The       Drama
Drama       Ford, Glenn
Pryor, Richard       Ticotin, Rachel
Tilton, Charlene       
       7
51       No
No       burtLancaster.png
1941
NicholasCage.png
1939       80
95       Dark Command
Peggy Sue Got Married       Drama
War       De Niro, Robert
Nicholson, Jack       Turner, Kathleen
Turner, Kathleen       Reiner, Carl
Russell, Ken       4
68       No
No       NicholasCage.png
1988
NicholasCage.png
1955       117
98       Another Time, Another Place
Cannibal Women in the Avocado Jungle of Death       Comedy
Comedy       Jackson, Barry
Dullea, Keir       Tyzack, Margaret
Ullman, Liv       Bergman, Ingmar
Bergman, Ingmar       3
37       No
No       Bergman.png
1984
NicholasCage.png
1957       147
158       Where Eagles Dare
Teen Wolf       Drama
Action       Davi, Robert
Bottoms, Timothy       Wagner, Lindsay
Valberg, Brigitta       Bergman, Ingmar
Bertolucci, Bernardo       45
47       No
No       NicholasCage.png
1967
paulNewman.png
1988       89
85       Crash & Burn
After Dark My Sweet       Mystery
Adventure       Brando, Marlon
Rowe, Nicholas       Ward, Sophie
Warner, Julie       Caton-Jones, Michael
Roth, Bobby       71
82       No
No       weaver.png
1997
weaver.png
1979       117
97       One Woman or Two
Soggy Bottom U. S. A.       Comedy
Drama       Moriarty, Michael
Buchholz, Horst       Wedgeworth, Ann
Welch, Raquel       Colla, Richard A.
De Filippo, Eduardo       70
67       No
No       NicholasCage.png
1969
NicholasCage.png
1975       90
106       Bandolero!
Last of Sheila, The       Mystery
Drama       Borgnine, Ernest
Jones, Tom       Welch, Raquel
Venora, Diane       Eastwood, Clint
       82
74       No
Yes       NicholasCage.png
1990
johnFord.png
1987       106
91       Start the Revolution Without Me
Major League       Comedy
Drama       Fox, Michael J.
Patric, Jason       Wiest, Dianne
Wiest, Dianne       Seidelman, Susan
Coppola, Francis Ford       59
39       Yes
No       NicholasCage.png
1980
NicholasCage.png
1989       91
83       Killing, The
Cahill, United States Marshal       Western
Horror       Garfield, John David
Malkovich, John       Winger, Debra
Winger, Debra       Hackford, Taylor
Rafelson, Bob       54
39       No
No       NicholasCage.png
1965
NicholasCage.png
1955       109
90       Tentacles
Scalphunters, The       Western
Drama       Sweeney, D. B.
Eastwood, Clint       Volonte, Gian Maria
Von Zerneck, Danielle       Betnel, Jonathan
Edwards, Blake       88
9       No
No       seanConnery.png
1955
NicholasCage.png
1961       153
110       Trash
A Big Hand for the Little Lady       Comedy
Comedy       Connery, Sean
Malkovich, John       Woodward, Joanne
Woodward, Joanne       Newman, Paul
Newman, Paul       32
54       No
No       brando.png
1993
paulNewman.png
1991       144
108       Shadow of a Doubt
Men, The       Drama
Mystery       Wilding, Michael
Stewart, James       Wyman, Jane
York, Susannah       Miles, Christopher
Simon, S. Sylvan       57
69       No
No       NicholasCage.png
1947
Bergman.png
1990       92
94       Vera Cruz
Apache       Western
Drama       Lancaster, Burt
Wilder, Gene       
       Allen, Craig
Almodóvar, Pedro       73
34       No
No       johnWayne.png
1986
seanConnery.png
1988       92
85       Torment
Pelle the Conqueror       Drama
Drama       Hutton, Timothy
Brando, Marlon       
       Bertolucci, Bernardo
Bertolucci, Bernardo       35
72       No
No       NicholasCage.png
1991
NicholasCage.png
1963       113
141       One Eyed Jacks
Swing It, Sailor!       Comedy
Drama       Sutherland, Donald
Chaplin, Charles       
       Cimino, Michael
Clair, Rene       60
68       No
No       NicholasCage.png
1979
brando.png
1990       94
81       Terror, The
Raven, The       Horror
Horror       Hampton, Paul
Cage, Nicolas       
       De Bello, John
De Bello, John       47
7       Yes
No       NicholasCage.png
1989
NicholasCage.png
1990       94
130       Bounty, The
Little Prince, The       Music
Western       Douglas, Kirk
Eastwood, Clint       
       Fanaka, Jamaa
Fellini, Federico       29
40       No
No       johnFord.png
1945
johnFord.png
1991       125
59       Law of the Golden West
Pioneer Marshal       Western
Western       Hale, Monte
Hale, Monte       
       Ford, Philip
Ford, Philip       18
61       No
No       NicholasCage.png
1983
NicholasCage.png
1971       104
114       To Live & Die in L. A.
Ferry to Hong Kong       Drama
Comedy       Murphy, Eddie
Cleese, John       
       Guest, Val
Guney, Yilmaz       53
75       No
No       NicholasCage.png
1953
burtLancaster.png
1960       122
76       Flight to Fury
Ride in the Whirlwind       Western
Western       Taylor, Rod
Clift, Montgomery       
       Hitchcock, Alfred
Hitchcock, Alfred       12
50       No
No       alfredHitchcock.png
1937
alfredHitchcock.png
1976       95
124       Chariots of Fire
Monty Python Live at the Hollywood Bowl       Comedy
Drama       Connery, Sean
Stallone, Sylvester       
       Hutton, Brian G.
Irvin, John       63
30       No
No       NicholasCage.png
1986
NicholasCage.png
1984       141
85       Survival Zone
Monty Python's Life of Brian       Comedy
Comedy       Cleese, John
Finch, Peter       
       Kane, Joseph
Kazan, Elia       86
36       No
No       NicholasCage.png
1937
NicholasCage.png
1956       106
121       Apprenticeship of Duddy Kravitz, The
A Clockwork Orange       Science Fiction
War       Modine, Matthew
Fujita, Susumu       
       Kurosawa, Akira
Kurosawa, Akira       31
65       No
No       NicholasCage.png
1951
NicholasCage.png
1962       96
200       Seven Samurai
Throne of Blood       Drama
Action       Mifune, Toshiro
Nakadai, Tatsuya       
       Kurosawa, Akira
Lambert, Bruce       26
       No
No       NicholasCage.png
1946
NicholasCage.png
1920       137
90       Human Desire
Spies       Drama
Drama       Klein-Rogge, Rudolf
Tracy, Spencer       
       Lee, Spike
Lennon, Biddy W.       35
6       No
No       clintEastwood.png
1944
spencerTracy.png
1982       93
109       Juggernaut
Good Morning, Vietnam       Comedy
Drama       Cagney, James
Marvin, Lee       
       Logan, Joshua
Lucidi, Maurizio       25
34       No
No       NicholasCage.png
1944
johnWayne.png
1988       75
90       Eraserhead
Ladykillers, The       Comedy
Drama       Lancaster, Burt
Cleese, John       
       Malle, Louis
Mate, Rudolph       54
69       No
No       johnWayne.png
1967
NicholasCage.png
1980       99
111       Chisum
Hunt for Red October, The       Drama
Drama       Neckar, Vaclav
Lancaster, Burt       
       Miller, David
Minnelli, Vincente       52
68       No
No       NicholasCage.png
1989
NicholasCage.png
1973       93
90       Good Father, The
Sometimes a Great Notion       Drama
Comedy       Arkin, Alan
Jarratt, John       
       Nicholson, Arch
Nigh, William       71
57       No
No       NicholasCage.png
1990
NicholasCage.png
1989       94
116       Orphans
All the President's Men       Drama
Action       Bergman, Peter
Holden, William       
       Penn, Leo
Perier, Etienne       70
26       No
No       NicholasCage.png
1972
NicholasCage.png
1970       112
122       Magnum Force
Cyborg       Action
Comedy       Sellers, Peter
Martin, Pepper       
       Rademakers, Fons
Ray, Nicholas       23
49       No
No       NicholasCage.png
1972
NicholasCage.png
1983       102
96       Roadhouse Sixty-Six
Burning Poles, Cecil Taylor in Performance       Music
Action       Hubley, Whip
Martin, Steve       
       Russell, Ken
Rydell, Mark       58
22       No
Yes       NicholasCage.png
1969
NicholasCage.png
1985       131
112       Maitresse
Disorderlies       Comedy
Drama       De Niro, Robert
Keillor, Garrison       
       Sherman, George
Sherman, George       33
75       No
No       clintEastwood.png
1979
clintEastwood.png
1948       88
132       Midway
Indiana Jones & the Last Crusade       Action
Mystery       Weaver, Dennis
Poitier, Sidney       
       Stiller, Mauritz
Stone, Oliver       8
79       No
No       NicholasCage.png
1971
clintEastwood.png
1985       104
96       Boys Town
Erasure, Live Wild!       Music
Drama       Gazzara, Ben
Dean, Eddie       
       Taylor, Ray
Taylor, Ray       53
43       No
No       NicholasCage.png
1947
NicholasCage.png
1949       66
53       Return of the Lash
Mystery of the Hooded Horsemen       Western
Western       Ritter, Tex
Wilson, Whip       
       Taylor, Roderick
Thomas, Gerald       5
7       No
No       NicholasCage.png
1960
johnWayne.png
1986       91
109       Les Comperes
Dead Poets Society       Drama
Drama       Welles, Orson
Johnson, Van       
       Wenders, Wim
Werner, Peter       17
51       No
No       paulNewman.png
1955
NicholasCage.png
1962       182
       Death Valley Days, Deadly Decision
Monty Python's Flying Circus       Comedy
Comedy       Chapman, Graham
Chapman, Graham       
       
       82
86       No
No       NicholasCage.png
1964
seanConnery.png
1993       108
60       Hollywood Mavericks
Live at Harrah's       Comedy
Mystery       Curtis, Tony
De Niro, Robert       
       
       21
11       No
No       clintEastwood.png
1992
clintEastwood.png
1992       163
60       Rawhide, Premiere Episode
Tightrope       Mystery
Drama       Everett, Rupert
Fonda, Henry       
       
       26
54       No
No       NicholasCage.png
1991
NicholasCage.png
1989       116
60       Maverick, Duel at Sundown
Shakespeare Series       Drama
Western       Harris, Richard
Hitchcock, Alfred       
       
       84
60       No
No       NicholasCage.png
1991
NicholasCage.png
1990       45
112       Conversation Piece
Crimson Pirate, The       Action
Mystery       Lancaster, Burt
Lancaster, Burt       
       
       67
3       No
No       lynch.png
1986
NicholasCage.png
1989       90
98       L. A. Story
Steve Martin Live!       Comedy
Comedy       Martin, Steve
Matheson, Tim       
       
       29
24       No
No       NicholasCage.png
1989
NicholasCage.png
1991       99
91       Mummy's Revenge, The
Harper       Mystery
Western       Newman, Paul
Newman, Paul       
       
       28
3       No
No       NicholasCage.png
1987
NicholasCage.png
1991       60
       Death Valley Days, No Gun Behind His Badge
Salsa: The Motion Picture       Drama
War       Scott, George C.
Seagal, Steven       
       
       80
72       No
No       NicholasCage.png
1991
NicholasCage.png
1960       91
121       Pink Panther, The
Two-Way Stretch       Comedy
Horror       Slaughter, Tod
Tamblyn, Russ       
       
       38
31       No
No       NicholasCage.png
1992
NicholasCage.png
1967       105
93       Cry of the Innocent
Edison the Man       Drama
Drama       Tracy, Spencer
Tracy, Spencer       
       
       44
70       No
No       johnWayne.png
1934
johnWayne.png
1932       
210       Hurricane Express, The
In Harm's Way       War
War       Wayne, John
Wayne, John       
       
       3
24       No
No       johnWayne.png
1990
johnWayne.png
1991       
56       King of the Pecos
Lawless Frontier       Western
Western       Wayne, John
Wayne, John       
       
       5
73       No
No       johnWayne.png
1991
johnWayne.png
1993       58
134       Red River
Riders of Destiny       Western
Western       Wayne, John
Wayne, John       
       
       19
18       No
No       NicholasCage.png

]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:39:12 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 62L, 1476C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17Hexit([31m1[m);[2;9H}[3;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[4;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[6;9Hstring x;[7;9Hvector <[32mint[m> column1, column2,column8;[8;9Hvector<string> column3,column4,column5,column6,column7,column10;[9;9H[32mint[m sum=[31m0[m;[10;9H[32mdouble[m average;[11;9H[38;5;130mwhile[m(infile.good()){

               [9Cstring year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,[31m';'[m);[15;11H              cout << year<<[31m"       "[m;[15;49H[K[16;10H               [38;5;130mif[m (!year.empty()){[16;44H[K[17;1H[34m//                              column1.push_back(stoi(year))[m[18;9H}[18;10H[K[19;9H                [38;5;130melse[m{column1.push_back([31m0[m); }[20;1H[K[21;14H           getline(infile, length,[31m';'[m);[22;7H          cout << length<<endl;[23;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[24;57H[K[25;5H            }[25;18H[K[26;5H                    [38;5;130melse[m{column2.push_back([31m0[m);}[26;52H[K[27;1H                       [27;25H[K[28;5H                    getline(infile, title,[31m';'[m);[28;52H[K[29;5H                    column3.push_back(title);[29;50H[K[30;5H                    getline(infile, subject,[31m';'[m);[30;54H[K[31;5H                    column4.push_back(subject);[32;25Hgetline(infile, actor,[31m';'[m);
                        column5.push_back(actor);[34;105H42,12-33      48%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;1H[K[34;105H43,12-33      51%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H44,12-33      55%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H45,12-33      58%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H46,12-33      62%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H47,12-33      65%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;17H[34m//      column8.push_back(stoi(popularity));[m[34;105H[K[34;105H48,12-33      68%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H49,12-33      72%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[31m';'[m);[34;105H[K[34;105H50,12-33      75%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H51,12-33      79%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H52,12-33      82%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;1H[34m//      for (int x:column1){[m[34;105H[K[34;105H53,14-33      86%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;1H[34m//              cout <<x<<endl;[m[34;105H[K[34;105H54,12-33      89%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;1H[34m//      }[m[34;105H[K[34;105H55,12-33      93%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;33H[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H56,12-33      96%[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;17H[1;33r[33;1H
[1;34r[34;105H[K[34;105H57,3-17[7CBot[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [29;28H[34m[106m{[31;9H}[m[34;106H8,23-28[29;28H[?25h[?25l[34;95H~@k[29;28H[34;95H   [30;31H[29;28H[34m{[31;9H}[m[34;106H9,19-31[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [31;9H[29;28H[34m[106m{[31;9H}[m[34;105H60,4-9  [31;9H[?25h[?25l[34;95H~@k[31;9H[34;95H   [32;1H[29;28H[34m{[31;9H}[m[34;106H1,1  [32;1H[?25h[?25l[34;95H~@k[32;1H[34;95H   [33;8H[34;106H2,1-8[33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [33;8H[?25h[?25l[34;95H~@k[33;8H[34;95H   [32;1H[34;106H1,1  [32;1H[?25h[?25l[34;95H~@k[32;1H[34;95H   [31;9H[29;28H[34m[106m{[31;9H}[m[34;106H0,4-9[31;9H[?25h[?25l[34;95H~@k[31;9H[34;95H   [30;31H[29;28H[34m{[31;9H}[m[34;105H59,19-31[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [29;28H[34m[106m{[31;9H}[m[34;106H8,23-28[29;28H[?25h[?25l[34;95H~@k[29;28H[34;95H   [28;17H[29;28H[34m{[31;9H}[m[34;106H7,3-17 [28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [27;33H[34;106H6,12-33[27;33H[?25h[?25l[34;95H~@k[27;33H[34;95H   [26;33H[34;106H5[26;33H[?25h[?25l[34;95H~@k[26;33H[34;95H   [26;34H[34;109H3-34[26;34H[?25h[?25l[34;95H~@k[26;34H[34;95H   [26;35H[34;109H4-35[26;35H[?25h[?25l[34;95H~@k[26;35H[34;95H   [26;36H[34;109H5-36[26;36H[?25h[?25l[34;95H~@k[26;36H[34;95H   [26;37H[34;109H6-37[26;37H[?25h[?25l[34;95H~@k[26;37H[34;95H   [26;38H[34;109H7-38[26;38H[?25h[?25l[34;95H~@k[26;38H[34;95H   [26;39H[34;109H8-39[26;39H[?25h[?25l[34;95H~@k[26;39H[34;95H   [26;40H[34;109H9-40[26;40H[?25h[?25l[34;95H~@k[26;40H[34;95H   [26;41H[34;108H20-41[26;41H[?25h[?25l[34;95H~@k[26;41H[34;95H   [26;42H[34;109H1-42[26;42H[?25h[?25l[34;95H~@k[26;42H[34;95H   [26;43H[34;109H2-43[26;43H[?25h[?25l[34;95H~@k[26;43H[34;95H   [26;44H[34;109H3-44[26;44H[?25h[?25l[34;95H~@k[26;44H[34;95H   [26;45H[34;109H4-45[26;45H[?25h[?25l[34;95H~@k[26;45H[34;95H   [26;46H[34;109H5-46[26;46H[?25h[?25l[34;95H~@k[26;46H[34;95H   [26;47H[34;109H6-47[26;47H[?25h[?25l[34;95H~@k[26;47H[34;95H   [26;48H[34;109H7-48[26;48H[?25h[?25l[34;95H~@k[26;48H[34;95H   [26;49H[34;109H8-49[26;49H[?25h[?25l[34;95H~@k[26;49H[34;95H   [26;48H[34;109H7-48[26;48H[?25h[?25l[34;95Hi[26;48H[34;95H [26;48H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H55,27-48      Bot[26;48H[?25h[?25l[34;109H8-49[26;49H[?25h[?25l'');[26;51H[K[34;109H7-48[26;48H[?25h[?25l\');[34;109H8-49[26;49H[?25h[?25l[97m[101m'\m'[m);[34;109H9-50[26;50H[?25h[?25l'\');[26;52H[K[34;109H8-49[26;49H[?25h[?25l[35m'\n'[m);[34;109H9-50[26;50H[?25h[34;1H[K[26;49H[?25l[34;95H^[[26;49H[34;95H  [26;50H[34;105H55,28-49      Bot[26;49H[?25h[?25l[34;95H:[26;49H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 62L, 1477C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
1990       111
1991       113
1983       104
1979       122
1978       94
1983       140
1984       101
1989       99
1985       104
1990       149
1982       188
1982       117
1966       103
1986       112
1966       103
1985       112
1976       150
1929       84
1963       109
1988       110
1988       101
1981       116
1987       101
1991       105
1988       127
1990       97
1988       108
1980       
1989       88
1979       110
1960       90
1957       91
1956       96
1992       90
1955       86
1955       95
1962       91
1972       91
1958       104
1967       130
1962       
1954       103
1979       121
1983       118
1966       190
1966       125
1986       107
1965       172
1985       55
1984       140
1988       104
1978       106
1992       286
1978       108
1992       95
1987       120
1992       117
1981       106
1992       97
1991       115
1924       110
1991       90
1988       118
1991       115
1986       108
1985       97
1985       104
1971       102
1959       91
1926       126
1987       102
1989       118
1988       141
1926       66
1988       103
1974       128
1955       115
1977       136
1988       100
1991       89
1989       103
1996       96
1992       100
1980       124
1988       90
1982       120
1987       100
1971       101
1957       99
1969       86
1958       77
1959       90
1967       100
1968       113
1964       102
1965       100
1962       134
1964       99
1958       90
1955       90
1962       100
1957       90
1973       87
1987       97
1932       92
1987       104
1982       115
1992       101
1988       83
1989       126
1987       95
1982       101
1992       125
1983       134
1986       117
1989       
1986       108
1991       116
1990       123
1946       93
1984       95
1990       101
1988       96
1989       103
1988       96
1990       127
1942       123
1972       100
1977       102
1982       
1990       105
1948       99
1945       103
1988       76
1985       55
1982       188
1975       120
1971       96
1970       126
1972       90
1935       75
1978       97
1944       114
1958       100
1941       75
1948       100
1982       195
1969       98
1949       117
1946       101
1940       90
1961       120
1956       106
1945       126
1937       91
1938       104
1935       90
1939       87
1938       74
1956       98
1952       110
1953       83
1954       81
1950       107
1969       103
1989       105
1990       90
1987       91
1982       128
1991       91
1970       94
1982       108
1983       60
1984       158
1973       101
1988       172
1972       124
1970       137
1973       116
1952       107
1976       116
1969       94
1991       98
1974       144
1964       112
1977       117
1953       61
1942       88
1968       103
1973       105
1982       123
1990       102
1987       98
1985       105
1993       60
1974       89
1993       65
1958       101
1981       129
1928       139
1992       106
1989       
1985       119
1990       121
1973       129
1958       96
1986       101
1990       135
1948       110
1987       91
1965       123
1980       104
1988       120
1978       114
1988       117
1988       90
1973       122
1975       112
1982       94
1952       109
1954       40
1989       114
1990       102
1971       98
1983       50
1989       80
1987       91
1984       94
1984       99
1989       125
1963       138
1935       64
1988       103
1966       175
1974       313
1977       104
1983       104
1936       84
1986       71
1972       71
1987       119
1990       107
1982       92
1987       
1977       91
1990       
1989       90
1970       26
1943       99
1992       99
1989       113
1987       103
1987       119
1979       128
1984       106
1986       88
1989       90
1975       109
1985       111
1965       122
1963       120
1931       68
1931       110
1967       111
1968       103
1989       91
1987       118
1980       91
1988       119
1990       111
1991       119
1946       105
1987       101
1948       81
1962       91
1989       108
1992       135
1966       99
1986       88
1991       96
1961       66
1990       110
1962       110
1989       90
1991       95
1989       103
1992       60
1977       123
1987       109
1988       108
1954       96
1957       82
1986       120
1979       122
1989       97
1974       124
1990       106
1980       90
1990       94
1971       74
1969       128
1942       18
1948       103
1965       133
1946       110
1939       96
1950       138
1986       96
1990       89
1988       93
1989       104
1956       120
1992       90
1940       120
1949       115
1986       120
1975       89
1942       85
1989       120
1990       93
1967       90
1992       86
1987       86
1989       95
1983       99
1980       103
1986       108
1983       114
1981       135
1977       107
1980       135
1986       120
1989       127
1990       125
1989       113
1988       103
1981       94
1989       89
1990       56
1940       83
1961       190
1989       60
1990       97
1987       130
1991       158
1987       118
1993       30
1991       99
1979       110
1991       110
1991       102
1946       97
1950       86
1949       93
1985       90
1986       87
1992       85
1976       116
1974       131
1975       117
1977       134
1987       97
1990       104
1947       118
1943       
1974       117
1981       117
1980       144
1945       91
1993       92
1979       92
1970       123
1984       105
1991       86
1961       140
1966       103
1974       127
1985       96
1967       103
1993       53
1992       97
1987       94
1987       94
1956       101
1985       84
1984       85
1992       108
1986       103
1979       115
1986       95
1981       96
1936       70
1978       450
1990       103
1992       90
1988       95
1987       95
1984       112
1991       106
1977       113
1981       116
1979       110
1989       118
1989       101
1980       124
1977       121
1983       132
1991       104
1956       99
1957       120
1931       
1990       89
1972       129
1979       122
1986       100
1971       114
1979       113
1965       97
1991       
1940       130
1944       96
1973       87
1992       85
1989       83
1990       94
1983       95
1991       118
1988       98
1972       92
1988       
1955       
1989       103
1987       92
1934       85
1931       74
1930       92
1926       109
1928       90
1935       96
1936       110
1931       91
1929       100
1932       112
1931       84
1939       108
1933       97
1928       96
1925       125
1929       74
1932       71
1930       76
1962       105
1982       116
1989       86
1953       120
1979       120
1975       124
1987       93
1989       120
1975       111
1979       89
1986       122
1959       102
1954       108
1961       134
1983       109
1988       100
1987       102
1986       120
1978       117
1988       134
1966       95
1964       51
1988       
1979       180
1991       
1932       66
1986       120
1990       126
1988       115
1992       133
1991       76
1988       99
1991       136
1984       108
1986       105
1969       125
1991       186
1990       
1992       99
1985       100
1983       82
1984       93
1989       
1987       107
1982       117
1987       126
1992       111
1989       89
1938       298
1936       89
1976       99
1988       88
1983       93
1987       96
1989       87
1991       96
1986       110
1987       93
1989       104
1970       94
1984       100
1978       112
1982       109
1972       109
1987       112
1974       103
1992       102
1986       106
1984       100
1980       102
1974       109
1980       110
1991       115
1931       95
1972       78
1964       132
1952       98
1948       87
1940       81
1946       110
1948       98
1990       105
1964       130
1987       85
1984       90
1985       95
1949       84
1964       170
1960       123
1976       106
1961       109
1956       121
1952       95
1968       134
1991       132
1967       108
1957       153
1975       107
1981       109
1991       101
1991       116
1991       145
1991       115
1991       113
1991       112
1991       113
1992       95
1986       114
1987       112
1988       163
1991       99
1988       87
1966       120
1986       90
1989       83
1943       265
1992       88
1987       95
1980       99
1973       102
1987       94
1947       56
1928       148
1986       90
1987       105
1934       80
1950       104
1991       89
1987       94
1989       114
1980       110
1982       136
1980       106
1940       127
1987       112
1989       121
1992       102
1932       65
1991       108
1990       93
1980       129
1988       97
1982       120
1987       89
1973       103
1970       129
1988       89
1986       100
1955       108
1989       90
1981       132
1927       60
1937       59
1991       83
1983       90
1987       86
1990       131
1986       100
1963       99
1991       117
1988       102
1948       100
1973       103
1983       97
1975       91
1990       108
1977       89
1955       67
1988       103
1983       97
1989       145
1991       120
1977       94
1979       96
1981       195
1986       105
1977       136
1972       175
1974       201
1976       109
1972       86
1975       82
1973       88
1970       130
1980       117
1977       143
1977       124
1972       98
1953       116
1955       103
1954       113
1945       69
1939       101
1956       129
1989       113
1992       79
1927       62
1978       145
1987       90
1970       90
1989       96
1990       107
1987       101
1983       
1984       150
1984       96
1987       95
1989       104
1987       90
1986       90
1969       102
1984       106
1935       54
1990       98
1986       98
1977       127
1989       119
1987       88
1989       86
1987       90
1990       110
1978       114
1986       89
1953       94
1969       80
1988       98
1981       119
1988       116
1990       101
1985       118
1986       84
1987       109
1983       94
1983       91
1990       94
1989       93
1990       115
1988       127
1992       128
1992       121
1949       58
1978       109
1971       137
1990       100
1960       109
1957       112
1987       95
1951       122
1986       93
1971       84
1985       128
1989       116
1978       132
1974       90
1980       116
1977       109
1986       105
1938       96
1987       95
1959       88
1929       68
1941       95
1986       132
1982       101
1987       114
1991       60
1991       94
1960       101
1961       100
1954       107
1963       118
1957       109
1978       111
1964       188
1961       172
1958       114
1953       92
1959       
1977       91
1977       105
1979       112
1991       145
1990       
1991       130
1992       116
1986       141
1986       94
1992       98
1979       85
1991       118
1943       64
1986       125
1991       102
1962       150
1989       101
1990       107
1988       95
1979       129
1983       132
1967       99
1968       
1990       101
1970       105
1992       84
1939       85
1988       100
1991       118
1992       60
1991       40
1990       60
1987       50
1990       5
1991       16
1988       83
1986       103
1990       120
1974       124
1988       85
1980       94
1949       110
1981       104
1989       81
1955       92
1986       130
1986       130
1977       110
1991       113
1981       86
1991       144
1992       101
1986       119
1986       119
1986       
1989       88
1980       86
1989       100
1992       89
1990       92
1990       110
1992       95
1967       81
1990       181
1987       130
1988       120
1975       130
1988       109
1991       98
1988       110
1989       109
1983       101
1987       102
1986       109
1985       112
1988       111
1984       109
1983       98
1988       106
1965       199
1989       105
1981       91
1957       89
1964       120
1975       103
1988       98
1990       117
1991       206
1991       97
1991       87
1987       118
1970       194
1973       127
1962       123
1989       102
1988       90
1960       103
1972       128
1981       97
1976       97
1977       137
1989       89
1980       100
1991       240
1950       112
1992       61
1953       95
1983       
1991       94
1987       109
1986       94
1989       110
1984       102
1990       127
1986       113
1982       107
1948       89
1952       99
1974       117
1970       99
1955       100
1988       
1968       90
1976       94
1987       86
1988       91
1974       111
1941       85
1990       102
1940       105
1955       100
1987       60
1963       112
1951       111
1987       83
1956       124
1992       88
1970       91
1991       108
1988       83
1923       57
1980       109
1991       110
1989       107
1991       85
1986       87
1987       103
1990       90
1950       93
1992       112
1958       128
1987       91
1946       93
1941       57
1940       57
1941       56
1992       137
1950       105
1957       107
1939       94
1971       110
1992       153
1983       72
1952       90
1969       101
1953       79
1929       129
1978       126
1981       104
1986       98
1982       92
1985       108
1955       116
1969       127
1987       139
1969       114
1991       117
1993       95
1988       90
1976       128
1986       94
1984       95
1990       95
1986       112
1984       102
1992       100
1986       89
1978       88
1989       122
1979       94
1980       180
1986       107
1982       115
1989       104
1985       121
1989       114
1985       115
1991       124
1988       116
1989       74
1971       108
1973       106
1988       360
1927       78
1989       93
1990       89
1962       119
1992       121
1991       88
1988       94
1988       96
1990       95
1962       123
1972       105
1965       108
1965       108
1983       98
1988       90
1990       106
1988       107
1988       94
1989       94
1987       87
1992       
1970       100
1990       93
1991       119
1987       97
1987       103
1989       122
1949       100
1974       104
1989       84
1988       90
1986       84
1991       60
1977       100
1971       111
1984       90
1990       97
1986       104
1985       135
1993       104
1989       88
1987       153
1991       102
1969       135
1986       96
1987       90
1943       60
1986       98
1987       93
1990       119
1991       111
1991       142
1940       56
1992       53
1990       106
1986       111
1992       96
1951       101
1979       198
1991       87
1980       92
1969       110
1968       121
1980       92
1986       120
1989       110
1976       90
1988       81
1992       128
1988       92
1992       138
1991       98
1958       167
1988       89
1990       98
1947       96
1990       109
1988       91
1991       110
1939       109
1988       81
1987       120
1988       97
1990       102
1991       135
1990       98
1972       99
1991       135
1966       127
1992       213
1982       128
1985       96
1971       90
1974       105
1973       100
1968       105
1970       107
1971       102
1986       103
1986       89
1984       110
1989       97
1975       105
1968       360
1992       96
1991       90
1979       90
1991       80
1990       83
1990       
1975       118
1973       127
1987       155
1924       95
1966       102
1986       90
1990       
1972       100
1986       83
1983       123
1986       82
1971       118
1988       93
1981       115
1976       90
1988       103
1936       77
1977       105
1985       56
1954       110
1960       185
1955       150
1992       95
1988       116
1963       93
1987       99
1986       93
1987       110
1965       128
1988       101
1988       120
1978       103
1986       97
1985       116
1990       88
1986       90
1985       88
1964       101
1979       88
1982       122
1989       99
1987       97
1990       
1933       72
1992       95
1985       117
1986       96
1993       103
1981       111
1967       114
1992       123
1990       113
1987       115
1992       104
1967       85
1987       135
1979       
1988       
1991       112
1978       183
1984       106
1986       108
1983       131
1982       151
1985       161
1981       127
1985       124
1988       122
1989       99
1992       103
1991       28
1970       129
1987       100
1983       134
1968       151
1990       97
1970       140
1987       
1941       117
1984       102
1949       78
1989       99
1991       111
1983       105
1957       173
1975       101
1967       109
1972       110
1968       109
1963       243
1950       
1992       130
1977       110
1956       201
1985       94
1943       90
1993       76
1972       108
1991       60
1991       
1973       99
1991       117
1931       125
1992       83
1984       
1988       101
1991       95
1935       234
1988       60
1980       97
1948       127
1937       100
1987       91
1988       85
1983       91
1987       93
1990       87
1985       116
1963       80
1963       95
1959       100
1961       154
1986       99
1989       88
1990       110
1989       109
1986       221
1941       94
1939       80
1940       95
1986       103
1989       84
1985       130
1983       90
1984       101
1985       106
1984       106
1988       121
1955       117
1958       98
1988       90
1986       91
1968       139
1966       81
1973       
1968       88
1969       101
1984       96
1957       147
1968       158
1985       95
1990       88
1973       
1959       88
1970       97
1971       102
1981       88
1967       127
1988       89
1990       85
1991       114
1992       121
1986       109
1991       104
1988       96
1986       137
1992       115
1997       109
1979       117
1985       97
1984       96
1973       96
1974       82
1972       92
1966       101
1967       107
1977       120
1969       110
1975       90
1968       106
1973       119
1972       87
1990       
1988       161
1955       60
1987       88
1966       126
1990       92
1987       106
1970       91
1989       107
1990       108
1987       97
1989       93
1974       114
1973       112
1953       96
1980       111
1989       91
1956       83
1973       102
1989       90
1992       139
1982       125
1987       101
1986       116
1970       90
1965       106
1955       109
1977       90
1968       100
1992       96
1964       102
1985       94
1991       160
1956       119
1979       105
1955       111
1961       153
1970       110
1966       95
1966       104
1987       134
1989       117
1968       102
1961       98
1960       135
1993       
1991       144
1943       108
1950       85
1950       110
1947       103
1975       93
1949       90
1987       103
1993       75
1947       87
1990       92
1953       94
1954       91
1977       146
1979       119
1954       30
1987       100
1966       103
1962       183
1986       128
1988       92
1986       85
1988       138
1981       118
1991       102
1987       164
1962       100
1983       90
1989       91
1991       105
1963       113
1961       141
1937       61
1987       94
1936       87
1991       114
1931       87
1979       95
1984       90
1979       153
1990       94
1963       81
1963       86
1975       87
1986       97
1991       87
1979       87
1987       119
1986       91
1989       90
1990       94
1984       130
1974       89
1975       94
1982       136
1987       91
1993       
1966       107
1990       86
1945       135
1991       125
1949       59
1949       60
1949       60
1950       60
1948       59
1948       60
1948       59
1968       73
1983       112
1971       104
1985       114
1961       113
1983       69
1984       77
1958       83
1982       111
1989       150
1988       84
1953       92
1960       122
1966       76
1966       82
1970       93
1953       95
1935       88
1969       126
1930       95
1954       123
1937       80
1976       95
1981       124
1982       81
1975       129
1981       117
1970       146
1989       109
1990       96
1985       82
1986       107
1984       141
1992       85
1979       94
1983       107
1971       121
1945       82
1952       112
1968       133
1990       90
1937       71
1956       106
1974       121
1971       138
1991       117
1943       82
1991       97
1946       110
1960       152
1951       166
1951       83
1962       96
1955       200
1957       110
1961       110
1980       161
1952       134
1987       90
1986       90
1926       139
1946       106
1920       137
1954       90
1928       130
1933       120
1991       95
1990       129
1989       30
1989       55
1991       130
1944       139
1982       93
1974       109
1987       120
1945       94
1969       161
1964       105
1976       92
1984       83
1987       85
1944       100
1988       75
1978       90
1955       87
1957       97
1971       88
1984       92
1991       89
1970       89
1940       90
1967       85
1980       99
1970       111
1990       135
1966       123
1973       91
1942       101
1991       87
1982       92
1987       90
1989       118
1973       93
1987       90
1971       115
1970       117
1988       90
1981       94
1935       60
1988       92
1990       97
1990       
1989       94
1987       116
1976       139
1987       73
1969       144
1988       92
1993       
1988       100
1975       112
1972       116
1970       112
1973       122
1989       86
1979       108
1983       86
1986       140
1951       102
1985       92
1980       123
1972       92
1983       102
1984       96
1991       60
1987       98
1990       96
1990       103
1972       128
1985       95
1970       170
1969       123
1985       131
1976       112
1987       86
1991       
1991       60
1938       55
1938       55
1982       92
1971       109
1979       112
1948       88
1976       132
1990       126
1993       90
1991       193
1924       123
1986       120
1963       89
1971       100
1971       88
1985       104
1938       96
1990       59
1982       150
1947       61
1947       56
1937       60
1992       54
1947       58
1947       53
1949       66
1992       53
1937       60
1937       60
1949       59
1991       102
1957       73
1953       79
1982       136
1960       164
1986       91
1985       109
1990       128
1952       93
1949       119
1976       176
1990       98
1982       111
1956       97
1955       57
1962       182
1989       
1986       60
1986       60
1986       59
1986       58
1990       
1982       101
1981       127
1964       
1993       108
1992       60
1990       60
1992       52
1977       255
1989       90
1972       15
1991       
1991       
1992       92
1992       163
1959       60
1992       118
1987       95
1992       165
1992       
1993       88
1986       119
1993       102
1991       
1989       116
1959       60
1983       
1973       105
1992       72
1990       
1982       208
1975       85
1953       120
1991       128
1990       45
1992       112
1992       105
1992       83
1992       166
1992       133
1986       49
1990       92
1990       50
1986       52
1989       90
1991       98
1986       60
1974       60
1993       
1992       101
1989       
1983       91
1990       98
1989       
1991       99
1953       91
1992       121
1992       102
1989       
1992       136
1968       
1990       
1989       61
1987       60
1991       60
1989       
1988       96
1991       80
1991       91
1956       27
1953       75
1975       95
1991       101
1991       101
1960       91
1991       121
1991       84
1988       65
1958       92
1989       90
1979       90
1942       253
1992       
1992       87
1967       105
1980       93
1991       108
1991       101
1991       92
1957       60
1992       56
1993       
1939       55
1934       54
1932       
1932       210
1965       165
1991       
1992       
1991       
1939       112
1939       110
1938       110
1990       
1991       
1991       56
1992       59
1991       52
1991       56
1934       54
1992       112
1993       
1991       54
1991       53
1993       58
1992       134
1991       52
1990       
1932       226
1989       103
1988       78
1977       75
1991       65
       
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ [Ag++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:40:06 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 62L, 1477C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hgetline(infile, year,[31m';'[m);[2;25Hcout << year<<[31m"       "[m;[3;25H[38;5;130mif[m (!year.empty()){
[34m//                              column1.push_back(stoi(year))[m[5;9H}[6;25H[38;5;130melse[m{column1.push_back([31m0[m); }[8;25Hgetline(infile, length,[31m';'[m);[9;17Hcout << length<<endl;[10;25H[38;5;130mif[m(!length.empty()){
[34m//                      column2.push_back(stoi(length));[m[12;17H}
               [9C[38;5;130melse[m{column2.push_back([31m0[m);}
                        [14;26H[K[15;11H              getline(infile, title,[31m';'[m);[15;52H[K[16;10H               column3.push_back(title);[16;50H[K[17;11H              getline(infile, subject,[31m';'[m);[18;10H               column4.push_back(subject);[19;9H                getline(infile, actor,[31m';'[m);
                        column5.push_back(actor);[21;14H           getline(infile, actress,[31m';'[m);[22;7H                  column6.push_back(actress);[23;25Hgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[24;53H[K[25;5H                    getline(infile,popularity,[31m';'[m);[25;56H[K[26;5H            [34m//      column8.push_back(stoi(popularity));[m[26;61H[K[27;1H                        getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[28;53H[K[29;5H                    column10.push_back(image);
                }[30;18H[K[31;1H[34m//      for (int x:column1){
//              cout <<x<<endl;
//      }[m[33;10H[K[34;105H55,28-49      93%[28;49H[?25h[?25l[34;95H~@k[28;49H[34;95H   [27;49H[34;106H4[27;49H[?25h[?25l[34;95H~@k[27;49H[34;95H   [26;49H[34;106H3,30[26;49H[?25h[?25l[34;95H~@k[26;49H[34;95H   [25;49H[34;106H2,28[25;49H[?25h[?25l[34;95H~@k[25;49H[34;95H   [24;49H[34;106H1[24;49H[?25h[?25l[34;95H~@k[24;49H[34;95H   [23;49H[34;106H0[23;49H[?25h[?25l[34;95H~@k[23;49H[34;95H   [22;49H[34;105H49[22;49H[?25h[?25l[34;95H~@k[22;49H[34;95H   [21;49H[34;106H8[21;49H[?25h[?25l[34;95H~@k[21;49H[34;95H   [20;49H[34;106H7[20;49H[?25h[?25l[34;95H~@k[20;49H[34;95H   [19;49H[34;106H6[19;49H[?25h[?25l[34;95H~@k[19;49H[34;95H   [18;49H[34;106H5[18;49H[?25h[?25l[34;95H~@k[18;49H[34;95H   [17;49H[34;106H4[17;49H[?25h[?25l[34;95H~@k[17;49H[34;95H   [16;49H[34;106H3[16;49H[?25h[?25l[34;95H~@k[16;49H[34;95H   [15;49H[34;106H2[15;49H[?25h[?25l[34;95H~@k[15;49H[34;95H   [14;24H[34;106H1,3-24 [14;24H[?25h[?25l[34;95H~@k[14;24H[34;95H   [13;49H[106m([1C)[m[34;106H0,28-49[13;49H[?25h[?25l[34;95H~@k[13;49H[34;95H   [12;17H[10;44H[106m{[12;17H}[m[13;47H([1C)[34;105H39,3-17 [12;17H[?25h[?25l[34;95H~@k[12;17H[34;95H   [11;49H[10;44H{[12;17H}[34;106H8,30-49[11;49H[?25h[?25l[34;95H~@k[11;49H[34;95H   [11;48H[34;108H29-48[11;48H[?25h[?25l[34;95H~@k[11;48H[34;95H   [11;47H[34m[106m([6C)[m[34;109H8-47[11;47H[?25h[?25l[34;95H~@k[11;47H[34;95H   [11;46H[1C[34m(length)[m[34;109H7-46[11;46H[?25h[?25l[34;95H~@k[11;46H[34;95H   [11;45H[34;109H6-45[11;45H[?25h[?25l[34;95H~@k[11;45H[34;95H   [11;44H[34;109H5-44[11;44H[?25h[?25l[34;95H~@k[11;44H[34;95H   [11;43H[34;109H4-43[11;43H[?25h[?25l[34;95H~@k[11;43H[34;95H   [11;42H[34m[106m([12C)[m[34;109H3-42[11;42H[?25h[?25l[34;95H~@k[11;42H[34;95H   [11;41H[1C[34m([12C)[m[34;109H2-41[11;41H[?25h[?25l[34;95H~@k[11;41H[34;95H   [11;40H[34;109H1-40[11;40H[?25h[?25l[34;95H~@k[11;40H[34;95H   [11;39H[34;109H0-39[11;39H[?25h[?25l[34;95H~@k[11;39H[34;95H   [11;38H[34;108H19-38[11;38H[?25h[?25l[34;95H~@k[11;38H[34;95H   [11;37H[34;109H8-37[11;37H[?25h[?25l[34;95H~@k[11;37H[34;95H   [11;36H[34;109H7-36[11;36H[?25h[?25l[34;95H~@k[11;36H[34;95H   [11;35H[34;109H6-35[11;35H[?25h[?25l[34;95H~@k[11;35H[34;95H   [11;34H[34;109H5-34[11;34H[?25h[?25l[34;95H~@k[11;34H[34;95H   [11;33H[34;109H4-33[11;33H[?25h[?25l[34;95H~@k[11;33H[34;95H   [11;32H[34;109H3-32[11;32H[?25h[?25l[34;95H~@k[11;32H[34;95H   [11;31H[34;109H2-31[11;31H[?25h[?25l[34;95H~@k[11;31H[34;95H   [11;30H[34;109H1-30[11;30H[?25h[?25l[34;95H~@k[11;30H[34;95H   [11;29H[34;109H0-29[11;29H[?25h[?25l[34;95H~@k[11;29H[34;95H   [11;28H[34;108H9-28 [11;28H[?25h[?25l[34;95H~@k[11;28H[34;95H   [11;27H[34;108H8-27[11;27H[?25h[?25l[34;95H~@k[11;27H[34;95H   [11;26H[34;108H7-26[11;26H[?25h[?25l[34;95H~@k[11;26H[34;95H   [11;25H[34;108H6-25[11;25H[?25h[?25l[34;95H~@k[11;25H[34;95H   [11;24H[34;108H5-24[11;24H[?25h[?25l[34;95H~@k[11;24H[34;95H   [11;16H[34;108H4-16[11;16H[?25h[?25l[34;95H~@k[11;16H[34;95H   [11;8H[34;108H3-8 [11;8H[?25h[?25l[34;95H~@k[11;8H[34;95H   [11;2H[34;108H2  [11;2H[?25h[?25l[34;95H~@k[11;2H[34;95H   [11;1H[34;108H1[11;1H[?25h[?25l[34;95H~@k[11;1H[34;95H   [11;1H[?25h[?25l[34;95H~@k[11;1H[34;95H   [11;1H[?25h[?25l[34;95H~@k[11;1H[34;95H   [11;1H[?25h[?25l[34;95Hi[11;1H[34;95H [11;1H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H38,1[10C93%[11;1H[?25h[?25l[34;108H2[11;2H[?25h[?25l[34;108H3[11;3H[?25h[?25l/                       column2.push_back(stoi(length));[34;108H2[11;2H[?25h[?25l [34;108H1[11;1H[?25h[?25l[34;106H7[10;1H[?25h[?25l[34;106H6[9;1H[?25h[?25l[34;106H5[8;1H[?25h[?25l[34;106H4[7;1H[?25h[?25l[34;106H3[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[34;105H[K[34;105H32,1[10C89%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H31,1[10C86%[6;1H[?25h[?25l[34;108H2[6;2H[?25h[?25l[34;108H3[6;3H[?25h[?25l/                               column1.push_back(stoi(year))[34;108H2[6;2H[?25h[?25l [34;108H1[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;105H[K[34;105H30,1[10C82%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;105H[K[34;105H29,1[10C79%[6;1H[?25h[?25l[34;108H2-9[6;9H[?25h[?25l[34;108H3-17[6;17H[?25h[?25l[34;108H4-25[6;25H[?25h[?25l[34;108H5-26[6;26H[?25h[?25l[34;108H6-27[6;27H[?25h[?25l[34;108H7-28[6;28H[?25h[?25l[34;108H8-29[6;29H[?25h[?25l[34;108H9-30[6;30H[?25h[?25l[34;108H10-31[6;31H[?25h[?25l[34;109H1-32[6;32H[?25h[?25l[34;109H2-33[6;33H[?25h[?25l[34;109H3-34[6;34H[?25h[?25l[34;109H4-35[6;35H[?25h[?25l[34;109H5-36[6;36H[?25h[?25l[34;109H6-37[6;37H[?25h[?25l[34;109H7-38[6;38H[?25h[?25l[34;109H8-39[6;39H[?25h[?25l[34;109H9-40[6;40H[?25h[?25l[34;108H20-41[6;41H[?25h[?25l[34;109H1-42[6;42H[?25h[?25l[34;109H2-43[6;43H[?25h[?25l[34;109H3-44[6;44H[?25h[?25l[34;109H4-45[6;45H[?25h[?25l[34;109H5-46[6;46H[?25h[?25l[34;109H6-47[6;47H[?25h[?25l[34;109H7-48[6;48H[?25h[?25l[34;109H8-49[6;49H[?25h[?25l[6;48H[K[34;109H7-48[6;48H[?25h[?25l[6;47H[K[34;109H6-47[6;47H[?25h[?25l[6;46H[K[34;109H5-46[6;46H[?25h[?25l[6;45H[K[34;109H4-45[6;45H[?25h[?25l[6;44H[K[34;109H3-44[6;44H[?25h[?25l[6;43H[K[34;109H2-43[6;43H[?25h[?25l[6;42H[K[34;109H1-42[6;42H[?25h[?25l[6;41H[K[34;109H0-41[6;41H[?25h[?25l[6;40H[K[34;108H19-40[6;40H[?25h[?25l[6;39H[K[34;109H8-39[6;39H[?25h[?25l[6;38H[K[34;109H7-38[6;38H[?25h[?25l[6;37H[K[34;109H6-37[6;37H[?25h[?25l[6;36H[K[34;109H5-36[6;36H[?25h[?25l[6;35H[K[34;109H4-35[6;35H[?25h[?25l[6;34H[K[34;109H3-34[6;34H[?25h[?25l[6;33H[K[34;109H2-33[6;33H[?25h[?25l[34;109H1-32[6;32H[?25h[?25l[6;31H[K[34;109H0-31[6;31H[?25h[?25l[6;30H[K[34;108H9-30 [6;30H[?25h[?25l[34;108H8-29[6;29H[?25h[?25l[6;28H[K[34;108H7-28[6;28H[?25h[?25l[6;27H[K[34;108H6-27[6;27H[?25h[?25l[6;26H[K[34;108H5-26[6;26H[?25h[?25l[6;25H[K[34;108H4-25[6;25H[?25h[?25l[34;105H30[7;25H[?25h[?25l[34;106H1[8;25H[?25h[?25l[7;43H[106m{[9;9H}[m[34;106H2,3-10[9;10H[?25h[?25l[7;43H{[9;9H}[34;106H3,4-25[10;25H[?25h[?25l[34;106H4,1   [11;1H[?25h[?25l[34;106H5,4-25[12;25H[?25h[?25l[34;106H6,11-25[13;25H[?25h[?25l[34;106H7,4-25 [14;25H[?25h[?25l[34;106H6,11-25[13;25H[?25h[?25l[34;109H2-26[13;26H[?25h[?25l[34;109H3-27[13;27H[?25h[?25l[34;109H4-28[13;28H[?25h[?25l[34;109H5-29[13;29H[?25h[?25l[34;109H6-30[13;30H[?25h[?25l[34;109H7-31[13;31H[?25h[?25l[34;109H8-32[13;32H[?25h[?25l[34;109H9-33[13;33H[?25h[?25l[34;108H20-34[13;34H[?25h[?25l[34;109H1-35[13;35H[?25h[?25l[34;109H2-36[13;36H[?25h[?25l[34;109H3-37[13;37H[?25h[?25l[34;109H4-38[13;38H[?25h[?25l[13;37H[K[34;109H3-37[13;37H[?25h[?25l[13;36H[K[34;109H2-36[13;36H[?25h[?25l[13;35H[K[34;109H1-35[13;35H[?25h[?25l[13;34H[K[34;109H0-34[13;34H[?25h[?25l[13;33H[K[34;108H19-33[13;33H[?25h[?25l[13;32H[K[34;109H8-32[13;32H[?25h[?25l[13;31H[K[34;109H7-31[13;31H[?25h[?25l[13;30H[K[34;109H6-30[13;30H[?25h[?25l[13;29H[K[34;109H5-29[13;29H[?25h[?25l[13;28H[K[34;109H4-28[13;28H[?25h[?25l[13;27H[K[34;109H3-27[13;27H[?25h[?25l[13;26H[K[34;109H2-26[13;26H[?25h[?25l[13;25H[K[34;109H1-25[13;25H[?25h[?25l[34;109H0-24[13;24H[?25h[?25l[13;23H[K[34;108H9-23 [13;23H[?25h[?25l[13;22H[K[34;108H8-22[13;22H[?25h[?25l[34;108H7-21[13;21H[?25h[?25l[13;20H[K[34;108H6-20[13;20H[?25h[?25l[13;19H[K[34;108H5-19[13;19H[?25h[?25l[13;18H[K[34;108H4-18[13;18H[?25h[?25l[13;17H[K[34;108H3-17[13;17H[?25h[?25l[34;106H7[14;17H[?25h[?25l[34;106H8[15;17H[?25h[?25l[14;44H[106m{[16;17H}[m[34;106H9[16;17H[?25h[?25l[14;44H{[16;17H}[34;105H40[17;17H[?25h[?25l[34;106H1[18;17H[?25h[?25l[34;106H2[19;17H[?25h[?25l[34;106H3[20;17H[?25h[?25l[34;106H4[21;17H[?25h[?25l[34;106H5[22;17H[?25h[?25l[34;106H6[23;17H[?25h[?25l[34;106H7[24;17H[?25h[?25l[34;106H8[25;17H[?25h[?25l[34;106H9[26;17H[?25h[?25l[34;105H50[27;17H[?25h[?25l[34;106H1[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H52,3-17[7C82%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H[34m//      for (int x:column1){[m[34;105H[K[34;105H53,3-17[7C86%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H[34m//              cout <<x<<endl;[m[34;105H[K[34;105H54,3-17[7C89%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H[34m//      }[m[34;105H[K[34;105H55,3-17[7C93%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H56,3-17[7C96%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H57,3-17[7CBot[28;17H[?25h[?25l[34;106H8,12-17[29;17H[?25h[?25l[34;106H9,5-17 [30;17H[?25h[?25l[29;28H[34m[106m{[31;9H}[m[34;105H60,5-10[31;10H[?25h[?25l[29;28H[34m{[31;9H}[m[34;106H1,2   [32;2H[?25h[?25l[34;106H2,2-9[33;9H[?25h[?25l[34;106H1,2  [32;2H[?25h[?25l[29;28H[34m[106m{[31;9H}[m[34;106H0,5-10[31;10H[?25h[?25l[34;108H4-9 [31;9H[?25h[?25l[29;28H[34m{[31;9H}[m[34;108H3  [31;3H[?25h[?25l[34;108H2[31;2H[?25h[?25l[34;108H3[31;3H[?25h[?25l/       }[34;108H2[31;2H[?25h[?25l [34;108H1[31;1H[?25h[?25l[34;105H59[30;1H[?25h[?25l[34;108H2[30;2H[?25h[?25l[34;108H3[30;3H[?25h[?25l/               cout <<x<<endl;[34;108H2[30;2H[?25h[?25l [34;108H1[30;1H[?25h[?25l[34;106H8[29;1H[?25h[?25l[34;108H2[29;2H[?25h[?25l/       [38;5;130mfor[m ([32mint[m x:column1){[34;108H1[29;1H[?25h[?25l[34;108H2[29;2H[?25h[?25l [34;108H1[29;1H[?25h[34;1H[K[29;1H[?25l[34;95H^[[29;1H[34;95H  [29;1H[34;105H58,1-8[8CBot[29;8H[?25h[?25l[34;95H:[29;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 62L, 1422C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:31:34:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[K}[m[Kâ€™ token
   31 |     column1.push_back(stoi(year))
      |                                  [01;31m[K^[m[K
      |                                  [32m[K;[m[K
   32 |  [32m[K}[m[K
      |  [32m[K~[m[K                                
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:45:39 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 62L, 1422C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130mif[m (!year.empty()){[2;33Hcolumn1.push_back(stoi(year))[3;9H}[4;25H[38;5;130melse[m{column1.push_back([31m0[m); }[6;25Hgetline(infile, length,[31m';'[m);[8;25H[38;5;130mif[m(!length.empty()){[9;25Hcolumn2.push_back(stoi(length));[10;17H}[11;25H[38;5;130melse[m{column2.push_back([31m0[m);}

               [9Cgetline(infile, title,[31m';'[m);
                        column3.push_back(title);[15;11H              getline(infile, subject,[31m';'[m);[15;55H[K[16;10H               column4.push_back(subject);[16;52H[K[17;11H              getline(infile, actor,[31m';'[m);[18;10H               column5.push_back(actor);[18;50H[K[19;9H                getline(infile, actress,[31m';'[m);
                        column6.push_back(actress);[21;14H           getline(infile, director,[31m';'[m);[22;7H                  column7.push_back(director);[23;25Hgetline(infile,popularity,[31m';'[m);
                [34m//      column8.push_back(stoi(popularity));[m[24;61H[K[25;5H                    getline(infile, awards,[31m';'[m);[25;53H[K[26;5H                    getline(infile, image,[35m'\n'[m);[26;53H[K[27;1H                        column10.push_back(image);
                }[28;18H[K[29;5H    [38;5;130mfor[m ([32mint[m x:column1){[29;29H[K[30;5H            cout <<x<<endl;[30;32H[K[31;5H    }[31;10H[K[32;1H}
        [33;9H[K[34;105H58,1-8[8CBot[29;8H[?25h[?25l[34;95H~@k[29;8H[34;95H   [28;8H[34;106H7[28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [27;8H[34;106H6[27;8H[?25h[?25l[34;95H~@k[27;8H[34;95H   [26;8H[34;106H5[26;8H[?25h[?25l[34;95H~@k[26;8H[34;95H   [25;8H[34;106H4[25;8H[?25h[?25l[34;95H~@k[25;8H[34;95H   [24;8H[34;106H3[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [23;8H[34;106H2[23;8H[?25h[?25l[34;95H~@k[23;8H[34;95H   [22;8H[34;106H1[22;8H[?25h[?25l[34;95H~@k[22;8H[34;95H   [21;8H[34;106H0[21;8H[?25h[?25l[34;95H~@k[21;8H[34;95H   [20;8H[34;105H49[20;8H[?25h[?25l[34;95H~@k[20;8H[34;95H   [19;8H[34;106H8[19;8H[?25h[?25l[34;95H~@k[19;8H[34;95H   [18;8H[34;106H7[18;8H[?25h[?25l[34;95H~@k[18;8H[34;95H   [17;8H[34;106H6[17;8H[?25h[?25l[34;95H~@k[17;8H[34;95H   [16;8H[34;106H5[16;8H[?25h[?25l[34;95H~@k[16;8H[34;95H   [15;8H[34;106H4[15;8H[?25h[?25l[34;95H~@k[15;8H[34;95H   [14;8H[34;106H3[14;8H[?25h[?25l[34;95H~@k[14;8H[34;95H   [13;8H[34;106H2[13;8H[?25h[?25l[34;95H~@k[13;8H[34;95H   [12;8H[34;106H1[12;8H[?25h[?25l[34;95H~@k[12;8H[34;95H   [11;8H[34;106H0[11;8H[?25h[?25l[34;95H~@k[11;8H[34;95H   [10;8H[34;105H39[10;8H[?25h[?25l[34;95H~@k[10;8H[34;95H   [9;8H[34;106H8[9;8H[?25h[?25l[34;95H~@k[9;8H[34;95H   [8;8H[34;106H7[8;8H[?25h[?25l[34;95H~@k[8;8H[34;95H   [7;8H[34;106H6[7;8H[?25h[?25l[34;95H~@k[7;8H[34;95H   [6;8H[34;106H5[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[34;1H[K[34;105H34,0-1[8C96%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[?25h[?25l[34;95Hi[6;1H[34;95H [6;1H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H34,1[10C96%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;105H[K[34;105H33,1[10C93%[6;1H[?25h[?25l[34;108H2-9[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[34;105H[K[34;105H32,2-9[8C89%[4;43H[106m{[6;9H}[?25h[?25l[1;33r[m[1;1H[L[1;34r[34;105H[K[34;105H31,2-9[8C86%[5;43H{[7;9H}[6;9H[?25h[?25l[34;108H3-17[6;17H[?25h[?25l[34;108H4-25[6;25H[?25h[?25l[34;108H5-33[6;33H[?25h[?25l[34;108H6-34[6;34H[?25h[?25l[34;108H7-35[6;35H[?25h[?25l[34;108H8-36[6;36H[?25h[?25l[34;108H9-37[6;37H[?25h[?25l[34;108H10-38[6;38H[?25h[?25l[34;109H1-39[6;39H[?25h[?25l[34;109H2-40[6;40H[?25h[?25l[34;109H3-41[6;41H[?25h[?25l[34;109H4-42[6;42H[?25h[?25l[34;109H5-43[6;43H[?25h[?25l[34;109H6-44[6;44H[?25h[?25l[34;109H7-45[6;45H[?25h[?25l[34;109H8-46[6;46H[?25h[?25l[34;109H9-47[6;47H[?25h[?25l[34;108H20-48[6;48H[?25h[?25l[34;109H1-49[6;49H[?25h[?25lk[106m([10C)[m[34;109H2-50[6;50H[?25h[?25l[34;109H3-51[6;51H[?25h[?25l([10C)[34;109H4-52[6;52H[?25h[?25l[34;109H5-53[6;53H[?25h[?25l[34;109H6-54[6;54H[?25h[?25li[106m([myear[106m)[m[34;109H7-55[6;55H[?25h[?25l[34;109H8-56[6;56H[?25h[?25l(year)[34;109H9-57[6;57H[?25h[?25l[34;108H30-58[6;58H[?25h[?25l[34;109H1-59[6;59H[?25h[?25l[106m([myear[106m)[m[34;109H2-60[6;60H[?25h[?25l[6;50H[106m([mstoi(year)[106m)[m[34;109H3-61[6;61H[?25h[?25l[34;109H4-62[6;62H[?25h[?25l;[6;50H([10C)[34;109H5-63[6;63H[?25h[34;1H[K[6;62H[?25l[34;95H^[[6;62H[34;95H  [6;63H[34;105H31,34-62      86%[6;62H[?25h[?25l[34;95H:[6;62H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 62L, 1423C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
1990
1991
1983
1979
1978
1983
1984
1989
1985
1990
1982
1982
1966
1986
1966
1985
1976
1929
1963
1988
1988
1981
1987
1991
1988
1990
1988
1980
1989
1979
1960
1957
1956
1992
1955
1955
1962
1972
1958
1967
1962
1954
1979
1983
1966
1966
1986
1965
1985
1984
1988
1978
1992
1978
1992
1987
1992
1981
1992
1991
1924
1991
1988
1991
1986
1985
1985
1971
1959
1926
1987
1989
1988
1926
1988
1974
1955
1977
1988
1991
1989
1996
1992
1980
1988
1982
1987
1971
1957
1969
1958
1959
1967
1968
1964
1965
1962
1964
1958
1955
1962
1957
1973
1987
1932
1987
1982
1992
1988
1989
1987
1982
1992
1983
1986
1989
1986
1991
1990
1946
1984
1990
1988
1989
1988
1990
1942
1972
1977
1982
1990
1948
1945
1988
1985
1982
1975
1971
1970
1972
1935
1978
1944
1958
1941
1948
1982
1969
1949
1946
1940
1961
1956
1945
1937
1938
1935
1939
1938
1956
1952
1953
1954
1950
1969
1989
1990
1987
1982
1991
1970
1982
1983
1984
1973
1988
1972
1970
1973
1952
1976
1969
1991
1974
1964
1977
1953
1942
1968
1973
1982
1990
1987
1985
1993
1974
1993
1958
1981
1928
1992
1989
1985
1990
1973
1958
1986
1990
1948
1987
1965
1980
1988
1978
1988
1988
1973
1975
1982
1952
1954
1989
1990
1971
1983
1989
1987
1984
1984
1989
1963
1935
1988
1966
1974
1977
1983
1936
1986
1972
1987
1990
1982
1987
1977
1990
1989
1970
1943
1992
1989
1987
1987
1979
1984
1986
1989
1975
1985
1965
1963
1931
1931
1967
1968
1989
1987
1980
1988
1990
1991
1946
1987
1948
1962
1989
1992
1966
1986
1991
1961
1990
1962
1989
1991
1989
1992
1977
1987
1988
1954
1957
1986
1979
1989
1974
1990
1980
1990
1971
1969
1942
1948
1965
1946
1939
1950
1986
1990
1988
1989
1956
1992
1940
1949
1986
1975
1942
1989
1990
1967
1992
1987
1989
1983
1980
1986
1983
1981
1977
1980
1986
1989
1990
1989
1988
1981
1989
1990
1940
1961
1989
1990
1987
1991
1987
1993
1991
1979
1991
1991
1946
1950
1949
1985
1986
1992
1976
1974
1975
1977
1987
1990
1947
1943
1974
1981
1980
1945
1993
1979
1970
1984
1991
1961
1966
1974
1985
1967
1993
1992
1987
1987
1956
1985
1984
1992
1986
1979
1986
1981
1936
1978
1990
1992
1988
1987
1984
1991
1977
1981
1979
1989
1989
1980
1977
1983
1991
1956
1957
1931
1990
1972
1979
1986
1971
1979
1965
1991
1940
1944
1973
1992
1989
1990
1983
1991
1988
1972
1988
1955
1989
1987
1934
1931
1930
1926
1928
1935
1936
1931
1929
1932
1931
1939
1933
1928
1925
1929
1932
1930
1962
1982
1989
1953
1979
1975
1987
1989
1975
1979
1986
1959
1954
1961
1983
1988
1987
1986
1978
1988
1966
1964
1988
1979
1991
1932
1986
1990
1988
1992
1991
1988
1991
1984
1986
1969
1991
1990
1992
1985
1983
1984
1989
1987
1982
1987
1992
1989
1938
1936
1976
1988
1983
1987
1989
1991
1986
1987
1989
1970
1984
1978
1982
1972
1987
1974
1992
1986
1984
1980
1974
1980
1991
1931
1972
1964
1952
1948
1940
1946
1948
1990
1964
1987
1984
1985
1949
1964
1960
1976
1961
1956
1952
1968
1991
1967
1957
1975
1981
1991
1991
1991
1991
1991
1991
1991
1992
1986
1987
1988
1991
1988
1966
1986
1989
1943
1992
1987
1980
1973
1987
1947
1928
1986
1987
1934
1950
1991
1987
1989
1980
1982
1980
1940
1987
1989
1992
1932
1991
1990
1980
1988
1982
1987
1973
1970
1988
1986
1955
1989
1981
1927
1937
1991
1983
1987
1990
1986
1963
1991
1988
1948
1973
1983
1975
1990
1977
1955
1988
1983
1989
1991
1977
1979
1981
1986
1977
1972
1974
1976
1972
1975
1973
1970
1980
1977
1977
1972
1953
1955
1954
1945
1939
1956
1989
1992
1927
1978
1987
1970
1989
1990
1987
1983
1984
1984
1987
1989
1987
1986
1969
1984
1935
1990
1986
1977
1989
1987
1989
1987
1990
1978
1986
1953
1969
1988
1981
1988
1990
1985
1986
1987
1983
1983
1990
1989
1990
1988
1992
1992
1949
1978
1971
1990
1960
1957
1987
1951
1986
1971
1985
1989
1978
1974
1980
1977
1986
1938
1987
1959
1929
1941
1986
1982
1987
1991
1991
1960
1961
1954
1963
1957
1978
1964
1961
1958
1953
1959
1977
1977
1979
1991
1990
1991
1992
1986
1986
1992
1979
1991
1943
1986
1991
1962
1989
1990
1988
1979
1983
1967
1968
1990
1970
1992
1939
1988
1991
1992
1991
1990
1987
1990
1991
1988
1986
1990
1974
1988
1980
1949
1981
1989
1955
1986
1986
1977
1991
1981
1991
1992
1986
1986
1986
1989
1980
1989
1992
1990
1990
1992
1967
1990
1987
1988
1975
1988
1991
1988
1989
1983
1987
1986
1985
1988
1984
1983
1988
1965
1989
1981
1957
1964
1975
1988
1990
1991
1991
1991
1987
1970
1973
1962
1989
1988
1960
1972
1981
1976
1977
1989
1980
1991
1950
1992
1953
1983
1991
1987
1986
1989
1984
1990
1986
1982
1948
1952
1974
1970
1955
1988
1968
1976
1987
1988
1974
1941
1990
1940
1955
1987
1963
1951
1987
1956
1992
1970
1991
1988
1923
1980
1991
1989
1991
1986
1987
1990
1950
1992
1958
1987
1946
1941
1940
1941
1992
1950
1957
1939
1971
1992
1983
1952
1969
1953
1929
1978
1981
1986
1982
1985
1955
1969
1987
1969
1991
1993
1988
1976
1986
1984
1990
1986
1984
1992
1986
1978
1989
1979
1980
1986
1982
1989
1985
1989
1985
1991
1988
1989
1971
1973
1988
1927
1989
1990
1962
1992
1991
1988
1988
1990
1962
1972
1965
1965
1983
1988
1990
1988
1988
1989
1987
1992
1970
1990
1991
1987
1987
1989
1949
1974
1989
1988
1986
1991
1977
1971
1984
1990
1986
1985
1993
1989
1987
1991
1969
1986
1987
1943
1986
1987
1990
1991
1991
1940
1992
1990
1986
1992
1951
1979
1991
1980
1969
1968
1980
1986
1989
1976
1988
1992
1988
1992
1991
1958
1988
1990
1947
1990
1988
1991
1939
1988
1987
1988
1990
1991
1990
1972
1991
1966
1992
1982
1985
1971
1974
1973
1968
1970
1971
1986
1986
1984
1989
1975
1968
1992
1991
1979
1991
1990
1990
1975
1973
1987
1924
1966
1986
1990
1972
1986
1983
1986
1971
1988
1981
1976
1988
1936
1977
1985
1954
1960
1955
1992
1988
1963
1987
1986
1987
1965
1988
1988
1978
1986
1985
1990
1986
1985
1964
1979
1982
1989
1987
1990
1933
1992
1985
1986
1993
1981
1967
1992
1990
1987
1992
1967
1987
1979
1988
1991
1978
1984
1986
1983
1982
1985
1981
1985
1988
1989
1992
1991
1970
1987
1983
1968
1990
1970
1987
1941
1984
1949
1989
1991
1983
1957
1975
1967
1972
1968
1963
1950
1992
1977
1956
1985
1943
1993
1972
1991
1991
1973
1991
1931
1992
1984
1988
1991
1935
1988
1980
1948
1937
1987
1988
1983
1987
1990
1985
1963
1963
1959
1961
1986
1989
1990
1989
1986
1941
1939
1940
1986
1989
1985
1983
1984
1985
1984
1988
1955
1958
1988
1986
1968
1966
1973
1968
1969
1984
1957
1968
1985
1990
1973
1959
1970
1971
1981
1967
1988
1990
1991
1992
1986
1991
1988
1986
1992
1997
1979
1985
1984
1973
1974
1972
1966
1967
1977
1969
1975
1968
1973
1972
1990
1988
1955
1987
1966
1990
1987
1970
1989
1990
1987
1989
1974
1973
1953
1980
1989
1956
1973
1989
1992
1982
1987
1986
1970
1965
1955
1977
1968
1992
1964
1985
1991
1956
1979
1955
1961
1970
1966
1966
1987
1989
1968
1961
1960
1993
1991
1943
1950
1950
1947
1975
1949
1987
1993
1947
1990
1953
1954
1977
1979
1954
1987
1966
1962
1986
1988
1986
1988
1981
1991
1987
1962
1983
1989
1991
1963
1961
1937
1987
1936
1991
1931
1979
1984
1979
1990
1963
1963
1975
1986
1991
1979
1987
1986
1989
1990
1984
1974
1975
1982
1987
1993
1966
1990
1945
1991
1949
1949
1949
1950
1948
1948
1948
1968
1983
1971
1985
1961
1983
1984
1958
1982
1989
1988
1953
1960
1966
1966
1970
1953
1935
1969
1930
1954
1937
1976
1981
1982
1975
1981
1970
1989
1990
1985
1986
1984
1992
1979
1983
1971
1945
1952
1968
1990
1937
1956
1974
1971
1991
1943
1991
1946
1960
1951
1951
1962
1955
1957
1961
1980
1952
1987
1986
1926
1946
1920
1954
1928
1933
1991
1990
1989
1989
1991
1944
1982
1974
1987
1945
1969
1964
1976
1984
1987
1944
1988
1978
1955
1957
1971
1984
1991
1970
1940
1967
1980
1970
1990
1966
1973
1942
1991
1982
1987
1989
1973
1987
1971
1970
1988
1981
1935
1988
1990
1990
1989
1987
1976
1987
1969
1988
1993
1988
1975
1972
1970
1973
1989
1979
1983
1986
1951
1985
1980
1972
1983
1984
1991
1987
1990
1990
1972
1985
1970
1969
1985
1976
1987
1991
1991
1938
1938
1982
1971
1979
1948
1976
1990
1993
1991
1924
1986
1963
1971
1971
1985
1938
1990
1982
1947
1947
1937
1992
1947
1947
1949
1992
1937
1937
1949
1991
1957
1953
1982
1960
1986
1985
1990
1952
1949
1976
1990
1982
1956
1955
1962
1989
1986
1986
1986
1986
1990
1982
1981
1964
1993
1992
1990
1992
1977
1989
1972
1991
1991
1992
1992
1959
1992
1987
1992
1992
1993
1986
1993
1991
1989
1959
1983
1973
1992
1990
1982
1975
1953
1991
1990
1992
1992
1992
1992
1992
1986
1990
1990
1986
1989
1991
1986
1974
1993
1992
1989
1983
1990
1989
1991
1953
1992
1992
1989
1992
1968
1990
1989
1987
1991
1989
1988
1991
1991
1956
1953
1975
1991
1991
1960
1991
1991
1988
1958
1989
1979
1942
1992
1992
1967
1980
1991
1991
1991
1957
1992
1993
1939
1934
1932
1932
1965
1991
1992
1991
1939
1939
1938
1990
1991
1991
1992
1991
1991
1934
1992
1993
1991
1991
1993
1992
1991
1990
1932
1989
1988
1977
1991
0
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:46:02 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 62L, 1423C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[8;9Hifstream infile;[9;9Hinfile.open([31m"films.txt"[m);[10;9H[38;5;130mif[m(infile.fail()){[11;17Hcout << [31m"Error with file"[m;[12;17Hexit([31m1[m);
        }[13;10H[K[14;1H        infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[15;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[16;10H[K[17;9Hstring x;[17;18H[K[18;9Hvector <[32mint[m> column1, column2,column8;[18;47H[K[19;9Hvector<string> column3,column4,column5,column6,column7,column10;
        [32mint[m sum=[31m0[m;[20;20H[K[21;9H[32mdouble[m average;[21;25H[K[22;7H  [38;5;130mwhile[m(infile.good()){

                        string year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,[31m';'[m);[25;51H[K[26;5H                    [26;25H[K[27;1H                        [38;5;130mif[m (!year.empty()){
                                column1.push_back(stoi(year));
        }[29;10H[K[30;5H                    [38;5;130melse[m{column1.push_back([31m0[m); }[30;53H[K[31;5H[K[32;25Hgetline(infile, length,[31m';'[m);
                [33;17H[K[34;105H31,34-62      10%[28;62H[?25h[?25l[34;95H~@k[28;62H[34;95H   [27;43H[106m{[29;9H}[m[34;106H0,22-43[27;43H[?25h[?25l[34;95H~@k[27;43H[34;95H   [26;24H[27;43H{[29;9H}[34;105H29,3-24 [26;24H[?25h[?25l[34;95H~@k[26;24H[34;95H   [25;50H[34;106H8,29-50[25;50H[?25h[?25l[34;95H~@k[25;50H[34;95H   [24;62H[34;106H7,41-62[24;62H[?25h[?25l[34;95H~@k[24;62H[34;95H   [23;1H[34;106H6,0-1  [23;1H[?25h[?25l[34;95H~@k[23;1H[34;95H   [22;29H[34;106H5,22-29[22;29H[?25h[?25l[34;95H~@k[22;29H[34;95H   [21;23H[34;106H4,16-23[21;23H[?25h[?25l[34;95H~@k[21;23H[34;95H   [20;18H[34;106H3,11-18[20;18H[?25h[?25l[34;95H~@k[20;18H[34;95H   [19;62H[34;106H2,55-62[19;62H[?25h[?25l[34;95H~@k[19;62H[34;95H   [18;46H[34;106H1,39-46[18;46H[?25h[?25l[34;95H~@k[18;46H[34;95H   [17;17H[34;106H0,10-17[17;17H[?25h[?25l[34;95H~@k[17;17H[34;95H   [16;8H[34;105H19,1-8  [16;8H[?25h[?25l[34;95H~@k[16;8H[34;95H   [15;62H[34;106H8,55-62[15;62H[?25h[?25l[34;95H~@k[15;62H[34;95H   [14;62H[34;106H7[14;62H[?25h[?25l[34;95H~@k[14;62H[34;95H   [13;9H[10;26H[106m{[13;9H}[m[34;106H6,2-9  [13;9H[?25h[?25l[34;95H~@k[13;9H[34;95H   [12;24H[10;26H{[13;9H}[34;106H5,10-24[12;24H[?25h[?25l[34;95H~@k[12;24H[34;95H   [11;42H[34;106H4,28-42[11;42H[?25h[?25l[34;95H~@k[11;42H[34;95H   [10;26H[106m{[13;9H}[m[34;106H3,19-26[10;26H[?25h[?25l[34;95H~@k[10;26H[34;95H   [9;33H[10;26H{[13;9H}[34;106H2,26-33[9;33H[?25h[?25l[34;95H~@k[9;33H[34;95H   [8;24H[34;106H1,17-24[8;24H[?25h[?25l[34;95H~@k[8;24H[34;95H   [7;11H[34;106H0,11   [7;11H[?25h[?25l[34;95H~@k[7;11H[34;95H   [6;1H[34;105H9,0-[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;20H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<fstream>[m[34;1H[K[34;105H8,20[11C6%[6;20H[?25h[?25l[34;95H~@k[6;20H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<iostream>[m[34;105H[K[34;105H7,0-1[10C3%[6;1H[?25h[?25l[34;95H#[6;1H[34;1H[97m[41mE348: No string under cursor[m[34;95H[K[6;1H[34;105H7,0-1[10C3%[6;1H[?25h[?25l[34;95Hi[6;1H[34;95H [6;1H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H7,1[12C3%[6;1H[?25h[?25l#[34;107H2[6;2H[?25h[?25li[34;107H3[6;3H[?25h[?25ln[34;107H4[6;4H[?25h[?25lc[34;107H5[6;5H[?25h[?25ll[34;107H6[6;6H[?25h[?25lu[34;107H7[6;7H[?25h[?25ld[34;107H8[6;8H[?25h[?25le[34;107H9[6;9H[?25h[?25l[35m#include<[m[34;107H10[6;10H[?25h[?25l#include[6;9H[K[34;107H9 [6;9H[?25h[?25l[34;107H10[6;10H[?25h[?25l[35m#include <[m[34;108H1[6;11H[?25h[?25l[31m<>[m[34;108H2[6;12H[?25h[?25l[34;108H1[6;11H[?25h[?25l[31mn>[m[34;108H2[6;12H[?25h[?25l[31mu>[m[34;108H3[6;13H[?25h[?25l[31mm>[m[34;108H4[6;14H[?25h[?25l[31me>[m[34;108H5[6;15H[?25h[?25l[31mr>[m[34;108H6[6;16H[?25h[?25l[31mi>[m[34;108H7[6;17H[?25h[?25l[31mc>[m[34;108H8[6;18H[?25h[?25l[34;108H9[6;19H[?25h[?25l[7;33r[7;1H[L[1;34r[34;105H[K[34;105H8,1[12C3%[7;1H[?25h[?25l#[34;107H2[7;2H[?25h[?25li[34;107H3[7;3H[?25h[?25ln[34;107H4[7;4H[?25h[?25lc[34;107H5[7;5H[?25h[?25ll[34;107H6[7;6H[?25h[?25lu[34;107H7[7;7H[?25h[?25ld[34;107H8[7;8H[?25h[?25le[34;107H9[7;9H[?25h[?25l[34;107H10[7;10H[?25h[?25l[35m#include <[m[34;108H1[7;11H[?25h[?25l[31m<>[m[34;108H2[7;12H[?25h[?25l[34;108H1[7;11H[?25h[?25l[31mf>[m[34;108H2[7;12H[?25h[?25l[31mi>[m[34;108H3[7;13H[?25h[?25l[31mn>[m[34;108H4[7;14H[?25h[?25l[31mc>[m[34;108H5[7;15H[?25h[?25l[31mt>[m[34;108H6[7;16H[?25h[?25l[31mi>[m[34;108H7[7;17H[?25h[?25l[31mo>[m[34;108H8[7;18H[?25h[?25l[31mn>[m[34;108H9[7;19H[?25h[?25l[31ma>[m[34;107H20[7;20H[?25h[?25l[31ml>[m[34;108H1[7;21H[?25h[?25l[34;108H2[7;22H[?25h[?25l[34;108H1[7;21H[?25h[?25l[34;108H0[7;20H[?25h[?25l[34;107H19[7;19H[?25h[?25l[34;108H8[7;18H[?25h[?25l[34;108H7[7;17H[?25h[?25l[34;108H6[7;16H[?25h[?25l[34;108H5[7;15H[?25h[?25l[34;108H4[7;14H[?25h[?25l[34;108H3[7;13H[?25h[?25l[34;108H2[7;12H[?25h[?25l[34;108H3[7;13H[?25h[?25l[31mnctional>[m[7;21H[K[34;108H2[7;12H[?25h[?25l[31munctional>[m[34;108H3[7;13H[?25h[?25l[34;105H9[8;13H[?25h[?25l[34;105H10,1[9;1H[?25h[?25l[34;106H1,12[10;12H[?25h[?25l[34;106H2,6-13[11;13H[?25h[?25l[34;106H3[12;13H[?25h[?25l[34;106H4[13;13H[?25h[?25l[34;106H5,2-9 [14;9H[?25h[?25l[34;106H6[15;9H[?25h[?25l[13;26H[106m{[16;9H}[m[34;106H7,3-10[16;10H[?25h[?25l[13;26H{[16;9H}[34;106H8,6-13[17;13H[?25h[?25l[34;106H9[18;13H[?25h[?25l[34;105H20,2-9 [19;9H[?25h[?25l[34;106H1,6-13[20;13H[?25h[?25l[34;106H2[21;13H[?25h[?25l[34;106H3[22;13H[?25h[?25l[34;106H4[23;13H[?25h[?25l[34;106H5[24;13H[?25h[?25l[34;106H6[25;13H[?25h[?25l[34;106H7,1   [26;1H[?25h[?25l[34;106H8,2-9[27;9H[?25h[?25l[34;106H9[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H30,2-9[9C6%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H31,2-9[8C10%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H32,2-9[8C13%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H33,3-10[7C16%[26;43H[106m{[28;9H}[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H34,2-9[8C20%[25;43H{[27;9H}[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H35,1[10C23%[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H36,2-9[8C26%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H37,2-9[8C30%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;105H[K[34;105H38,2-9[8C33%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;105H[K[34;105H39,2-9[8C36%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H40,2-9[8C40%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;105H[K[34;105H41,2-9[8C43%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H42,2-9[8C46%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H43,2-9[8C50%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H44,2-9[8C53%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H45,2-9[8C56%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H46,2-9[8C60%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H47,2-9[8C63%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H48,2-9[8C66%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H[34m//      column8.push_back(stoi(popularity));[m[34;105H[K[34;105H49,2-9[8C70%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H50,2-9[8C73%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;105H[K[34;105H51,2-9[8C76%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H52,2-9[8C80%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H53,2-9[8C83%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m ([32mint[m x:column1){[34;105H[K[34;105H54,2-9[8C86%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17Hcout <<x<<endl;[34;105H[K[34;105H55,2-9[8C90%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H56,2-9[8C93%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H57,2-9[8C96%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H58,2-9[8CBot[28;9H[?25h[?25l[29;13H[106m([13C)[m[34;106H9,6-13[29;13H[?25h[?25l([13C)[34;105H60,2-9 [30;9H[?25h[?25l[29;28H[106m{[31;9H}[m[34;106H1,3-10[31;10H[?25h[?25l[29;28H{[31;9H}[34;106H2,2   [32;2H[?25h[?25l[34;106H3,2-9[33;9H[?25h[?25l[34;106H2,2  [32;2H[?25h[?25l[29;28H[106m{[31;9H}[m[34;106H1,3-10[31;10H[?25h[?25l[31;9H[K[29;28H{[34;108H2-9 [31;9H[?25h[?25l[34;108H1  [31;1H[?25h[?25l[30;33r[33;1H
[1;34r[30;17Hcout <<x<<endl;


[94m~                                                                                                                         [m[34;105H[K[34;105H60,18-32      Bot[30;32H[?25h[?25l[30;31H[K[34;109H7-31[30;31H[?25h[?25l[30;30H[K[34;109H6-30[30;30H[?25h[?25l[30;29H[K[34;109H5-29[30;29H[?25h[?25l[30;28H[K[34;109H4-28[30;28H[?25h[?25l[30;27H[K[34;109H3-27[30;27H[?25h[?25l[30;26H[K[34;109H2-26[30;26H[?25h[?25l[30;25H[K[34;109H1-25[30;25H[?25h[?25l[30;24H[K[34;109H0-24[30;24H[?25h[?25l[30;23H[K[34;108H9-23 [30;23H[?25h[?25l[30;22H[K[34;108H8-22[30;22H[?25h[?25l[34;108H7-21[30;21H[?25h[?25l[30;20H[K[34;108H6-20[30;20H[?25h[?25l[30;19H[K[34;108H5-19[30;19H[?25h[?25l[30;18H[K[34;108H4-18[30;18H[?25h[?25l[30;17H[K[34;108H3-17[30;17H[?25h[?25l[34;108H2-9 [30;9H[?25h[?25l[34;108H1  [30;1H[?25h[?25l[29;33r[33;1H
[1;34r[29;9H[38;5;130mfor[m ([32mint[m x:column1){[33;1H[94m~                                                                                                                         [m[34;105H[K[34;105H59,22-29      Bot[29;28H[106m{
}[29;29H[?25h[?25l[m[29;28H[K[29;13H[106m([13C)[m
}[34;109H1-28[29;28H[?25h[?25l[29;27H[K[29;13H([34;109H0-27[29;27H[?25h[?25l[29;26H[K[34;108H19-26[29;26H[?25h[?25l[29;25H[K[34;109H8-25[29;25H[?25h[?25l[29;24H[K[34;109H7-24[29;24H[?25h[?25l[29;23H[K[34;109H6-23[29;23H[?25h[?25l[29;22H[K[34;109H5-22[29;22H[?25h[?25l[29;21H[K[34;109H4-21[29;21H[?25h[?25l[29;20H[K[34;109H3-20[29;20H[?25h[?25l[29;19H[K[34;109H2-19[29;19H[?25h[?25l[29;18H[K[34;109H1-18[29;18H[?25h[?25l[34;109H0-17[29;17H[?25h[?25lin[29;16H[K[34;108H9-16 [29;16H[?25h[?25l[29;15H[K[34;108H8-15[29;15H[?25h[?25l[29;14H[K[34;108H7-14[29;14H[?25h[?25l[29;13H[K[34;108H6-13[29;13H[?25h[?25l[34;108H5-12[29;12H[?25h[?25lfo[29;11H[K[34;108H4-11[29;11H[?25h[?25l[29;10H[K[34;108H3-10[29;10H[?25h[?25l[29;9H[K[34;108H2-9 [29;9H[?25h[?25li[34;108H3-10[29;10H[?25h[?25ln[34;108H4-11[29;11H[?25h[?25l[32mint[m[34;108H5-12[29;12H[?25h[?25l[34;108H6-13[29;13H[?25h[?25lx[34;108H7-14[29;14H[?25h[?25l=[34;108H8-15[29;15H[?25h[?25l[34;108H9-16[29;16H[?25h[?25la[34;108H10-17[29;17H[?25h[?25lc[34;109H1-18[29;18H[?25h[?25lc[34;109H2-19[29;19H[?25h[?25lu[34;109H3-20[29;20H[?25h[?25lm[34;109H4-21[29;21H[?25h[?25la[34;109H5-22[29;22H[?25h[?25ll[34;109H6-23[29;23H[?25h[?25la[34;109H7-24[29;24H[?25h[?25lt[34;109H8-25[29;25H[?25h[?25le[34;109H9-26[29;26H[?25h[?25l[97m[101m)[m[34;108H20-27[29;27H[?25h[?25l[29;26H[K[34;108H19-26[29;26H[?25h[?25l([34;108H20-27[29;27H[?25h[?25l)[106m()[m[34;109H1-28[29;28H[?25h[?25l[34;109H0-27[29;27H[?25h[?25l[106mc[m)c[106m)[m[34;109H1-28[29;28H[?25h[?25l[106mo[m)o[106m)[m[34;109H2-29[29;29H[?25h[?25l[106ml[m)l[106m)[m[34;109H3-30[29;30H[?25h[?25l[106mu[m)u[106m)[m[34;109H4-31[29;31H[?25h[?25l[106mm[m)m[106m)[m[34;109H5-32[29;32H[?25h[?25l[106mn[m)n[106m)[m[34;109H6-33[29;33H[?25h[?25l[106m1[m)1[106m)[m[34;109H7-34[29;34H[?25h[?25l[106m.[m).[106m)[m[34;109H8-35[29;35H[?25h[?25l[106mb[m)b[106m)[m[34;109H9-36[29;36H[?25h[?25l[106me[m)e[106m)[m[34;108H30-37[29;37H[?25h[?25l[106mg[m)g[106m)[m[34;109H1-38[29;38H[?25h[?25l[106mi[m)i[106m)[m[34;109H2-39[29;39H[?25h[?25l[106mn[m)n[106m)[m[34;109H3-40[29;40H[?25h[?25l[106m([m)[29;26H([14C[106m)[m[34;109H4-41[29;41H[?25h[?25l[1C)[29;26H[106m([m[13C()[106m)[m[34;109H5-42[29;42H[?25h[?25l[106m,[m),[106m)[m[34;109H6-43[29;43H[?25h[?25l[106mc[m)c[106m)[m[34;109H7-44[29;44H[?25h[?25l[106mo[m)o[106m)[m[34;109H8-45[29;45H[?25h[?25l[106ml[m)l[106m)[m[34;109H9-46[29;46H[?25h[?25l[106mu[m)u[106m)[m[34;108H40-47[29;47H[?25h[?25l[106mm[m)m[106m)[m[34;109H1-48[29;48H[?25h[?25l[106mn[m)n[106m)[m[34;109H2-49[29;49H[?25h[?25l[106m2[m)2[106m)[m[34;109H3-50[29;50H[?25h[?25l[106m.[m).[106m)[m[34;109H4-51[29;51H[?25h[?25l[106me[m)e[106m)[m[34;109H5-52[29;52H[?25h[?25l)[29;52H[K[29;51H[106m)[m[34;109H4-51[29;51H[?25h[?25l)[29;51H[K[29;50H[106m)[m[34;109H3-50[29;50H[?25h[?25l)[29;50H[K[29;49H[106m)[m[34;109H2-49[29;49H[?25h[?25l[106m1[m)1[106m)[m[34;109H3-50[29;50H[?25h[?25l[106m.[m).[106m)[m[34;109H4-51[29;51H[?25h[?25l[106me[m)e[106m)[m[34;109H5-52[29;52H[?25h[?25l[106mn[m)n[106m)[m[34;109H6-53[29;53H[?25h[?25l[106md[m)d[106m)[m[34;109H7-54[29;54H[?25h[?25l[106m([m)[29;26H([28C[106m)[m[34;109H8-55[29;55H[?25h[?25l[1C)[29;26H[106m([m[27C()[106m)[m[34;109H9-56[29;56H[?25h[?25l[106m,[m),[106m)[m[34;108H50-57[29;57H[?25h[?25l[106m-[m)-[106m)[m[34;109H1-58[29;58H[?25h[?25l[31m[106m0[m)[31m0[m[106m)[m[34;109H2-59[29;59H[?25h[?25l)[29;59H[K[29;58H[106m)[m[34;109H1-58[29;58H[?25h[?25l)[29;58H[K[29;57H[106m)[m[34;109H0-57[29;57H[?25h[?25l[31m[106m0[m)[31m0[m[106m)[m[34;109H1-58[29;58H[?25h[?25l[34;109H2-59[29;59H[?25h[?25l;[29;26H([31C)[34;109H3-60[29;60H[?25h[?25l[30;33r[30;1H[L[1;34r[34;105H[K[34;105H60,2-9[8CBot[30;9H[?25h[?25lc[34;108H3-10[30;10H[?25h[?25lo[34;108H4-11[30;11H[?25h[?25lu[34;108H5-12[30;12H[?25h[?25lt[34;108H6-13[30;13H[?25h[?25l[34;108H7-14[30;14H[?25h[?25l<[34;108H8-15[30;15H[?25h[?25l<[34;108H9-16[30;16H[?25h[?25lx[34;108H10-17[30;17H[?25h[?25l;[34;109H1-18[30;18H[?25h[34;1H[K[30;17H[?25l[34;95H^[[30;17H[34;95H  [30;18H[34;105H60,10-17      Bot[30;17H[?25h[?25l[34;95H:[30;17H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 62L, 1484C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:59:6:[m[K [01;31m[Kerror: [m[Kconflicting declaration â€˜[01m[Kint x[m[Kâ€™
   59 |  int [01;31m[Kx[m[K= accumalate(column1.begin(),column1.end(),0);
      |      [01;31m[K^[m[K
[01m[KTasks.cpp:21:9:[m[K [01;36m[Knote: [m[Kprevious declaration as â€˜[01m[Kstd::string x[m[Kâ€™
   21 |  string [01;36m[Kx[m[K;
      |         [01;36m[K^[m[K
[01m[KTasks.cpp:59:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kaccumalate[m[Kâ€™ was not declared in this scope
   59 |  int x= [01;31m[Kaccumalate[m[K(column1.begin(),column1.end(),0);
      |         [01;31m[K^~~~~~~~~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:50:49 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 62L, 1484C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;25H[38;5;130mif[m (!year.empty()){[3;33Hcolumn1.push_back(stoi(year));[4;9H}[5;25H[38;5;130melse[m{column1.push_back([31m0[m); }[7;25Hgetline(infile, length,[31m';'[m);[9;25H[38;5;130mif[m(!length.empty()){[10;25Hcolumn2.push_back(stoi(length));[11;17H}[12;25H[38;5;130melse[m{column2.push_back([31m0[m);}
               
                        getline(infile, title,[31m';'[m);[15;11H              column3.push_back(title);[15;50H[K[16;10H               getline(infile, subject,[31m';'[m);[16;54H[K[17;11H              column4.push_back(subject);[18;10H               getline(infile, actor,[31m';'[m);[19;9H                column5.push_back(actor);
                        getline(infile, actress,[31m';'[m);[21;14H           column6.push_back(actress);[22;7H                  getline(infile, director,[31m';'[m);[23;25Hcolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[24;56H[K[25;5H            [34m//      column8.push_back(stoi(popularity));[m[25;62H[K[26;5H                    getline(infile, awards,[31m';'[m);[26;53H[K[27;1H                        getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[28;52H[K[29;5H            }[29;18H[K[30;5H    [32mint[m x= accumalate(column1.begin(),column1.end(),[31m0[m);[30;60H[K[31;5H    cout <<x;[31;19H[K[32;1H}
        [33;9H[K[34;105H60,10-17      Bot[31;17H[?25h[?25l[34;95H~@k[31;17H[34;95H   [30;17H[34;105H59[30;17H[?25h[?25l[34;95H~@k[30;17H[34;95H   [29;17H[34;106H8,3-17 [29;17H[?25h[?25l[34;95H~@k[29;17H[34;95H   [28;24H[34;106H7,3-24[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [27;24H[34;106H6[27;24H[?25h[?25l[34;95H~@k[27;24H[34;95H   [26;24H[34;106H5[26;24H[?25h[?25l[34;95H~@k[26;24H[34;95H   [25;17H[34;106H4,3-17[25;17H[?25h[?25l[34;95H~@k[25;17H[34;95H   [24;24H[34;106H3,3-24[24;24H[?25h[?25l[34;95H~@k[24;24H[34;95H   [23;24H[34;106H2[23;24H[?25h[?25l[34;95H~@k[23;24H[34;95H   [22;24H[34;106H1[22;24H[?25h[?25l[34;95H~@k[22;24H[34;95H   [21;24H[34;106H0[21;24H[?25h[?25l[34;95H~@k[21;24H[34;95H   [20;24H[34;105H49[20;24H[?25h[?25l[34;95H~@k[20;24H[34;95H   [19;24H[34;106H8[19;24H[?25h[?25l[34;95H~@k[19;24H[34;95H   [18;24H[34;106H7[18;24H[?25h[?25l[34;95H~@k[18;24H[34;95H   [17;24H[34;106H6[17;24H[?25h[?25l[34;95H~@k[17;24H[34;95H   [16;24H[34;106H5[16;24H[?25h[?25l[34;95H~@k[16;24H[34;95H   [15;24H[34;106H4[15;24H[?25h[?25l[34;95H~@k[15;24H[34;95H   [14;24H[34;106H3[14;24H[?25h[?25l[34;95H~@k[14;24H[34;95H   [13;24H[34;106H2[13;24H[?25h[?25l[34;95H~@k[13;24H[34;95H   [12;24H[34;106H1[12;24H[?25h[?25l[34;95H~@k[12;24H[34;95H   [11;17H[9;44H[106m{[11;17H}[m[34;106H0,3-17[11;17H[?25h[?25l[34;95H~@k[11;17H[34;95H   [10;24H[9;44H{[11;17H}[34;105H39,3-24[10;24H[?25h[?25l[34;95H~@k[10;24H[34;95H   [9;24H[34;106H8[9;24H[?25h[?25l[34;95H~@k[9;24H[34;95H   [8;16H[34;106H7,2-16[8;16H[?25h[?25l[34;95H~@k[8;16H[34;95H   [7;24H[34;106H6,3-24[7;24H[?25h[?25l[34;95H~@k[7;24H[34;95H   [6;1H[34;106H5,0-1 [6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;1H[K[34;105H34,3-24[7C96%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;9H[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[4;43H[106m{[6;9H}[m[34;105H[K[34;105H33,2-9[8C93%[6;9H[?25h[?25l[34;95H~@k[6;9H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[5;43H{[7;9H}[34;105H[K[34;105H32,3-24[7C89%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;105H[K[34;105H31,3-24[7C86%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;105H[K[34;105H30,3-24[7C82%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[1;9H[32mint[m sum=[31m0[m;[34;105H[K[34;105H29,3-24[7C79%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[34;105H[K[34;105H28,3-24[7C75%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;105H[K[34;105H27,0-1[8C72%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;17H[1;33r[1;1H[L[1;34r[1;9Hstring x;[34;105H[K[34;105H26,10-17      68%[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [6;17H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H25,10-17      65%[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [6;17H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H24,10-17      62%[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [6;17H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H23,10-17      58%[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [6;17H[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H22,10-17      55%[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [6;17H[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;105H[K[34;105H21,10-17      51%[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [6;16H[34;108H9-16 [6;16H[?25h[?25l[34;95H~@k[6;16H[34;95H   [6;15H[34;108H8-15[6;15H[?25h[?25l[34;95Hi[6;15H[34;95H [6;15H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H21,8-15[7C51%[6;15H[?25h[?25l[34;108H9-16[6;16H[?25h[?25l[34;108H10-17[6;17H[?25h[?25l[34;109H1-18[6;18H[?25h[?25l[6;17H[K[34;109H0-17[6;17H[?25h[?25l[6;16H[K[34;108H9-16 [6;16H[?25h[?25l[34;108H8-15[6;15H[?25h[?25l[6;14H[K[34;108H7-14[6;14H[?25h[?25l[6;13H[K[34;108H6-13[6;13H[?25h[?25l[6;12H[K[34;108H5-12[6;12H[?25h[?25l[6;11H[K[34;108H4-11[6;11H[?25h[?25l[6;10H[K[34;108H3-10[6;10H[?25h[?25l[6;9H[K[34;108H2-9 [6;9H[?25h[?25l[34;108H1  [6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[6;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H20,2-9[8C50%[6;9H[?25h[?25l[34;106H1[7;9H[?25h[?25l[34;106H2[8;9H[?25h[?25l[34;106H3[9;9H[?25h[?25l[34;106H4[10;9H[?25h[?25l[34;106H5[11;9H[?25h[?25l[34;106H6,1  [12;1H[?25h[?25l[34;106H7,2-9[13;9H[?25h[?25l[34;106H8[14;9H[?25h[?25l[34;106H9[15;9H[?25h[?25l[34;105H30[16;9H[?25h[?25l[34;106H1[17;9H[?25h[?25l[16;43H[106m{[18;9H}[m[34;106H2[18;9H[?25h[?25l[16;43H{[18;9H}[34;106H3[19;9H[?25h[?25l[34;106H4,1  [20;1H[?25h[?25l[34;106H5,2-9[21;9H[?25h[?25l[34;106H6[22;9H[?25h[?25l[34;106H7[23;9H[?25h[?25l[34;106H8[24;9H[?25h[?25l[34;106H9[25;9H[?25h[?25l[34;105H40[26;9H[?25h[?25l[34;106H1[27;9H[?25h[?25l[34;106H2[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H43,2-9[8C53%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H44,2-9[8C57%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H45,2-9[8C60%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H46,2-9[8C64%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H47,2-9[8C67%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H[34m//      column8.push_back(stoi(popularity));[m[34;105H[K[34;105H48,2-9[8C71%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H49,2-9[8C75%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;105H[K[34;105H50,2-9[8C78%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H51,2-9[8C82%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H52,2-9[8C85%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[32mint[m x= accumalate(column1.begin(),column1.end(),[31m0[m);[34;105H[K[34;105H53,2-9[8C89%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hcout <<x;[34;105H[K[34;105H54,2-9[8C92%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H55,2-9[8C96%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H56,2-9[8CBot[28;9H[?25h[?25l[34;106H7[29;9H[?25h[?25l[34;106H8[30;9H[?25h[?25l[34;106H9[31;9H[?25h[?25l[34;105H60,2  [32;2H[?25h[?25l[34;106H1,2-9[33;9H[?25h[?25l[34;106H0,2  [32;2H[?25h[?25l[34;105H59,2-9[31;9H[?25h[?25l[34;106H8[30;9H[?25h[?25l[34;108H3-10[30;10H[?25h[?25l[34;108H4-11[30;11H[?25h[?25l[34;108H5-12[30;12H[?25h[?25l[34;108H6-13[30;13H[?25h[?25l[34;108H7-14[30;14H[?25h[?25l[34;108H8-15[30;15H[?25h[?25l[34;108H9-16[30;16H[?25h[?25l[34;108H10-17[30;17H[?25h[?25l[34;109H1-18[30;18H[?25h[?25l[34;109H2-19[30;19H[?25h[?25l[34;109H3-20[30;20H[?25h[?25l[34;109H4-21[30;21H[?25h[?25l[34;109H5-22[30;22H[?25h[?25llate(column1.begin(),column1.end(),[31m0[m);[30;59H[K[34;109H4-21[30;21H[?25h[?25lulate(column1.begin(),column1.end(),[31m0[m);[34;109H5-22[30;22H[?25h[34;1H[K[30;21H[?25l[34;95H^[[30;21H[34;95H  [30;22H[34;105H58,14-21      Bot[30;21H[?25h[?25l[34;95H:[30;21H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 61L, 1473C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
3277857]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:51:24 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 61L, 1473C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;25H[38;5;130mif[m (!year.empty()){[3;33Hcolumn1.push_back(stoi(year));[4;9H}[5;25H[38;5;130melse[m{column1.push_back([31m0[m); }[7;25Hgetline(infile, length,[31m';'[m);[9;25H[38;5;130mif[m(!length.empty()){[10;25Hcolumn2.push_back(stoi(length));[11;17H}[12;25H[38;5;130melse[m{column2.push_back([31m0[m);}
               
                        getline(infile, title,[31m';'[m);[15;11H              column3.push_back(title);[15;50H[K[16;10H               getline(infile, subject,[31m';'[m);[16;54H[K[17;11H              column4.push_back(subject);[18;10H               getline(infile, actor,[31m';'[m);[19;9H                column5.push_back(actor);
                        getline(infile, actress,[31m';'[m);[21;14H           column6.push_back(actress);[22;7H                  getline(infile, director,[31m';'[m);[23;25Hcolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[24;56H[K[25;5H            [34m//      column8.push_back(stoi(popularity));[m[25;62H[K[26;5H                    getline(infile, awards,[31m';'[m);[26;53H[K[27;1H                        getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[28;52H[K[29;5H            }[29;18H[K[30;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[30;60H[K[31;5H    cout <<x;[31;19H[K[32;1H}
        [33;9H[K[34;105H58,14-21      Bot[30;21H[?25h[?25l[34;95H~@k[30;21H[34;95H   [31;17H[34;106H9,10-17[31;17H[?25h[?25l[34;95H~@k[31;17H[34;95H   [32;1H[34;105H60,1    [32;1H[?25h[?25l[34;95H~@k[32;1H[34;95H   [31;17H[34;105H59,10-17[31;17H[?25h[?25l[34;95H~@k[31;17H[34;95H   [31;17H[?25h[?25l[34;95H~@k[31;17H[34;95H   [30;21H[34;106H8,14-21[30;21H[?25h[?25l[34;95H~@k[30;21H[34;95H   [29;17H[34;106H7,3-17 [29;17H[?25h[?25l[34;95H~@k[29;17H[34;95H   [29;17H[?25h[?25l[34;95Hi[29;17H[34;95H [29;17H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H57,3-17[7CBot[29;17H[?25h[?25l[34;108H4-18[29;18H[?25h[?25l[1;33r[33;1H
[1;34r[29;33r[29;1H[L[1;34r[34;105H[K[34;105H58,2-9[8CBot[29;9H[?25h[?25lf[34;108H3-10[29;10H[?25h[?25lo[34;108H4-11[29;11H[?25h[?25l[38;5;130mfor[m[34;108H5-12[29;12H[?25h[?25l[34;108H6-13[29;13H[?25h[?25l[34;108H5-12[29;12H[?25h[?25l([34;108H6-13[29;13H[?25h[?25l)[106m()[m[34;108H7-14[29;14H[?25h[?25l()[34;108H8-15[29;15H[?25h[?25l[106m()[m[34;108H7-14[29;14H[?25h[?25l[34;108H6-13[29;13H[?25h[?25l[106m [m) [106m)[m[34;108H7-14[29;14H[?25h[?25l[106mi[m)i[106m)[m[34;108H8-15[29;15H[?25h[?25l[106mn[m)n[106m)[m[34;108H9-16[29;16H[?25h[?25l[32min[m[32m[106mt[m)[32mt[m[106m)[m[34;108H10-17[29;17H[?25h[?25l[106m [m) [106m)[m[34;109H1-18[29;18H[?25h[?25l[106my[m)y[106m)[m[34;109H2-19[29;19H[?25h[?25l[106m:[m):[106m)[m[34;109H3-20[29;20H[?25h[?25l[106mc[m)c[106m)[m[34;109H4-21[29;21H[?25h[?25l[106mo[m)o[106m)[m[34;109H5-22[29;22H[?25h[?25l[106ml[m)l[106m)[m[34;109H6-23[29;23H[?25h[?25l[106mu[m)u[106m)[m[34;109H7-24[29;24H[?25h[?25l[106mm[m)m[106m)[m[34;109H8-25[29;25H[?25h[?25l[106mn[m)n[106m)[m[34;109H9-26[29;26H[?25h[?25l[106m [m) [106m)[m[34;108H20-27[29;27H[?25h[?25l[31m[106m1[m)[31m1[m[106m)[m[34;109H1-28[29;28H[?25h[?25l)[106m )[m [34;109H0-27[29;27H[?25h[?25l)[106m )[m [34;108H19-26[29;26H[?25h[?25l[106m1[m)1[106m)[m[34;108H20-27[29;27H[?25h[?25l[34;109H1-28[29;28H[?25h[?25l{[29;12H([14C)[106m{


}[m[34;109H2-29[29;29H[?25h[?25l}[106m}[m


}[34;109H3-30[29;30H[?25h[?25l[34;109H2-29[29;29H[?25h[?25l[1;33r[33;1H
[1;34r[29;33r[29;1H[L[1;34r[28;29H[K[29;9H}[34;105H[K[34;105H59,2-9[8CBot[29;9H[106m}[?25h[?25l[1;33r[m[33;1H
[1;34r[29;33r[29;1H[L[1;34r[28;9H[K[29;9H}[34;105H[K[34;105H60,2-9[8CBot[29;9H[106m}[?25h[?25l[m[27;28H{[29;9H}[34;105H59[28;9H[?25h[?25li[34;108H3-10[28;10H[?25h[?25ln[34;108H4-11[28;11H[?25h[?25l[32mint[m[34;108H5-12[28;12H[?25h[?25l[34;108H6-13[28;13H[?25h[?25l[34;108H5-12[28;12H[?25h[?25lin[28;11H[K[34;108H4-11[28;11H[?25h[?25l[28;10H[K[34;108H3-10[28;10H[?25h[?25l[28;9H[K[34;108H2-9 [28;9H[?25h[?25l[34;108H1  [28;1H[?25h[?25l[27;33r[33;1H
[1;34r[27;9H[38;5;130mfor[m( [32mint[m y:column1){[33;1H[94m~                                                                                                                         [m[34;105H[K[34;105H58,22-29      Bot[27;28H[106m{[28;9H}[27;29H[?25h[?25l[28;33r[m[28;1H[L[1;34r[28;9H[106m        [m[29;9H}[34;105H[K[34;105H59,3-17[7CBot[27;28H{[28;9H        [?25h[?25l[34;108H2-9 [28;9H[?25h[?25l[34;106H8[27;9H[?25h[?25l[34;106H7[26;9H[?25h[?25l[34;106H6[25;9H[?25h[?25l[34;106H5[24;9H[?25h[?25l[34;106H4[23;9H[?25h[?25l[34;106H3[22;9H[?25h[?25l[34;106H2[21;9H[?25h[?25l[34;106H1[20;9H[?25h[?25l[34;106H0[19;9H[?25h[?25l[34;105H49[18;9H[?25h[?25l[34;106H8[17;9H[?25h[?25l[34;106H7[16;9H[?25h[?25l[34;106H6[15;9H[?25h[?25l[34;106H5[14;9H[?25h[?25l[34;106H4[13;9H[?25h[?25l[34;106H3[12;9H[?25h[?25l[34;106H2[11;9H[?25h[?25l[34;106H1[10;9H[?25h[?25l[34;106H0[9;9H[?25h[?25l[34;105H39[8;9H[?25h[?25l[34;106H8[7;9H[?25h[?25l[34;106H7[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;33Hcolumn1.push_back(stoi(year));[34;105H[K[34;105H36,2-9[8C96%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m (!year.empty()){[34;105H[K[34;105H35,2-9[8C93%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H34,1[10C90%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;105H[K[34;105H33,2-9[8C87%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[34;105H[K[34;105H32,2-9[8C83%[4;43H[106m{[6;9H}[?25h[?25l[1;33r[m[1;1H[L[1;34r[34;105H[K[34;105H31,2-9[8C80%[5;43H{[7;9H}[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;105H[K[34;105H30,2-9[8C77%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;105H[K[34;105H29,2-9[8C74%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mint[m sum=[31m0[m;[34;105H[K[34;105H28,2-9[8C70%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[34;105H[K[34;105H27,2-9[8C67%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;105H[K[34;105H26,1[10C64%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H25,2-9[8C61%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H24,2-9[8C58%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H23,2-9[8C54%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H22,2-9[8C51%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;105H[K[34;105H21,2-9[8C48%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;105H[K[34;105H20,2-9[8C45%[6;9H[?25h[?25l[34;106H1[7;9H[?25h[?25l[34;106H2[8;9H[?25h[?25l[34;106H3[9;9H[?25h[?25l[34;106H4[10;9H[?25h[?25l[34;106H5[11;9H[?25h[?25l[34;106H6,1  [12;1H[?25h[?25l[34;106H7,2-9[13;9H[?25h[?25l[34;106H8[14;9H[?25h[?25l[34;106H9[15;9H[?25h[?25l[34;105H30[16;9H[?25h[?25l[34;106H1[17;9H[?25h[?25l[16;43H[106m{[18;9H}[m[34;106H2[18;9H[?25h[?25l[16;43H{[18;9H}[34;106H3[19;9H[?25h[?25l[34;106H4,1  [20;1H[?25h[?25l[34;106H5,2-9[21;9H[?25h[?25l[34;106H6[22;9H[?25h[?25l[34;106H7[23;9H[?25h[?25l[34;106H8[24;9H[?25h[?25l[34;106H9[25;9H[?25h[?25l[34;105H40[26;9H[?25h[?25l[34;106H1[27;9H[?25h[?25l[34;106H2[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H43,2-9[8C48%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H44,2-9[8C51%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H45,2-9[8C54%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H46,2-9[8C58%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H47,2-9[8C61%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H[34m//      column8.push_back(stoi(popularity));[m[34;105H[K[34;105H48,2-9[8C64%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H49,2-9[8C67%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;105H[K[34;105H50,2-9[8C70%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H51,2-9[8C74%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H52,2-9[8C77%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m( [32mint[m y:column1){[34;105H[K[34;105H53,2-9[8C80%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H54,2-9[8C83%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H55,2-9[8C87%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[34;105H[K[34;105H56,2-9[8C90%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hcout <<x;[34;105H[K[34;105H57,2-9[8C93%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H58,2-9[8C96%[28;9H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H59,2-9[8CBot[28;9H[?25h[?25l[27;28H[106m{[29;9H}[m[34;105H60[29;9H[?25h[?25l[27;28H{[29;9H}[34;106H1[30;9H[?25h[?25l[27;28H[106m{[29;9H}[m[34;106H0[29;9H[?25h[?25l[27;28H{[29;9H}[34;105H59[28;9H[?25h[?25l[34;108H3-17[28;17H[?25h[?25ls[34;108H4-18[28;18H[?25h[?25lu[34;108H5-19[28;19H[?25h[?25lm[34;108H6-20[28;20H[?25h[?25l+[34;108H7-21[28;21H[?25h[?25l=[34;108H8-22[28;22H[?25h[?25ly[34;108H9-23[28;23H[?25h[?25l;[34;108H10-24[28;24H[?25h[?25l[1;33r[33;1H
[1;34r[28;33r[28;1H[L[1;34r[34;105H[K[34;105H60,3-17[7CBot[28;17H[?25h[?25l[34;108H2-9 [28;9H[?25h[?25l[34;108H1  [28;1H[?25h[?25l[27;33r[33;1H
[1;34r[27;17Hsum+=y;[33;1H[94m~                                                                                                                         [m[34;105H[K[34;105H59,10-24      Bot[27;24H[?25h[?25l[34;105H60,4-11 [28;11H[?25h[?25l[29;33r[29;1H[L[1;34r[34;105H[K[34;105H61,2-9[8CBot[29;9H[?25h[?25lc[34;108H3-10[29;10H[?25h[?25lo[34;108H4-11[29;11H[?25h[?25lu[34;108H5-12[29;12H[?25h[?25lt[34;108H6-13[29;13H[?25h[?25l[34;108H7-14[29;14H[?25h[?25l<[34;108H8-15[29;15H[?25h[?25l<[34;108H9-16[29;16H[?25h[?25l[34;108H10-17[29;17H[?25h[?25ls[34;109H1-18[29;18H[?25h[?25lu[34;109H2-19[29;19H[?25h[?25lm[34;109H3-20[29;20H[?25h[?25l<[34;109H4-21[29;21H[?25h[?25l<[34;109H5-22[29;22H[?25h[?25le[34;109H6-23[29;23H[?25h[?25ln[34;109H7-24[29;24H[?25h[?25ld[34;109H8-25[29;25H[?25h[?25ll[34;109H9-26[29;26H[?25h[?25l;[34;108H20-27[29;27H[?25h[?25l[30;26H[106m([31C)[m[34;106H2[30;27H[?25h[?25l([31C)[34;106H3,11-18[31;18H[?25h[?25l[34;109H0-17[31;17H[?25h[?25le;[34;109H1-18[31;18H[?25h[?25ln;[34;109H2-19[31;19H[?25h[?25l;[31;19H[K[34;109H1-18[31;18H[?25h[?25l;[31;18H[K[34;109H0-17[31;17H[?25h[?25l<;[34;109H1-18[31;18H[?25h[?25l<;[34;109H2-19[31;19H[?25h[?25le;[34;109H3-20[31;20H[?25h[?25ln;[34;109H4-21[31;21H[?25h[?25ld;[34;109H5-22[31;22H[?25h[?25ll;[34;109H6-23[31;23H[?25h[34;1H[K[31;22H[?25l[34;95H^[[31;22H[34;95H  [31;23H[34;105H63,15-22      Bot[31;22H[?25h[?25l[34;95H:[31;22H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 65L, 1535C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
3277857
3277857
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 14:52:25 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 65L, 1535C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130melse[m{column1.push_back([31m0[m); }[3;25Hgetline(infile, length,[31m';'[m);[5;25H[38;5;130mif[m(!length.empty()){[6;25Hcolumn2.push_back(stoi(length));[7;17H}[8;25H[38;5;130melse[m{column2.push_back([31m0[m);}[10;25Hgetline(infile, title,[31m';'[m);[11;25Hcolumn3.push_back(title);[12;25Hgetline(infile, subject,[31m';'[m);
               [9Ccolumn4.push_back(subject);
                        getline(infile, actor,[31m';'[m);[15;11H              column5.push_back(actor);[15;50H[K[16;10H               getline(infile, actress,[31m';'[m);[16;54H[K[17;11H              column6.push_back(actress);[18;10H               getline(infile, director,[31m';'[m);[19;9H                column7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[21;14H   [34m//      column8.push_back(stoi(popularity));[m[22;7H                  getline(infile, awards,[31m';'[m);[23;25Hgetline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[24;52H[K[25;5H            }[25;18H[K[26;5H    [38;5;130mfor[m( [32mint[m y:column1){[26;29H[K[27;1H                sum+=y;[27;25H[K[28;5H    } [28;11H[K[29;5H    cout << sum<<endl;[29;28H[K[30;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[30;60H[K[31;5H    cout <<x<<endl;[31;24H[K[32;1H}
        [33;9H[K[34;105H63,15-22      Bot[31;22H[?25h[?25l[34;95H~@k[31;22H[34;95H   [31;23H[34;109H6-23[31;23H[?25h[?25l[34;95H~@k[31;23H[34;95H   [31;23H[?25h[?25l[34;95H~@k[31;23H[34;95H   [30;23H[34;106H2[30;23H[?25h[?25l[34;95H~@k[30;23H[34;95H   [29;23H[34;106H1[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [28;10H[34;106H0,3-10 [28;10H[?25h[?25l[34;95H~@k[28;10H[34;95H   [27;23H[34;105H59,9-23[27;23H[?25h[?25l[34;95H~@k[27;23H[34;95H   [26;23H[34;106H8,16-23[26;23H[?25h[?25l[34;95H~@k[26;23H[34;95H   [27;23H[34;106H9,9-23 [27;23H[?25h[?25l[34;95H~@k[27;23H[34;95H   [27;22H[34;108H8-22[27;22H[?25h[?25l[34;95H~@k[27;22H[34;95H   [27;21H[34;108H7-21[27;21H[?25h[?25l[34;95H~@k[27;21H[34;95H   [27;20H[34;108H6-20[27;20H[?25h[?25l[34;95H~@k[27;20H[34;95H   [27;19H[34;108H5-19[27;19H[?25h[?25l[34;95H~@k[27;19H[34;95H   [27;20H[34;108H6-20[27;20H[?25h[?25l[34;95H^I[27;20H[34;95H  [27;20H[?25h[?25l[34;95Hi[27;20H[34;95H [27;20H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H59,6-20[7CBot[27;20H[?25h[?25l[34;108H7-21[27;21H[?25h[?25l[34;108H8-22[27;22H[?25h[?25ly;[27;23H[K[34;108H7-21[27;21H[?25h[?25ly;[27;22H[K[34;108H6-20[27;20H[?25h[?25ly;[27;21H[K[34;108H5-19[27;19H[?25h[?25l[34;108H6-20[27;20H[?25h[?25l;[27;20H[K[34;108H5-19[27;19H[?25h[?25l;[27;19H[K[34;108H4-18[27;18H[?25h[?25l;[27;18H[K[34;108H3-17[27;17H[?25h[?25l[34;108H4-18[27;18H[?25h[?25l[34;108H3-17[27;17H[?25h[?25l[34;108H4-18[27;18H[?25h[?25l[27;17H[K[34;108H3-17[27;17H[?25h[?25lc[34;108H4-18[27;18H[?25h[?25lo[34;108H5-19[27;19H[?25h[?25lu[34;108H6-20[27;20H[?25h[?25lt[34;108H7-21[27;21H[?25h[?25l[34;108H8-22[27;22H[?25h[?25l<[34;108H9-23[27;23H[?25h[?25l<[34;108H10-24[27;24H[?25h[?25l[34;109H1-25[27;25H[?25h[?25ly[34;109H2-26[27;26H[?25h[?25l[34;106H8,19[26;26H[?25h[?25l[34;106H7,4-18 [25;18H[?25h[?25l[34;106H8,19-26[26;26H[?25h[?25l[26;12H[106m([14C)[m[34;108H20-27[26;27H[?25h[?25l[26;12H([14C)[106m{[28;9H}[m[34;109H1-28[26;28H[?25h[?25l{[28;9H}[34;106H7,4-18 [25;18H[?25h[?25l[34;106H6,7-2[24;28H[?25h[?25l[34;106H5[23;28H[?25h[?25l[34;106H4[22;28H[?25h[?25l[34;106H3,9[21;28H[?25h[?25l[34;108H8-27[21;27H[?25h[?25l[34;108H7-26[21;26H[?25h[?25l[34;106H2,5[20;26H[?25h[?25l[34;108H4-25[20;25H[?25h[?25l[34;106H3,6[21;25H[?25h[?25l[34;108H5-19[21;19H[?25h[?25l/       column8.push_back(stoi(popularity));[34;108H4-18[21;18H[?25h[?25l [34;108H3-17[21;17H[?25h[?25l[34;108H4-25[21;25H[?25h[?25l[34;108H5-26[21;26H[?25h[?25l[34;108H4-25[21;25H[?25h[?25l[22;33r[22;1H[L[1;34r[21;25H[K[22;25Hcolumn8.push_back(stoi(popularity));[34;105H[K[34;105H54,4-25[7C96%[22;25H[?25h[?25l[34;106H3[21;25H[?25h[?25li[34;108H5-26[21;26H[?25h[?25l[38;5;130mif[m[34;108H6-27[21;27H[?25h[?25l([34;108H7-28[21;28H[?25h[?25l)[106m()[m[34;108H8-29[21;29H[?25h[?25l[34;108H7-28[21;28H[?25h[?25l[106mI[m)I[106m)[m[34;108H8-29[21;29H[?25h[?25l[106mp[m)p[106m)[m[34;108H9-30[21;30H[?25h[?25l[106mo[m)o[106m)[m[34;108H10-31[21;31H[?25h[?25l[106mp[m)p[106m)[m[34;109H1-32[21;32H[?25h[?25l[106mu[m)u[106m)[m[34;109H2-33[21;33H[?25h[?25l[106ml[m)l[106m)[m[34;109H3-34[21;34H[?25h[?25l[106ma[m)a[106m)[m[34;109H4-35[21;35H[?25h[?25l[106mr[m)r[106m)[m[34;109H5-36[21;36H[?25h[?25l[106mi[m)i[106m)[m[34;109H6-37[21;37H[?25h[?25l[106mt[m)t[106m)[m[34;109H7-38[21;38H[?25h[?25l[106my[m)y[106m)[m[34;109H8-39[21;39H[?25h[?25l)[21;39H[K[21;38H[106m)[m[34;109H7-38[21;38H[?25h[?25l[21;27H([10C)[34;109H6-37[21;37H[?25h[?25l[34;109H5-36[21;36H[?25h[?25l[34;109H4-35[21;35H[?25h[?25l[34;109H3-34[21;34H[?25h[?25l[34;109H2-33[21;33H[?25h[?25l[34;109H1-32[21;32H[?25h[?25l[34;109H0-31[21;31H[?25h[?25l[34;108H9-30 [21;30H[?25h[?25l[34;108H8-29[21;29H[?25h[?25lpopularit)[21;38H[K[21;27H[106m([9C)[m[34;108H7-28[21;28H[?25h[?25l!populari[106mt[m)[21;27H([9Ct[34;108H8-29[21;29H[?25h[?25l[34;108H9-30[21;30H[?25h[?25l[34;108H10-31[21;31H[?25h[?25l[34;109H1-32[21;32H[?25h[?25l[34;109H2-33[21;33H[?25h[?25l[34;109H3-34[21;34H[?25h[?25l[34;109H4-35[21;35H[?25h[?25l[34;109H5-36[21;36H[?25h[?25l[34;109H6-37[21;37H[?25h[?25l[21;27H[106m([10C)[m[34;109H7-38[21;38H[?25h[?25l[106my[m)y[106m)[m[34;109H8-39[21;39H[?25h[?25l[106m.[m).[106m)[m[34;109H9-40[21;40H[?25h[?25l[106me[m)e[106m)[m[34;108H20-41[21;41H[?25h[?25l[106mm[m)m[106m)[m[34;109H1-42[21;42H[?25h[?25l[106mp[m)p[106m)[m[34;109H2-43[21;43H[?25h[?25l[106mt[m)t[106m)[m[34;109H3-44[21;44H[?25h[?25l[106my[m)y[106m)[m[34;109H4-45[21;45H[?25h[?25l[106m([m)[21;27H([18C[106m)[m[34;109H5-46[21;46H[?25h[?25l[1C)[21;27H[106m([m[17C()[106m)[m[34;109H6-47[21;47H[?25h[?25l[34;109H7-48[21;48H[?25h[?25l{[21;27H([19C)[106m{[26;17H}[m[34;109H8-49[21;49H[?25h[?25l}[106m}[m[26;17H}[34;109H9-50[21;50H[?25h[?25l[34;109H8-49[21;49H[?25h[?25l[22;33r[22;1H[L[1;34r[21;49H[K[22;25H}[34;105H[K[34;105H54,4-25[7C94%[22;25H[106m}[?25h[?25l[23;33r[m[23;1H[L[1;34r[22;25H[K[23;25H}[34;105H[K[34;105H55,4-25[7C91%[23;25H[106m}[?25h[?25l[m[21;48H{[23;25H}[34;106H4[22;25H[?25h[?25l[34;108H5-33[22;33H[?25h[?25lc[34;108H6-34[22;34H[?25h[?25lo[34;108H7-35[22;35H[?25h[?25ll[34;108H8-36[22;36H[?25h[?25lu[34;108H9-37[22;37H[?25h[?25lm[34;108H10-38[22;38H[?25h[?25ln[34;109H1-39[22;39H[?25h[?25l8[34;109H2-40[22;40H[?25h[?25l.[34;109H3-41[22;41H[?25h[?25l[22;40H[K[34;109H2-40[22;40H[?25h[?25l[22;39H[K[34;109H1-39[22;39H[?25h[?25l[22;38H[K[34;109H0-38[22;38H[?25h[?25l[22;37H[K[34;108H9-37 [22;37H[?25h[?25l[22;36H[K[34;108H8-36[22;36H[?25h[?25l[22;35H[K[34;108H7-35[22;35H[?25h[?25l[22;34H[K[34;108H6-34[22;34H[?25h[?25l[22;33H[K[34;108H5-33[22;33H[?25h[?25l[34;108H4-25[22;25H[?25h[?25l[34;108H3-17[22;17H[?25h[?25l[34;108H2-9 [22;9H[?25h[?25l[34;108H1  [22;1H[?25h[?25l[21;33r[33;1H
[1;34r[21;25H[38;5;130mif[m(!popularity.empty()){[33;9Hcout <<x<<endl;[34;105H[K[34;105H53,28-49      94%[21;48H[106m{[22;25H}[21;49H[?25h[?25l[m[34;106H4,5-26 [22;26H[?25h[?25l[22;25H[K[21;48H{[34;108H4-25[22;25H[?25h[?25l[34;106H5[23;25H[?25h[?25l[34;106H4[22;25H[?25h[?25l[34;108H3-17[22;17H[?25h[?25l[34;108H2-9 [22;9H[?25h[?25l[34;108H1  [22;1H[?25h[?25l[21;33r[33;1H
[1;34r[21;25H[38;5;130mif[m(!popularity.empty()){[33;1H}[34;105H[K[34;105H53,28-49      96%[21;48H[106m{[26;17H}[21;49H[?25h[?25l[m{[26;17H}[34;106H4[22;49H[?25h[?25l[34;109H9-50[22;50H[?25h[?25l[34;108H30-51[22;51H[?25h[?25l[34;109H1-52[22;52H[?25h[?25l[34;109H2-53[22;53H[?25h[?25l[34;109H3-54[22;54H[?25h[?25l[34;109H4-55[22;55H[?25h[?25l[34;109H5-56[22;56H[?25h[?25l[34;109H6-57[22;57H[?25h[?25l[22;47H[106m([10C)[m[34;109H7-58[22;58H[?25h[?25l[22;42H[106m([mstoi([10C)[106m)[m[34;109H8-59[22;59H[?25h[?25l[34;109H9-60[22;60H[?25h[?25l[22;42H([16C)[34;108H40-61[22;61H[?25h[?25l}[21;48H[106m{[22;61H}[m[34;109H1-62[22;62H[?25h[?25l[23;33r[23;1H[L[1;34r[34;105H[K[34;105H55,4-25[7C94%[21;48H{[22;61H}[23;25H[?25h[?25le[34;108H5-26[23;26H[?25h[?25ll[34;108H6-27[23;27H[?25h[?25le[34;108H7-28[23;28H[?25h[?25l[23;27H[K[34;108H6-27[23;27H[?25h[?25ls[34;108H7-28[23;28H[?25h[?25l[38;5;130melse[m[34;108H8-29[23;29H[?25h[?25l{[106m{[27;17H}[m[34;108H9-30[23;30H[?25h[?25l}[106m}[m[27;17H}[34;108H10-31[23;31H[?25h[?25l[34;108H9-30 [23;30H[?25h[?25l[106mc[m}c[106m}[m[34;108H10-31[23;31H[?25h[?25l[106mo[m}o[106m}[m[34;109H1-32[23;32H[?25h[?25l[106ml[m}l[106m}[m[34;109H2-33[23;33H[?25h[?25l[106mu[m}u[106m}[m[34;109H3-34[23;34H[?25h[?25l[106mm[m}m[106m}[m[34;109H4-35[23;35H[?25h[?25l[106mn[m}n[106m}[m[34;109H5-36[23;36H[?25h[?25l}[23;36H[K[23;35H[106m}[m[34;109H4-35[23;35H[?25h[?25l}[23;35H[K[23;34H[106m}[m[34;109H3-34[23;34H[?25h[?25l[106mm[m}m[106m}[m[34;109H4-35[23;35H[?25h[?25l[106mn[m}n[106m}[m[34;109H5-36[23;36H[?25h[?25l[106m.[m}.[106m}[m[34;109H6-37[23;37H[?25h[?25l[106mp[m}p[106m}[m[34;109H7-38[23;38H[?25h[?25l[106mu[m}u[106m}[m[34;109H8-39[23;39H[?25h[?25l[106ms[m}s[106m}[m[34;109H9-40[23;40H[?25h[?25l[106mh[m}h[106m}[m[34;108H20-41[23;41H[?25h[?25l[106m_[m}_[106m}[m[34;109H1-42[23;42H[?25h[?25l[106mv[m}v[106m}[m[34;109H2-43[23;43H[?25h[?25l}[23;43H[K[23;42H[106m}[m[34;109H1-42[23;42H[?25h[?25l[106mb[m}b[106m}[m[34;109H2-43[23;43H[?25h[?25l[106ma[m}a[106m}[m[34;109H3-44[23;44H[?25h[?25l[106mc[m}c[106m}[m[34;109H4-45[23;45H[?25h[?25l[106mk[m}k[106m}[m[34;109H5-46[23;46H[?25h[?25l[106m([m}([106m}[m[34;109H6-47[23;47H[?25h[?25l[106m)[m})[106m}[m[34;109H7-48[23;48H[?25h[?25l[23;29H{[16C[106m()[m}[34;109H6-47[23;47H[?25h[?25l[31m[106m0[m)}[31m0[m[106m)[m[34;109H7-48[23;48H[?25h[?25l[23;29H[106m{[m[16C([1C)[106m}[m[34;109H8-49[23;49H[?25h[?25l[106m;[m};[106m}[m[34;109H9-50[23;50H[?25h[?25l[34;108H30-51[23;51H[?25h[?25l[23;29H{[20C}[24;32H[106m([18C)[m[34;106H6[24;51H[?25h[?25l[24;32H([18C)[25;32H[106m([18C)[m[34;106H7[25;51H[?25h[?25l[25;32H([18C)[34;106H8[26;51H[?25h[?25l[34;106H9,4-18 [27;18H[?25h[?25l[28;28H[106m{[30;9H}[m[34;105H60,22-29[28;29H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H61,12-26      97%[27;28H{[29;9H}[28;26H[?25h[?25l[27;28H[106m{[29;9H}[m[34;106H0,22-29[27;29H[?25h[?25l[34;109H1-28[27;28H[?25h[?25l[27;12H[106m([14C)[m{[29;9H}[34;109H0-27[27;27H[?25h[?25l)[106m{[m[27;28H[K[27;26H[106m)[m{[34;108H19-26[27;26H[?25h[?25l[106m8[m){8[106m)[m[34;108H20-27[27;27H[?25h[?25l[27;12H([14C)[34;106H1,12-26[28;26H[?25h[?25l<[34;109H3-27[28;27H[?25h[?25l<[34;109H4-28[28;28H[?25h[?25le[34;109H5-29[28;29H[?25h[?25ln[34;109H6-30[28;30H[?25h[?25ld[34;109H7-31[28;31H[?25h[?25ll[34;109H8-32[28;32H[?25h[?25l;[34;109H9-33[28;33H[?25h[34;1H[K[28;32H[?25l[34;95H^[[28;32H[34;95H  [28;33H[34;105H61,18-32      97%[28;32H[?25h[?25l[34;95H:[28;32H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 67L, 1601C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:55:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn7[m[Kâ€™?
   55 |    else{[01;31m[Kcolumn[m[K.push_back(0);}
      |         [01;31m[K^~~~~~[m[K
      |         [32m[Kcolumn7[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:01:09 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 67L, 1601C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hgetline(infile, length,[31m';'[m);[3;25H[38;5;130mif[m(!length.empty()){[4;25Hcolumn2.push_back(stoi(length));[5;17H}[6;25H[38;5;130melse[m{column2.push_back([31m0[m);}[8;25Hgetline(infile, title,[31m';'[m);[9;25Hcolumn3.push_back(title);[10;25Hgetline(infile, subject,[31m';'[m);[11;25Hcolumn4.push_back(subject);[12;25Hgetline(infile, actor,[31m';'[m);
               [9Ccolumn5.push_back(actor);
                        getline(infile, actress,[31m';'[m);[15;11H              column6.push_back(actress);[15;52H[K[16;10H               getline(infile, director,[31m';'[m);[16;55H[K[17;11H              column7.push_back(director);[18;10H               getline(infile,popularity,[31m';'[m);[19;9H                [38;5;130mif[m(!popularity.empty()){
                        column8.push_back(stoi(popularity));}[21;14H           [38;5;130melse[m{column.push_back([31m0[m);}[22;7H                  getline(infile, awards,[31m';'[m);[23;25Hgetline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[24;52H[K[25;5H            }[25;18H[K[26;5H    [38;5;130mfor[m( [32mint[m y:column8){[26;29H[K[27;1H                cout << y<<endl;[27;33H[K[28;5H    } [28;11H[K[29;5H    cout << sum<<endl;[29;28H[K[30;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[30;60H[K[31;5H    cout <<x<<endl;[31;24H[K[32;1H}
        [33;9H[K[34;105H61,18-32      Bot[27;32H[?25h[?25l[34;95H~@k[27;32H[34;95H   [26;28H[106m{[28;9H}[m[34;106H0,21-28[26;28H[?25h[?25l[34;95H~@k[26;28H[34;95H   [25;17H[26;28H{[28;9H}[34;105H59,3-17 [25;17H[?25h[?25l[34;95H~@k[25;17H[34;95H   [24;32H[34;106H8,11-32[24;32H[?25h[?25l[34;95H~@k[24;32H[34;95H   [23;32H[106m([18C)[m[34;106H7[23;32H[?25h[?25l[34;95H~@k[23;32H[34;95H   [22;32H[106m([18C)[m[23;32H([18C)[34;106H6[22;32H[?25h[?25l[34;95H~@k[22;32H[34;95H   [21;32H[22;32H([18C)[34;106H5[21;32H[?25h[?25l[34;95H~@k[21;32H[34;95H   [21;33H[34;109H2-33[21;33H[?25h[?25l[34;95H~@k[21;33H[34;95H   [21;34H[34;109H3-34[21;34H[?25h[?25l[34;95H~@k[21;34H[34;95H   [21;35H[34;109H4-35[21;35H[?25h[?25l[34;95H~@k[21;35H[34;95H   [21;36H[34;109H5-36[21;36H[?25h[?25l[34;95H*[21;36H[34;1H/\<push_back\> [34;16H[K[34;1H[24;34H[34;105H58,13-34      Bot[24;34H[?25h[?25l[34;95Hi[24;34H[34;95H [24;34H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H58,13-34      Bot[24;34H[?25h[?25l[34;106H7[23;34H[?25h[?25l[34;106H6[22;34H[?25h[?25l[34;106H5[21;34H[?25h[?25l[34;106H4[20;34H[?25h[?25l[34;106H3[19;34H[?25h[?25l[34;106H4[20;34H[?25h[?25l[34;106H5[21;34H[?25h[?25l[34;109H4-35[21;35H[?25h[?25l[34;109H5-36[21;36H[?25h[?25l*.push_back([31m0[m);}[34;109H6-37[21;37H[?25h[?25l.push_back([31m0[m);}[21;51H[K[34;109H5-36[21;36H[?25h[?25l8.push_back([31m0[m);}[34;109H6-37[21;37H[?25h[34;1H[K[21;36H[?25l[34;95H^[[21;36H[34;95H  [21;37H[34;105H55,15-36      Bot[21;36H[?25h[?25l[34;95H:[21;36H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 67L, 1602C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
68
68
79
6
14
68
14
28
6
32
81
17
46
49
6
39
51
2
62
68
15
8
31
79
23
80
53
88
88
19
20
42
62
36
14
38
64
18
52
11
7
11
60
67
8
35
82
59
88
67
53
85
5
19
3
61
28
82
68
68
79
69
7
51
52
81
41
83
11
55
79
20
8
76
75
8
15
27
61
37
40
39
9
3
70
70
6
62
25
66
37
16
54
0
81
71
30
34
70
83
8
29
39
48
57
9
8
44
47
14
7
40
50
8
7
71
11
84
48
66
36
74
52
49
0
69
59
55
2
18
88
31
80
68
79
7
2
10
83
55
72
49
25
1
32
7
15
2
74
42
14
6
24
31
32
49
88
26
19
33
34
57
69
69
67
16
16
71
45
88
31
84
20
6
54
5
65
0
10
66
35
36
2
81
77
29
0
12
38
57
69
72
45
49
13
83
62
67
86
44
6
15
10
48
83
50
45
76
73
66
9
58
17
64
29
13
28
82
70
4
62
18
6
1
28
19
40
75
63
73
80
33
71
63
28
54
51
50
40
50
14
61
65
23
34
32
15
22
87
85
86
6
8
32
72
16
77
69
43
44
63
66
22
50
57
12
7
0
77
73
74
65
20
39
37
51
87
15
49
72
4
66
11
20
31
27
13
82
3
7
48
57
71
67
81
81
22
74
35
36
77
75
72
68
20
18
23
33
24
16
53
15
14
61
81
25
4
36
5
33
28
16
24
83
28
40
15
15
87
59
66
87
86
6
5
19
62
10
12
24
39
12
72
71
57
41
60
78
7
81
33
12
30
84
82
39
69
48
55
87
34
23
20
10
42
1
5
32
54
34
51
3
41
64
20
60
41
45
80
48
8
41
38
32
20
14
80
8
8
52
80
28
1
47
67
2
84
83
55
17
76
64
66
42
33
44
4
72
52
84
51
79
75
43
6
15
34
62
1
78
44
31
26
80
10
30
8
76
33
88
66
32
45
57
66
0
72
83
35
74
67
70
81
64
40
82
72
73
73
85
62
60
8
88
50
24
6
44
49
64
75
77
76
56
43
3
60
44
69
11
8
20
27
62
62
74
66
19
82
25
11
40
2
8
17
20
59
81
61
58
73
24
14
53
66
1
6
58
59
82
86
85
65
61
5
36
23
8
51
9
41
81
46
74
82
6
23
14
22
53
49
28
61
55
84
84
29
49
16
57
57
48
84
2
0
3
27
87
10
32
6
60
21
48
78
75
50
51
76
23
62
73
34
22
25
66
12
31
2
50
32
53
42
20
0
9
77
19
71
70
11
5
61
33
63
71
9
42
10
23
68
65
59
62
51
27
5
8
61
60
1
45
6
73
17
79
18
76
5
58
88
80
45
6
3
10
47
44
74
7
43
43
29
3
34
42
19
42
66
14
51
8
8
68
82
76
84
54
8
8
6
81
84
59
88
82
76
36
40
71
69
25
26
11
69
69
69
0
87
77
49
1
3
21
29
27
73
8
25
71
41
78
78
50
14
66
35
53
62
55
15
23
67
79
82
44
4
62
2
60
71
28
11
4
56
7
65
66
62
7
24
19
78
8
49
56
43
36
75
86
80
69
76
21
21
57
18
1
27
41
63
2
3
47
4
34
9
31
52
83
40
73
84
53
62
10
13
54
54
80
80
52
49
2
55
1
56
75
55
17
13
83
20
2
80
70
25
73
31
32
36
86
63
36
71
83
74
54
24
65
32
75
77
63
78
9
70
50
33
4
72
44
15
70
77
61
6
62
68
8
38
6
20
34
65
66
69
0
28
18
71
27
8
81
41
69
75
6
71
30
2
57
8
59
6
50
51
18
26
11
17
47
39
35
34
3
78
80
8
3
81
40
85
9
17
88
59
79
70
8
41
29
3
77
60
65
27
25
25
61
51
10
6
66
73
35
50
66
29
80
48
33
70
45
72
73
38
29
88
28
44
2
5
50
11
61
75
58
27
0
25
11
87
78
57
37
40
65
45
10
47
25
85
87
85
26
64
29
75
68
74
0
14
62
26
65
40
32
47
67
62
8
72
45
39
6
53
10
0
23
75
8
36
21
88
47
27
12
22
75
12
64
8
68
66
62
3
50
87
22
83
12
31
59
0
39
28
59
80
9
88
77
42
83
46
8
9
50
23
67
7
36
45
3
6
6
66
35
6
74
6
29
59
6
54
75
69
73
28
88
13
80
29
6
5
66
75
49
27
11
73
43
19
4
17
20
58
59
5
17
86
53
80
29
22
35
6
28
24
7
24
42
8
75
10
79
5
84
23
48
26
30
24
41
4
17
60
41
60
20
79
13
88
86
42
20
65
26
72
72
12
42
48
71
59
80
79
9
46
30
27
1
32
28
72
74
69
88
62
4
38
7
54
62
58
20
78
13
74
11
86
22
67
70
77
11
36
3
84
5
37
30
24
11
40
45
41
29
31
51
2
30
20
36
8
66
25
45
10
8
7
67
41
8
13
36
64
32
8
42
75
82
31
57
52
64
88
37
9
67
43
61
36
67
52
46
30
39
75
41
2
5
66
6
35
54
74
72
81
87
60
80
54
82
61
61
62
79
26
80
21
21
54
13
44
32
60
74
66
87
85
76
4
78
5
44
65
16
33
9
2
79
3
71
41
42
7
51
53
79
53
52
62
57
25
68
4
68
83
56
4
4
56
10
83
81
3
37
6
7
19
57
58
30
7
8
45
47
65
49
85
75
33
39
16
64
71
82
59
60
83
64
50
73
84
37
70
67
86
48
75
9
39
9
13
24
82
74
3
46
23
62
64
30
67
43
59
39
67
40
47
51
12
24
64
1
54
39
17
51
23
62
33
76
61
84
88
9
5
82
38
68
12
6
68
57
32
54
3
29
49
32
27
72
4
85
57
69
0
17
18
71
78
84
10
0
73
34
7
8
78
8
14
84
32
1
35
72
35
72
38
26
83
68
4
16
60
68
45
8
7
88
85
21
63
24
47
7
16
75
10
25
31
76
64
82
29
40
1
88
46
1
8
31
6
72
18
61
8
54
88
70
77
6
36
54
53
75
50
3
31
70
26
26
63
8
12
50
52
43
88
6
81
6
39
84
63
30
41
49
6
25
11
33
7
27
86
36
84
45
84
64
83
45
85
50
31
65
40
59
6
9
60
60
74
36
26
0
49
55
29
27
49
4
48
78
35
6
34
45
23
63
37
76
46
16
25
34
37
35
32
2
28
12
44
17
54
69
27
28
62
72
8
75
6
61
52
68
51
11
47
42
7
50
3
9
71
57
29
88
25
21
45
59
50
13
70
26
16
88
75
28
31
12
24
71
23
49
71
29
52
20
82
87
63
22
58
22
8
33
61
39
69
25
6
83
33
75
60
22
77
36
8
48
56
63
8
79
65
79
19
21
48
80
80
43
53
43
21
66
62
78
52
17
40
47
5
7
5
29
24
54
8
23
7
41
17
51
56
51
35
9
4
24
79
63
82
86
2
6
6
22
6
40
82
5
21
11
53
26
68
54
55
25
45
54
26
54
25
81
65
26
23
54
70
79
84
60
0
18
3
1
60
65
6
68
67
3
49
65
52
81
3
34
38
76
29
24
54
56
6
56
86
26
40
66
28
3
12
14
44
1
26
41
2
45
80
72
23
75
5
77
7
79
30
70
38
31
83
68
47
13
19
76
44
1
44
70
73
23
7
68
66
49
3
58
3
24
28
87
22
78
8
35
3
48
5
73
28
75
77
16
30
23
19
43
19
18
4
0
0
3277857
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ [Ag++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:01:45 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 67L, 1602C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hgetline(infile, length,[31m';'[m);[3;25H[38;5;130mif[m(!length.empty()){[4;25Hcolumn2.push_back(stoi(length));[5;17H}[6;25H[38;5;130melse[m{column2.push_back([31m0[m);}[8;25Hgetline(infile, title,[31m';'[m);[9;25Hcolumn3.push_back(title);[10;25Hgetline(infile, subject,[31m';'[m);[11;25Hcolumn4.push_back(subject);[12;25Hgetline(infile, actor,[31m';'[m);
               [9Ccolumn5.push_back(actor);
                        getline(infile, actress,[31m';'[m);[15;11H              column6.push_back(actress);[15;52H[K[16;10H               getline(infile, director,[31m';'[m);[16;55H[K[17;11H              column7.push_back(director);[18;10H               getline(infile,popularity,[31m';'[m);[19;9H                [38;5;130mif[m(!popularity.empty()){
                        column8.push_back(stoi(popularity));}[21;14H           [38;5;130melse[m{column8.push_back([31m0[m);}[22;7H                  getline(infile, awards,[31m';'[m);[23;25Hgetline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[24;52H[K[25;5H            }[25;18H[K[26;5H    [38;5;130mfor[m( [32mint[m y:column8){[26;29H[K[27;1H                cout << y<<endl;[27;33H[K[28;5H    } [28;11H[K[29;5H    cout << sum<<endl;[29;28H[K[30;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[30;60H[K[31;5H    cout <<x<<endl;[31;24H[K[32;1H}
        [33;9H[K[34;105H55,15-36      Bot[21;36H[?25h[?25l[34;95H~@k[21;36H[34;95H   [20;36H[34;106H4[20;36H[?25h[?25l[34;95H~@k[20;36H[34;95H   [19;36H[34;106H3[19;36H[?25h[?25l[34;95H~@k[19;36H[34;95H   [20;36H[34;106H4[20;36H[?25h[?25l[34;95H~@k[20;36H[34;95H   [21;36H[34;106H5[21;36H[?25h[?25l[34;95H~@k[21;36H[34;95H   [22;36H[34;106H6[22;36H[?25h[?25l[34;95H~@k[22;36H[34;95H   [23;36H[34;106H7[23;36H[?25h[?25l[34;95H~@k[23;36H[34;95H   [24;36H[34;106H8[24;36H[?25h[?25l[34;95H~@k[24;36H[34;95H   [25;17H[34;106H9,3-17 [25;17H[?25h[?25l[34;95H~@k[25;17H[34;95H   [26;28H[106m{[28;9H}[m[34;105H60,21-28[26;28H[?25h[?25l[34;95H~@k[26;28H[34;95H   [27;32H[26;28H{[28;9H}[34;106H1,18-32[27;32H[?25h[?25l[34;95H~@k[27;32H[34;95H   [28;10H[34;106H2,3-10 [28;10H[?25h[?25l[34;95H~@k[28;10H[34;95H   [27;32H[34;106H1,18-32[27;32H[?25h[?25l[34;95H~@k[27;32H[34;95H   [28;10H[34;106H2,3-10 [28;10H[?25h[?25l[34;95H~@k[28;10H[34;95H   [28;9H[26;28H[106m{[28;9H}[m[34;108H2-9 [28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;8H[26;28H{[28;9H}[34;108H1-8[28;8H[?25h[?25l[34;95H/[28;8H[34;1H[K[34;1H/[?2004h[?25h/[?25l[1;33r[1;1H[9L[1;34r[2;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[3;25Hgetline(infile, year,[31m';'[m);[5;25H[38;5;130mif[m (!year.empty()){[6;33Hcolumn1.[7mpush_back[m(stoi(year));[7;9H}[8;25H[38;5;130melse[m{column1.push_back([31m0[m); }[34;1H[K[34;105H31,13-41      73%//[34;105H[K[34;3H[?25h[?25l[34;2H[K[1;33r[1;1H[9M[1;34r[25;17H}[26;9H[38;5;130mfor[m( [32mint[m y:column8){[27;17Hcout << y<<endl;[28;9H}[29;9Hcout << sum<<endl;[30;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[31;9Hcout <<x<<endl;
}[34;1H[K[34;105H62,1[10CBot/[34;105H[K[34;2H[?25h [?25l[28;1H[34;105H62,1[10CBot[28;1H[?25h[?25l[34;95Hi[28;1H[34;95H [28;1H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H62,1[10CBot[28;1H[?25h[?25l/[34;108H2[28;2H[?25h[?25l[34m//      } [m[34;108H3[28;3H[?25h[?25l[34;106H1,1[27;1H[?25h[?25l/[34;108H2[27;2H[?25h[?25l[34m//              cout << y<<endl;[m[34;108H3[27;3H[?25h[?25l[34;106H0,1[26;1H[?25h[?25l/[34;108H2[26;2H[?25h[?25l[34m//      for( int y:column8){[m[34;108H3[26;3H[?25h[?25l[34;106H1[27;3H[?25h[?25l[34;106H2[28;3H[?25h[?25l[26;28H[34m[106m{[28;9H}[m[34;108H4-9[28;9H[?25h[?25l[34;108H5-10[28;10H[?25h[?25l[1;33r[33;1H
[1;34r[28;33r[28;1H[L[1;34r[27;10H[K[28;1H[34m//       [m[34;105H[K[34;105H63,4-9[8CBot[25;28H[34m{[27;9H}[28;9H[?25h[?25l[m[28;3H[K[34;106H4,2[29;9H[?25h[?25l[34;108H3-10[29;10H[?25h[?25l[34;108H4-11[29;11H[?25h[?25l[34;108H5-12[29;12H[?25h[?25l[34;108H6-13[29;13H[?25h[?25l[34;108H7-14[29;14H[?25h[?25l[34;108H8-15[29;15H[?25h[?25l[34;108H9-16[29;16H[?25h[?25l[34;108H10-17[29;17H[?25h[?25l[34;109H1-18[29;18H[?25h[?25l[34;109H2-19[29;19H[?25h[?25l[34;109H3-20[29;20H[?25h[?25l[34;109H4-21[29;21H[?25h[?25l[34;109H5-22[29;22H[?25h[?25l[34;109H6-23[29;23H[?25h[?25l[34;109H7-24[29;24H[?25h[?25l[34;109H8-25[29;25H[?25h[?25l[34;109H9-26[29;26H[?25h[?25l;[29;26H[K[34;109H8-25[29;25H[?25h[?25l;[29;25H[K[34;109H7-24[29;24H[?25h[?25l;[29;24H[K[34;109H6-23[29;23H[?25h[?25l;[29;23H[K[34;109H5-22[29;22H[?25h[?25l;[29;22H[K[34;109H4-21[29;21H[?25h[?25l;[29;21H[K[34;109H3-20[29;20H[?25h[?25l;[29;20H[K[34;109H2-19[29;19H[?25h[?25l;[29;19H[K[34;109H1-18[29;18H[?25h[?25l;[29;18H[K[34;109H0-17[29;17H[?25h[?25l;[29;17H[K[34;108H9-16 [29;16H[?25h[?25l;[29;16H[K[34;108H8-15[29;15H[?25h[?25l;[29;15H[K[34;108H7-14[29;14H[?25h[?25l;[29;14H[K[34;108H6-13[29;13H[?25h[?25l;[29;13H[K[34;108H5-12[29;12H[?25h[?25l;[29;12H[K[34;108H4-11[29;11H[?25h[?25l;[29;11H[K[34;108H3-10[29;10H[?25h[?25l;[29;10H[K[34;108H2-9 [29;9H[?25h[?25li;[34;108H3-10[29;10H[?25h[?25ln;[34;108H4-11[29;11H[?25h[?25l[32mint[m;[34;108H5-12[29;12H[?25h[?25l ;[34;108H6-13[29;13H[?25h[?25lc;[34;108H7-14[29;14H[?25h[?25lo;[34;108H8-15[29;15H[?25h[?25lu;[34;108H9-16[29;16H[?25h[?25lt;[34;108H10-17[29;17H[?25h[?25l;[29;17H[K[34;108H9-16 [29;16H[?25h[?25l;[29;16H[K[34;108H8-15[29;15H[?25h[?25l;[29;15H[K[34;108H7-14[29;14H[?25h[?25l;[29;14H[K[34;108H6-13[29;13H[?25h[?25l;[29;13H[K[34;108H5-12[29;12H[?25h[?25lin;[29;12H[K[34;108H4-11[29;11H[?25h[?25l;[29;11H[K[34;108H3-10[29;10H[?25h[?25l;[29;10H[K[34;108H2-9 [29;9H[?25h[?25ls;[34;108H3-10[29;10H[?25h[?25lo;[34;108H4-11[29;11H[?25h[?25lr;[34;108H5-12[29;12H[?25h[?25lt;[34;108H6-13[29;13H[?25h[?25l(;[34;108H7-14[29;14H[?25h[?25l);[106m()[m[34;108H8-15[29;15H[?25h[?25l[34;108H7-14[29;14H[?25h[?25l[106mc[m);c[106m)[m[34;108H8-15[29;15H[?25h[?25l[106mo[m);o[106m)[m[34;108H9-16[29;16H[?25h[?25l[106ml[m);l[106m)[m[34;108H10-17[29;17H[?25h[?25l[106mu[m);u[106m)[m[34;109H1-18[29;18H[?25h[?25l[106mm[m);m[106m)[m[34;109H2-19[29;19H[?25h[?25l[106mn[m);n[106m)[m[34;109H3-20[29;20H[?25h[?25l[106m8[m);8[106m)[m[34;109H4-21[29;21H[?25h[?25l[106m.[m);.[106m)[m[34;109H5-22[29;22H[?25h[?25l[106mb[m);b[106m)[m[34;109H6-23[29;23H[?25h[?25l[106me[m);e[106m)[m[34;109H7-24[29;24H[?25h[?25l[106mg[m);g[106m)[m[34;109H8-25[29;25H[?25h[?25l[106mi[m);i[106m)[m[34;109H9-26[29;26H[?25h[?25l[106mn[m);n[106m)[m[34;108H20-27[29;27H[?25h[?25l[106m([m);[29;13H([14C[106m)[m[34;109H1-28[29;28H[?25h[?25l[1C);[29;13H[106m([m[13C()[106m)[m[34;109H2-29[29;29H[?25h[?25l[106m,[m);,[106m)[m[34;109H3-30[29;30H[?25h[?25l[106m [m); [106m)[m[34;109H4-31[29;31H[?25h[?25l[106mc[m);c[106m)[m[34;109H5-32[29;32H[?25h[?25l[106mo[m);o[106m)[m[34;109H6-33[29;33H[?25h[?25l[106ml[m);l[106m)[m[34;109H7-34[29;34H[?25h[?25l[106mu[m);u[106m)[m[34;109H8-35[29;35H[?25h[?25l[106mm[m);m[106m)[m[34;109H9-36[29;36H[?25h[?25l[106mn[m);n[106m)[m[34;108H30-37[29;37H[?25h[?25l[106m8[m);8[106m)[m[34;109H1-38[29;38H[?25h[?25l[106m.[m);.[106m)[m[34;109H2-39[29;39H[?25h[?25l[106me[m);e[106m)[m[34;109H3-40[29;40H[?25h[?25l[106mn[m);n[106m)[m[34;109H4-41[29;41H[?25h[?25l[106md[m);d[106m)[m[34;109H5-42[29;42H[?25h[?25l[106m([m);[29;13H([29C[106m)[m[34;109H6-43[29;43H[?25h[?25l[34;109H7-44[29;44H[?25h[?25l()[34;109H8-45[29;45H[?25h[?25l[106m()[m[34;109H7-44[29;44H[?25h[?25l()[34;109H8-45[29;45H[?25h[?25l[106m()[m[34;109H7-44[29;44H[?25h[?25l[34;109H6-43[29;43H[?25h[?25l[1C);[29;13H[106m([m[28C()[106m)[m[34;109H7-44[29;44H[?25h[?25l[34;109H8-45[29;45H[?25h[?25l[29;13H([30C)[34;109H9-46[29;46H[?25h[?25l[34;106H5[30;46H[?25h[?25l[34;106H6,17-24[31;24H[?25h[?25l[34;106H5,39-46[30;46H[?25h[?25l[34;106H4[29;46H[?25h[?25l[34;106H3,3    [28;3H[?25h[?25l[34;106H4,39-46[29;46H[?25h[34;1H[K[29;45H[?25l[34;95H^[[29;45H[34;95H  [29;46H[34;105H64,38-45      Bot[29;45H[?25h[?25l[34;95H~@k[29;45H[34;95H   [29;44H[29;13H[106m([30C)[m[34;109H7-44[29;44H[?25h[?25l[34;95H~@k[29;44H[34;95H   [29;43H[29;13H([28C[106m()[m)[34;109H6-43[29;43H[?25h[?25l[34;95H~@k[29;43H[34;95H   [29;42H[34;109H5-42[29;42H[?25h[?25l[34;95H~@k[29;42H[34;95H   [29;41Hd()[34;109H4-41[29;41H[?25h[?25l[34;95H~@k[29;41H[34;95H   [29;40H[34;109H3-40[29;40H[?25h[?25l[34;95H~@k[29;40H[34;95H   [29;39H[34;109H2-39[29;39H[?25h[?25l[34;95H~@k[29;39H[34;95H   [29;38H[34;109H1-38[29;38H[?25h[?25l[34;95H~@k[29;38H[34;95H   [29;37H[34;109H0-37[29;37H[?25h[?25l[34;95H~@k[29;37H[34;95H   [29;36H[34;108H29-36[29;36H[?25h[?25l[34;95H~@k[29;36H[34;95H   [29;35H[34;109H8-35[29;35H[?25h[?25l[34;95H~@k[29;35H[34;95H   [29;34H[34;109H7-34[29;34H[?25h[?25l[34;95H~@k[29;34H[34;95H   [29;33H[34;109H6-33[29;33H[?25h[?25l[34;95H~@k[29;33H[34;95H   [29;32H[34;109H5-32[29;32H[?25h[?25l[34;95H~@k[29;32H[34;95H   [29;31H[34;109H4-31[29;31H[?25h[?25l[34;95H~@k[29;31H[34;95H   [29;30H[34;109H3-30[29;30H[?25h[?25l[34;95H~@k[29;30H[34;95H   [29;29H[34;109H2-29[29;29H[?25h[?25l[34;95H~@k[29;29H[34;95H   [29;28H[106m()[m[34;109H1-28[29;28H[?25h[?25l[34;95H~@k[29;28H[34;95H   [29;27H[34;109H0-27[29;27H[?25h[?25l[34;95H~@k[29;27H[34;95H   [29;26Hn()[34;108H19-26[29;26H[?25h[?25l[34;95H~@k[29;26H[34;95H   [29;25H[34;109H8-25[29;25H[?25h[?25l[34;95H~@k[29;25H[34;95H   [29;24H[34;109H7-24[29;24H[?25h[?25l[34;95H~@k[29;24H[34;95H   [29;23H[34;109H6-23[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [29;22H[34;109H5-22[29;22H[?25h[?25l[34;95H~@k[29;22H[34;95H   [29;21H[34;109H4-21[29;21H[?25h[?25l[34;95H~@k[29;21H[34;95H   [29;20H[34;109H3-20[29;20H[?25h[?25l[34;95H~@k[29;20H[34;95H   [29;19H[34;109H2-19[29;19H[?25h[?25l[34;95H~@k[29;19H[34;95H   [29;18H[34;109H1-18[29;18H[?25h[?25l[34;95H~@k[29;18H[34;95H   [29;17H[34;109H0-17[29;17H[?25h[?25l[34;95H~@k[29;17H[34;95H   [29;16H[34;108H9-16 [29;16H[?25h[?25l[34;95H~@k[29;16H[34;95H   [29;15H[34;108H8-15[29;15H[?25h[?25l[34;95H~@k[29;15H[34;95H   [29;14H[34;108H7-14[29;14H[?25h[?25l[34;95H~@k[29;14H[34;95H   [29;13H[106m([30C)[m[34;108H6-13[29;13H[?25h[?25l[34;95H~@k[29;13H[34;95H   [29;12Ht([30C)[34;108H5-12[29;12H[?25h[?25l[34;95H~@k[29;12H[34;95H   [29;11H[34;108H4-11[29;11H[?25h[?25l[34;95H~@k[29;11H[34;95H   [29;10H[34;108H3-10[29;10H[?25h[?25l[34;95H~@k[29;10H[34;95H   [29;9H[34;108H2-9 [29;9H[?25h[?25l[34;95H~@k[29;9H[34;95H   [29;8H[34;108H1-8[29;8H[?25h[?25l[34;95Hy[29;8H[?25h[?25l[34;96H~@k[29;8H[34;95H    [28;2H[34;106H3,2  [28;2H[?25h[?25l[34;95H~@k[28;2H[34;95H   [27;2H[34;106H2[27;2H[?25h[?25l[34;95H~@k[27;2H[34;95H   [26;2H[34;106H1[26;2H[?25h[?25l[34;95H~@k[26;2H[34;95H   [25;2H[34;106H0[25;2H[?25h[?25l[34;95H~@k[25;2H[34;95H   [24;8H[34;105H59,1-8[24;8H[?25h[?25l[34;95Hp[24;8H[34;95H [25;1H[25;33r[25;1H[2L[1;34r[25;1H[34m//[m[26;9Hsort(column8.begin(), column8.end());[34;105H[K[34;105H60,1[10C94%[25;1H[?25h[?25l[34;95H~@k[25;1H[34;95H   [25;2H[34;108H2[25;2H[?25h[?25l[34;95H~@k[25;2H[34;95H   [25;2H[?25h[?25l[34;95Hi[25;2H[34;95H [25;2H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H60,2[10C94%[25;2H[?25h[?25l[34;108H3[25;3H[?25h[?25l/[25;2H[K[34;108H2[25;2H[?25h[?25l[25;1H[K[34;108H1[25;1H[?25h[?25l[34;106H1[26;1H[?25h[?25l[34;108H2-9[26;9H[?25h[?25l[34;106H2,4[27;9H[?25h[?25l[34;108H3  [27;3H[?25h[?25l[34;108H2[27;2H[?25h[?25l/       [38;5;130mfor[m( [32mint[m y:column8){[34;108H1[27;1H[?25h[?25l[34;108H2[27;2H[?25h[?25l [34;108H1[27;1H[?25h[?25l[34;106H3[28;1H[?25h[?25l[34;108H2[28;2H[?25h[?25l[34;108H3[28;3H[?25h[?25l/               cout << y<<endl;[34;108H2[28;2H[?25h[?25l [34;108H1[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H64,1[10C97%[28;1H[?25h[?25l[34;108H2[28;2H[?25h[?25l[34;108H3[28;3H[?25h[?25l/       }[34;108H2[28;2H[?25h[?25l [34;108H1[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H65,1[10CBot[28;1H[?25h[?25l[34;108H2[28;2H[?25h[?25l[34;108H3[28;3H[?25h[?25l/[28;2H[K[34;108H2[28;2H[?25h[?25l[28;1H[K[34;108H1[28;1H[?25h[34;1H[K[28;1H[?25l[34;95H^[[28;1H[34;95H  [28;1H[34;105H65,0-1[8CBot[28;1H[?25h[?25l[34;95H:[28;1H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 70L, 1661C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:61:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksort[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kqsort[m[Kâ€™?
   61 |  [01;31m[Ksort[m[K(column8.begin(), column8.end());
      |  [01;31m[K^~~~[m[K
      |  [32m[Kqsort[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:05:29 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 70L, 1661C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( [32mint[m y:column8){[25;30H[K[26;5H            cout << y<<endl;[26;33H[K[27;1H        }[27;10H[K[28;5H[K[29;5H    sort(column8.begin(), column8.end());[29;46H[K[30;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[30;60H[K[31;5H    cout <<x<<endl;[31;24H[K[32;1H}
        [33;9H[K[34;105H65,0-1[8CBot[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [27;8H[34;106H4,1-8[27;8H[?25h[?25l[34;95H~@k[27;8H[34;95H   [26;8H[34;106H3[26;8H[?25h[?25l[34;95H~@k[26;8H[34;95H   [25;8H[34;106H2[25;8H[?25h[?25l[34;95H~@k[25;8H[34;95H   [24;8H[34;106H1[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [23;1H[34;106H0,0-1[23;1H[?25h[?25l[34;95H~@k[23;1H[34;95H   [22;8H[34;105H59,1-8[22;8H[?25h[?25l[34;95H~@k[22;8H[34;95H   [21;8H[34;106H8[21;8H[?25h[?25l[34;95H~@k[21;8H[34;95H   [20;8H[34;106H7[20;8H[?25h[?25l[34;95H~@k[20;8H[34;95H   [19;8H[34;106H6[19;8H[?25h[?25l[34;95H~@k[19;8H[34;95H   [18;8H[34;106H5[18;8H[?25h[?25l[34;95H~@k[18;8H[34;95H   [17;8H[34;106H4[17;8H[?25h[?25l[34;95H~@k[17;8H[34;95H   [16;8H[34;106H3[16;8H[?25h[?25l[34;95H~@k[16;8H[34;95H   [15;8H[34;106H2[15;8H[?25h[?25l[34;95H~@k[15;8H[34;95H   [14;8H[34;106H1[14;8H[?25h[?25l[34;95H~@k[14;8H[34;95H   [13;8H[34;106H0[13;8H[?25h[?25l[34;95H~@k[13;8H[34;95H   [12;8H[34;105H49[12;8H[?25h[?25l[34;95H~@k[12;8H[34;95H   [11;8H[34;106H8[11;8H[?25h[?25l[34;95H~@k[11;8H[34;95H   [10;8H[34;106H7[10;8H[?25h[?25l[34;95H~@k[10;8H[34;95H   [9;8H[34;106H6[9;8H[?25h[?25l[34;95H~@k[9;8H[34;95H   [8;8H[34;106H5[8;8H[?25h[?25l[34;95H~@k[8;8H[34;95H   [7;8H[34;106H4[7;8H[?25h[?25l[34;95H~@k[7;8H[34;95H   [6;8H[34;106H3[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m(!length.empty()){[34;1H[K[34;105H42,1-8[8C97%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H41,1-8[8C94%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H40,1-8[8C91%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H39,1-8[8C89%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25H[38;5;130melse[m{column1.push_back([31m0[m); }[34;105H[K[34;105H38,1-8[8C86%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H37,1-8[8C83%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;33Hcolumn1.push_back(stoi(year));[34;105H[K[34;105H36,1-8[8C81%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m (!year.empty()){[34;105H[K[34;105H35,1-8[8C78%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H34,0-1[8C75%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;105H[K[34;105H33,1-8[8C72%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[34;105H[K[34;105H32,1-8[8C70%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H31,1-8[8C67%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;105H[K[34;105H30,1-8[8C64%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;105H[K[34;105H29,1-8[8C62%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[32mint[m sum=[31m0[m;[34;105H[K[34;105H28,1-8[8C59%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[34;105H[K[34;105H27,1-8[8C56%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;105H[K[34;105H26,0-1[8C54%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H25,1-8[8C51%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H24,1-8[8C48%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H23,1-8[8C45%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H22,1-8[8C43%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;105H[K[34;105H21,1-8[8C40%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;105H[K[34;105H20,1-8[8C37%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;105H[K[34;105H19,1-8[8C35%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;105H[K[34;105H18,1-8[8C32%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hifstream infile;[34;105H[K[34;105H17,1-8[8C29%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[32mint[m main(){[34;105H[K[34;105H16,1-8[8C27%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H15,1-8[8C24%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[38;5;130musing[m [32mnamespace[m std;[34;105H[K[34;105H14,1-8[8C21%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<functional>[m[34;105H[K[34;105H13,1-8[8C18%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<numeric>[m[34;105H[K[34;105H12,1-8[8C16%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<vector>[m[34;105H[K[34;105H11,1[10C13%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<limits>[m[34;105H[K[34;105H10,0-1[8C10%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<string>[m[34;105H[K[34;105H9,1[12C8%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<fstream>[m[34;105H[K[34;105H8,1[12C5%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<iostream>[m[34;105H[K[34;105H7,1[12C2%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H6,1[11CTop[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [5;1H[34;105H5[5;1H[?25h[?25l[34;95H~@k[5;1H[34;95H   [6;1H[34;105H6[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [7;1H[34;105H7[7;1H[?25h[?25l[34;95H~@k[7;1H[34;95H   [8;1H[34;105H8[8;1H[?25h[?25l[34;95H~@k[8;1H[34;95H   [8;2H[34;107H2[8;2H[?25h[?25l[34;95H~@k[8;2H[34;95H   [8;3H[34;107H3[8;3H[?25h[?25l[34;95H~@k[8;3H[34;95H   [8;2H[34;107H2[8;2H[?25h[?25l[34;95H~@k[8;2H[34;95H   [8;1H[34;107H1[8;1H[?25h[?25l[34;95H~@k[8;1H[34;95H   [9;1H[34;105H9[9;1H[?25h[?25l[34;95H^M[9;1H[34;95H  [10;1H[34;105H10,0-1[10;1H[?25h[?25l[34;95Hi[10;1H[34;95H [10;1H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H10,1[10CTop[10;1H[?25h[?25l[34;105H9,1 [9;1H[?25h[?25l[10;33r[10;1H[L[1;34r[9;1H[K[10;1H[38;5;130musing[m [32mnamespace[m std;[34;105H[K[34;105H10,1[10CTop[10;1H[?25h[?25l[34;105H9,1 [9;1H[?25h[?25l[10;33r[10;1H[L[1;34r[34;105H[K[34;105H10,1[10CTop[10;1H[?25h[?25l[11;33r[11;1H[L[1;34r[34;105H[K[34;105H11,1[10CTop[11;1H[?25h[?25l[34;106H0[10;1H[?25h[?25l[34;105H9,1 [9;1H[?25h[?25l#[34;107H2[9;2H[?25h[?25li[34;107H3[9;3H[?25h[?25ln[34;107H4[9;4H[?25h[?25lc[34;107H5[9;5H[?25h[?25ll[34;107H6[9;6H[?25h[?25lu[34;107H7[9;7H[?25h[?25ld[34;107H8[9;8H[?25h[?25le[34;107H9[9;9H[?25h[?25l[34;107H10[9;10H[?25h[?25l[35m#include <[m[34;108H1[9;11H[?25h[?25l[31m<>[m[34;108H2[9;12H[?25h[?25l[34;108H1[9;11H[?25h[?25l[31ma>[m[34;108H2[9;12H[?25h[?25l[31ml>[m[34;108H3[9;13H[?25h[?25l[31mg>[m[34;108H4[9;14H[?25h[?25l[31mo>[m[34;108H5[9;15H[?25h[?25l[31mr>[m[34;108H6[9;16H[?25h[?25l[31mi>[m[34;108H7[9;17H[?25h[?25l[31mt>[m[34;108H8[9;18H[?25h[?25l[31mh>[m[34;108H9[9;19H[?25h[?25l[31mm>[m[34;107H20[9;20H[?25h[?25l[34;108H1[9;21H[?25h[34;1H[K[9;20H[?25l[34;95H^[[9;20H[34;95H  [9;21H[34;105H9,20[10CTop[9;20H[?25h[?25l[34;95H:[9;20H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1684C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
13
13
13
13
13
13
13
13
13
13
13
13
13
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
15
15
15
15
15
15
15
15
15
15
15
15
16
16
16
16
16
16
16
16
16
16
16
16
16
16
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
18
18
18
18
18
18
18
18
18
18
18
18
19
19
19
19
19
19
19
19
19
19
19
19
19
19
19
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
21
21
21
21
21
21
21
21
21
21
21
21
22
22
22
22
22
22
22
22
22
22
22
22
22
22
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
27
27
27
27
27
27
27
27
27
27
27
27
27
27
27
27
27
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
30
30
30
30
30
30
30
30
30
30
30
30
30
30
31
31
31
31
31
31
31
31
31
31
31
31
31
31
31
31
31
31
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
33
33
33
33
33
33
33
33
33
33
33
33
33
33
33
33
34
34
34
34
34
34
34
34
34
34
34
34
34
34
34
35
35
35
35
35
35
35
35
35
35
35
35
35
35
35
35
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
37
37
37
37
37
37
37
37
37
37
38
38
38
38
38
38
38
38
38
38
39
39
39
39
39
39
39
39
39
39
39
39
39
39
39
39
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
42
42
42
42
42
42
42
42
42
42
42
42
42
42
42
43
43
43
43
43
43
43
43
43
43
43
43
43
44
44
44
44
44
44
44
44
44
44
44
44
44
44
44
44
44
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
46
46
46
46
46
46
46
46
47
47
47
47
47
47
47
47
47
47
47
47
47
47
48
48
48
48
48
48
48
48
48
48
48
48
48
48
48
48
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
52
52
52
52
52
52
52
52
52
52
52
52
52
52
52
53
53
53
53
53
53
53
53
53
53
53
53
53
53
53
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
55
55
55
55
55
55
55
55
55
55
55
56
56
56
56
56
56
56
56
56
56
57
57
57
57
57
57
57
57
57
57
57
57
57
57
57
57
57
57
58
58
58
58
58
58
58
58
58
58
59
59
59
59
59
59
59
59
59
59
59
59
59
59
59
59
59
59
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
63
63
63
63
63
63
63
63
63
63
63
63
63
63
64
64
64
64
64
64
64
64
64
64
64
64
64
64
64
64
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
67
67
67
67
67
67
67
67
67
67
67
67
67
67
67
67
67
67
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
74
74
74
74
74
74
74
74
74
74
74
74
74
74
74
74
74
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
76
76
76
76
76
76
76
76
76
76
76
76
76
76
76
76
77
77
77
77
77
77
77
77
77
77
77
77
77
77
77
77
78
78
78
78
78
78
78
78
78
78
78
78
78
78
78
78
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
85
85
85
85
85
85
85
85
85
85
85
85
86
86
86
86
86
86
86
86
86
86
86
86
86
87
87
87
87
87
87
87
87
87
87
87
87
87
87
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
3277857
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:06:12 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1684C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m
[35m#include [m[31m<numeric>[m
[35m#include [m[31m<functional>[m
[35m#include [m[31m<algorithm>[m


[38;5;130musing[m [32mnamespace[m std;[13;1H[K[14;1H[32mint[m main(){[14;12H[K[15;9Hifstream infile;[15;28H[K[16;9Hinfile.open([31m"films.txt"[m);[16;34H[K[17;9H[38;5;130mif[m(infile.fail()){[18;10H       cout << [31m"Error with file"[m;[18;43H[K[19;9H        exit([31m1[m);
        }[20;10H[K[21;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[22;7H  infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);

        vector <[32mint[m> column1, column2,column8;[24;47H[K[25;5H    vector<string> column3,column4,column5,column6,column7,column10;
        [32mint[m sum=[31m0[m;[26;19H[K[27;1H        [32mdouble[m average;[27;25H[K[28;5H    [38;5;130mwhile[m(infile.good()){[28;30H[K[29;5H[K[30;5H                    string year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,[31m';'[m);

                        [38;5;130mif[m (!year.empty()){[34;105H9,20[10CTop[9;20H[?25h[?25l[34;95H~@k[9;20H[34;95H   [10;1H[34;105H10,0-1[10;1H[?25h[?25l[34;95H~@k[10;1H[34;95H   [11;1H[34;106H1[11;1H[?25h[?25l[34;95H~@k[11;1H[34;95H   [12;20H[34;106H2,20 [12;20H[?25h[?25l[34;95H~@k[12;20H[34;95H   [13;1H[34;106H3,0-1[13;1H[?25h[?25l[34;95H~@k[13;1H[34;95H   [14;11H[34;106H4,11 [14;11H[?25h[?25l[34;95H~@k[14;11H[34;95H   [15;20H[34;106H5,13-20[15;20H[?25h[?25l[34;95H~@k[15;20H[34;95H   [16;20H[106m([11C)[m[34;106H6[16;20H[?25h[?25l[34;95H~@k[16;20H[34;95H   [17;20H[16;20H([11C)[34;106H7[17;20H[?25h[?25l[34;95H~@k[17;20H[34;95H   [18;20H[34;106H8,6-20 [18;20H[?25h[?25l[34;95H~@k[18;20H[34;95H   [19;20H[34;106H9[19;20H[?25h[?25l[34;95H~@k[19;20H[34;95H   [20;9H[17;26H[106m{[20;9H}[m[34;105H20,2-9 [20;9H[?25h[?25l[34;95H~@k[20;9H[34;95H   [21;20H[17;26H{[20;9H}[34;106H1,13-20[21;20H[?25h[?25l[34;95H~@k[21;20H[34;95H   [22;20H[34;106H2[22;20H[?25h[?25l[34;95H~@k[22;20H[34;95H   [23;8H[34;106H3,1-8  [23;8H[?25h[?25l[34;95H~@k[23;8H[34;95H   [24;20H[34;106H4,13-20[24;20H[?25h[?25l[34;95H~@k[24;20H[34;95H   [25;20H[34;106H5[25;20H[?25h[?25l[34;95H~@k[25;20H[34;95H   [26;18H[34;106H6,11-18[26;18H[?25h[?25l[34;95H~@k[26;18H[34;95H   [27;20H[34;106H7,13-20[27;20H[?25h[?25l[34;95H~@k[27;20H[34;95H   [28;20H[34;106H8[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;33Hcolumn1.push_back(stoi(year));[34;1H[K[34;105H29,0-1[9C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H30,3-24[8C5%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column1.push_back([31m0[m); }[34;105H[K[34;105H31,3-24[8C7%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[34;105H[K[34;105H32,3-24[7C10%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H33,3-24[7C12%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[34;105H[K[34;105H34,3-24[7C15%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;9H[1;33r[33;1H
[1;34r[26;43H[106m{[28;9H}[m[33;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H35,2-9[8C17%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;24H[1;33r[33;1H
[1;34r[25;43H{[27;9H}[33;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H36,3-24[7C20%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H37,0-1[8C22%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H38,3-24[7C25%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;16H[1;33r[33;1H
[1;34r[34;105H[K[34;105H39,2-16[7C27%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;105H[K[34;105H40,3-24[7C30%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;105H[K[34;105H41,3-24[7C32%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;44H[106m{[28;17H}[m[33;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H42,3-17[7C35%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;24H[1;33r[33;1H
[1;34r[25;44H{[27;17H}[33;25Hcolumn4.push_back(subject);[34;105H[K[34;105H43,3-24[7C37%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H44,3-24[7C40%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H45,3-24[7C42%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H46,3-24[7C45%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H47,3-24[7C47%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H48,3-24[7C50%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H49,3-24[7C52%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H50,3-24[7C55%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25H[38;5;130mif[m(!popularity.empty()){[34;105H[K[34;105H51,3-24[7C57%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(stoi(popularity));}[34;105H[K[34;105H52,3-24[7C60%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column8.push_back([31m0[m);}[34;105H[K[34;105H53,3-24[7C62%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H54,3-24[7C65%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;105H[K[34;105H55,3-24[7C67%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H56,3-24[7C70%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H57,3-24[7C72%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;25H[34;108H4-25[28;25H[?25h[?25l[34;95H~@k[28;25H[34;95H   [28;26H[34;108H5-26[28;26H[?25h[?25l[34;95H~@k[28;26H[34;95H   [28;27H[34;108H6-27[28;27H[?25h[?25l[34;95H~@k[28;27H[34;95H   [28;28H[34;108H7-28[28;28H[?25h[?25l[34;95H~@k[28;28H[34;95H   [28;29H[34;108H8-29[28;29H[?25h[?25l[34;95H~@k[28;29H[34;95H   [28;30H[34;108H9-30[28;30H[?25h[?25l[34;95H~@k[28;30H[34;95H   [28;31H[34;108H10-31[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;32H[34;109H1-32[28;32H[?25h[?25l[34;95H~@k[28;32H[34;95H   [28;33H[34;109H2-33[28;33H[?25h[?25l[34;95H~@k[28;33H[34;95H   [28;34H[34;109H3-34[28;34H[?25h[?25l[34;95H~@k[28;34H[34;95H   [28;35H[34;109H4-35[28;35H[?25h[?25l[34;95H~@k[28;35H[34;95H   [28;36H[34;109H5-36[28;36H[?25h[?25l[34;95H~@k[28;36H[34;95H   [28;37H[34;109H6-37[28;37H[?25h[?25l[34;95H~@k[28;37H[34;95H   [28;38H[34;109H7-38[28;38H[?25h[?25l[34;95H~@k[28;38H[34;95H   [28;39H[34;109H8-39[28;39H[?25h[?25l[34;95H~@k[28;39H[34;95H   [28;40H[34;109H9-40[28;40H[?25h[?25l[34;95H~@k[28;40H[34;95H   [28;41H[34;108H20-41[28;41H[?25h[?25l[34;95H~@k[28;41H[34;95H   [28;42H[106m([16C)[m[34;109H1-42[28;42H[?25h[?25l[34;95H~@k[28;42H[34;95H   [28;43H([16C)[34;109H2-43[28;43H[?25h[?25l[34;95H~@k[28;43H[34;95H   [28;42H[106m([16C)[m[34;109H1-42[28;42H[?25h[?25l[34;95H-[28;42H[34;95H [27;25H[28;42H([16C)[34;106H6,4-25 [27;25H[?25h[?25l[34;95H1[27;25H[?25h[?25l[34;96H*[27;25H[34;1H/\<if\>[34;95H[K[34;1H[31msearch hit BOTTOM, continuing at TOP[17;9H[1;33r[m[1;1H[29L[1;34r[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m
[35m#include [m[31m<numeric>[m
[35m#include [m[31m<functional>[m
[35m#include [m[31m<algorithm>[m


[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[15;9Hifstream infile;[16;9Hinfile.open([31m"films.txt"[m);[17;9H[38;5;130mif[m(infile.fail()){[18;17Hcout << [31m"Error with file"[m;[19;17Hexit([31m1[m);[20;9H}[21;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[22;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[24;9Hvector <[32mint[m> column1, column2,column8;[25;9Hvector<string> column3,column4,column5,column6,column7,column10;[26;9H[32mint[m sum=[31m0[m;[27;9H[32mdouble[m average;[28;9H[38;5;130mwhile[m(infile.good()){[34;1H[K[34;105H17,2-9[8CTop[31msearch hit BOTTOM, continuing at TOP[m[34;105H[K[34;105H17,2-9[8CTop[17;9H[?25h[?25l[34;95H^[[17;9H[34;95H  [17;9H[34;95H^[[17;9H[34;95H  [17;9H[?25h[?25l[34;95H~@k[17;9H[34;95H   [18;16H[34;106H8,2-16[18;16H[?25h[?25l[34;95H~@k[18;16H[34;95H   [19;16H[34;106H9[19;16H[?25h[?25l[34;95H~@k[19;16H[34;95H   [20;9H[17;26H[106m{[20;9H}[m[34;105H20,2-9 [20;9H[?25h[?25l[34;95H~@k[20;9H[34;95H   [21;9H[17;26H{[20;9H}[34;106H1[21;9H[?25h[?25l[34;95H~@k[21;9H[34;95H   [22;9H[34;106H2[22;9H[?25h[?25l[34;95H~@k[22;9H[34;95H   [23;8H[34;106H3,1-8[23;8H[?25h[?25l[34;95H~@k[23;8H[34;95H   [24;9H[34;106H4,2-9[24;9H[?25h[?25l[34;95H~@k[24;9H[34;95H   [25;9H[34;106H5[25;9H[?25h[?25l[34;95H~@k[25;9H[34;95H   [26;9H[34;106H6[26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [27;9H[34;106H7[27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [28;9H[34;106H8[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;33Hcolumn1.push_back(stoi(year));[34;1H[K[34;105H29,0-1[9C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H30,2-16[8C5%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column1.push_back([31m0[m); }[34;105H[K[34;105H31,2-16[8C7%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[34;105H[K[34;105H32,2-16[7C10%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H33,2-16[7C12%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[34;105H[K[34;105H34,2-16[7C15%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;9H[1;33r[33;1H
[1;34r[26;43H[106m{[28;9H}[m[33;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H35,2-9[8C17%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;16H[1;33r[33;1H
[1;34r[25;43H{[27;9H}[33;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H36,2-16[7C20%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H37,0-1[8C22%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H38,2-16[7C25%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[34;105H[K[34;105H39,2-16[7C27%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;105H[K[34;105H40,2-16[7C30%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;105H[K[34;105H41,2-16[7C32%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H42,2-16[7C35%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;105H[K[34;105H43,2-16[7C37%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H44,2-16[7C40%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H45,2-16[7C42%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H46,2-16[7C45%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H47,2-16[7C47%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H48,2-16[7C50%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H49,2-16[7C52%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H50,2-16[7C55%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25H[38;5;130mif[m(!popularity.empty()){[34;105H[K[34;105H51,2-16[7C57%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(stoi(popularity));}[34;105H[K[34;105H52,2-16[7C60%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column8.push_back([31m0[m);}[34;105H[K[34;105H53,2-16[7C62%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H54,2-16[7C65%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;105H[K[34;105H55,2-16[7C67%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H56,2-16[7C70%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H57,2-16[7C72%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;16H[1;33r[33;1H
[1;34r[34;105H[K[34;105H58,2-16[7C75%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;24H[34;108H3-24[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;25H[34;108H4-25[28;25H[?25h[?25l[34;95H~@k[28;25H[34;95H   [28;26H[34;108H5-26[28;26H[?25h[?25l[34;95H~@k[28;26H[34;95H   [28;27H[34;108H6-27[28;27H[?25h[?25l[34;95H~@k[28;27H[34;95H   [28;28H[34;108H7-28[28;28H[?25h[?25l[34;95H~@k[28;28H[34;95H   [28;29H[106m{[21C}[m[34;108H8-29[28;29H[?25h[?25l[34;95H~@k[28;29H[34;95H   [28;30H{[21C}[34;108H9-30[28;30H[?25h[?25l[34;95H~@k[28;30H[34;95H   [28;31H[34;108H10-31[28;31H[?25h[?25l[34;95Hi[28;31H[34;95H [28;31H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H58,10-31      75%[28;31H[?25h[?25l[106m{[21C}[m[34;108H9-30 [28;30H[?25h[?25l{[21C}[34;108H10-31[28;31H[?25h[?25l[34;109H1-32[28;32H[?25h[?25l[34;106H7[27;32H[?25h[?25l[34;109H2-33[27;33H[?25h[?25l[34;109H3-34[27;34H[?25h[?25l[34;109H4-35[27;35H[?25h[?25l[34;109H5-36[27;36H[?25h[?25l[34;109H6-37[27;37H[?25h[?25l[34;109H7-38[27;38H[?25h[?25l[34;109H8-39[27;39H[?25h[?25l[34;109H9-40[27;40H[?25h[?25l[34;108H20-41[27;41H[?25h[?25lk[106m([16C)[m[34;109H1-42[27;42H[?25h[?25l[34;109H2-43[27;43H[?25h[?25l[34;109H1-42[27;42H[?25h[?25l[106m-[m(stoi(popularity[1C);}[27;42H-[106m([m[15C)[106m)[m[34;109H2-43[27;43H[?25h[?25l[31m[106m1[m(stoi(popularity[1C);}[27;43H[31m1[m[106m([m[15C)[106m)[m[34;109H3-44[27;44H[?25h[?25l([106ms[mtoi(popularity))[106m;[m}[27;63H[K[27;43H[106m([ms[15C[106m)[m;[34;109H2-43[27;43H[?25h[?25l([106ms[mtoi(popularity))[106m;[m}[27;62H[K[27;42H[106m([ms[15C[106m)[m;[34;109H1-42[27;42H[?25h[?25l[34;109H2-43[27;43H[?25h[?25l-stoi(popularity[1C);}[27;42H([16C)[34;109H3-44[27;44H[?25h[?25l1stoi(popularity));}[34;109H4-45[27;45H[?25h[?25l[31m1[m*stoi(popularity));}[34;109H5-46[27;46H[?25h[?25l[28;33r[28;1H[L[1;34r[27;46H[K[28;41Hstoi(popularity));}[34;105H[K[34;105H58,6-41[7C73%[28;41H[?25h[?25l[28;33Hstoi(popularity));}[28;52H[K[34;108H5-33[28;33H[?25h[?25l[28;25Hstoi(popularity));}[28;44H[K[34;108H4-25[28;25H[?25h[?25l[28;17Hstoi(popularity));}[28;36H[K[34;108H3-17[28;17H[?25h[?25l[28;9Hstoi(popularity));}[28;28H[K[34;108H2-9 [28;9H[?25h[?25lstoi(popularity));}[28;20H[K[34;108H1  [28;1H[?25h[?25l[27;33r[33;1H
[1;34r[27;1H                        column8.push_back(-[31m1[m*stoi(popularity));}[34;105H[K[34;105H57,25-46      75%[27;46H[?25h[?25l[34;106H8[28;46H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hsort(column8.begin(), column8.end());[34;105H[K[34;105H59,25-46      77%[28;46H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m( [32mint[m y:column8){[34;105H[K[34;105H60,25-46      80%[28;46H[?25h[?25l[1;33r[33;1H
[1;34r[33;17Hcout << y<<endl;[34;105H[K[34;105H61,25-46      82%[28;46H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H62,4-18[7C85%[28;18H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H63,1[10C87%[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hsort(column8.begin(), column8.end());[34;105H[K[34;105H64,39-46      90%[28;46H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[34;105H[K[34;105H65,22-29      92%[28;28H[106m{[30;9H}[28;29H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9Hcout <<x<<endl;[34;105H[K[34;105H66,19-33      95%[27;28H{[29;9H}[28;33H[?25h[?25l[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H67,3-10[7C97%[26;28H[106m{[28;9H}[?25h[?25l[1;33r[m[33;1H
[1;34r[34;105H[K[34;105H68,1[10CBot[25;28H{[27;9H}
[?25h[?25l[34;106H9,39-46[29;46H[?25h[?25l[34;105H70[30;46H[?25h[?25l[34;106H1,17-24[31;24H[?25h[?25l[34;106H2,2    [32;2H[?25h[?25l[34;106H3,2-9[33;9H[?25h[?25l[34;106H2,2  [32;2H[?25h[?25l[34;106H1,17-24[31;24H[?25h[?25l[34;106H0,39-46[30;46H[?25h[?25l[34;105H69[29;46H[?25h[?25l[34;106H8,1    [28;1H[?25h[?25l[25;28H[106m{[27;9H}[m[34;106H7,3-10[27;10H[?25h[?25l[25;28H{[27;9H}[34;106H8,1   [28;1H[?25h[?25l[25;28H[106m{[27;9H}[m[34;106H7,3-10[27;10H[?25h[?25l[25;28H{[27;9H}[34;106H6,19-33[26;33H[?25h[?25l[34;109H8-32[26;32H[?25h[?25l[34;109H7-31[26;31H[?25h[?25l[34;109H6-30[26;30H[?25h[?25l[34;109H5-29[26;29H[?25h[?25l[34;109H4-28[26;28H[?25h[?25l[34;109H3-27[26;27H[?25h[?25l[34;109H2-26[26;26H[?25h[?25l[34;109H1-25[26;25H[?25h[?25l[34;109H0-24[26;24H[?25h[?25l- y<<endl;[34;109H1-25[26;25H[?25h[?25l[31m1[m y<<endl;[34;109H2-26[26;26H[?25h[?25l[34;109H3-27[26;27H[?25h[?25l1y<<endl;[26;34H[K[34;109H2-26[26;26H[?25h[?25l[31m1[m*y<<endl;[34;109H3-27[26;27H[?25h[34;1H[K[26;26H[?25l[34;95H^[[26;26H[34;95H  [26;27H[34;105H66,12-26      Bot[26;26H[?25h[?25l[34;95H:[26;26H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1689C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
87
87
87
87
87
87
87
87
87
87
87
87
87
87
86
86
86
86
86
86
86
86
86
86
86
86
86
85
85
85
85
85
85
85
85
85
85
85
85
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
84
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
83
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
82
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
81
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
80
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
79
78
78
78
78
78
78
78
78
78
78
78
78
78
78
78
78
77
77
77
77
77
77
77
77
77
77
77
77
77
77
77
77
76
76
76
76
76
76
76
76
76
76
76
76
76
76
76
76
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
74
74
74
74
74
74
74
74
74
74
74
74
74
74
74
74
74
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
73
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
72
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
71
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
70
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
69
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
68
67
67
67
67
67
67
67
67
67
67
67
67
67
67
67
67
67
67
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
66
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
65
64
64
64
64
64
64
64
64
64
64
64
64
64
64
64
64
63
63
63
63
63
63
63
63
63
63
63
63
63
63
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
62
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
61
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
60
59
59
59
59
59
59
59
59
59
59
59
59
59
59
59
59
59
59
58
58
58
58
58
58
58
58
58
58
57
57
57
57
57
57
57
57
57
57
57
57
57
57
57
57
57
57
56
56
56
56
56
56
56
56
56
56
55
55
55
55
55
55
55
55
55
55
55
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
54
53
53
53
53
53
53
53
53
53
53
53
53
53
53
53
52
52
52
52
52
52
52
52
52
52
52
52
52
52
52
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
51
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
50
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
49
48
48
48
48
48
48
48
48
48
48
48
48
48
48
48
48
47
47
47
47
47
47
47
47
47
47
47
47
47
47
46
46
46
46
46
46
46
46
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
45
44
44
44
44
44
44
44
44
44
44
44
44
44
44
44
44
44
43
43
43
43
43
43
43
43
43
43
43
43
43
42
42
42
42
42
42
42
42
42
42
42
42
42
42
42
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
41
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
40
39
39
39
39
39
39
39
39
39
39
39
39
39
39
39
39
38
38
38
38
38
38
38
38
38
38
37
37
37
37
37
37
37
37
37
37
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
36
35
35
35
35
35
35
35
35
35
35
35
35
35
35
35
35
34
34
34
34
34
34
34
34
34
34
34
34
34
34
34
33
33
33
33
33
33
33
33
33
33
33
33
33
33
33
33
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
32
31
31
31
31
31
31
31
31
31
31
31
31
31
31
31
31
31
31
30
30
30
30
30
30
30
30
30
30
30
30
30
30
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
29
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
28
27
27
27
27
27
27
27
27
27
27
27
27
27
27
27
27
27
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
26
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
25
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
24
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
23
22
22
22
22
22
22
22
22
22
22
22
22
22
22
21
21
21
21
21
21
21
21
21
21
21
21
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
20
19
19
19
19
19
19
19
19
19
19
19
19
19
19
19
18
18
18
18
18
18
18
18
18
18
18
18
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
17
16
16
16
16
16
16
16
16
16
16
16
16
16
16
15
15
15
15
15
15
15
15
15
15
15
15
14
14
14
14
14
14
14
14
14
14
14
14
14
14
14
13
13
13
13
13
13
13
13
13
13
13
13
13
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
12
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
11
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
10
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
9
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
8
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
7
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
6
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
4
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
3277857
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:07:53 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1689C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( [32mint[m y:column8){[25;30H[K[26;5H            cout <<-[31m1[m*y<<endl;[26;35H[K[27;1H        }[27;10H[K[28;5H[K[29;5H    sort(column8.begin(), column8.end());[29;46H[K[30;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[30;60H[K[31;5H    cout <<x<<endl;[31;24H[K[32;1H}
        [33;9H[K[34;105H66,12-26      Bot[26;26H[?25h[?25l[34;95H~@k[26;26H[34;95H   [25;26H[34;106H5,19[25;26H[?25h[?25l[34;95H~@k[25;26H[34;95H   [26;26H[34;106H6,12[26;26H[?25h[?25l[34;95H~@k[26;26H[34;95H   [27;9H[25;28H[106m{[27;9H}[m[34;106H7,2-9  [27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [28;1H[25;28H{[27;9H}[34;106H8,0-1[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [29;26H[34;106H9,19-26[29;26H[?25h[?25l[34;95H~@k[29;26H[34;95H   [30;26H[106m([31C)[m[34;105H70[30;26H[?25h[?25l[34;95H~@k[30;26H[34;95H   [31;23H[30;26H([31C)[34;106H1,16-23[31;23H[?25h[?25l[34;95H~@k[31;23H[34;95H   [30;26H[106m([31C)[m[34;106H0,19-26[30;26H[?25h[?25l[34;95H~@k[30;26H[34;95H   [29;26H[30;26H([31C)[34;105H69[29;26H[?25h[?25l[34;95H~@k[29;26H[34;95H   [28;1H[34;106H8,0-1  [28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [27;9H[25;28H[106m{[27;9H}[m[34;106H7,2-9[27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [26;26H[25;28H{[27;9H}[34;106H6,12-26[26;26H[?25h[?25l[34;95H~@k[26;26H[34;95H   [25;26H[34;106H5,19[25;26H[?25h[?25l[34;95H~@k[25;26H[34;95H   [26;26H[34;106H6,12[26;26H[?25h[?25l[34;95H~@k[26;26H[34;95H   [26;25H[34;109H1-25[26;25H[?25h[?25l[34;95H~@k[26;25H[34;95H   [26;24H[34;109H0-24[26;24H[?25h[?25l[34;95H~@k[26;24H[34;95H   [26;23H[34;108H9-23 [26;23H[?25h[?25l[34;95H~@k[26;23H[34;95H   [26;22H[34;108H8-22[26;22H[?25h[?25l[34;95H~@k[26;22H[34;95H   [26;21H[34;108H7-21[26;21H[?25h[?25l[34;95H~@k[26;21H[34;95H   [26;20H[34;108H6-20[26;20H[?25h[?25l[34;95H~@k[26;20H[34;95H   [26;19H[34;108H5-19[26;19H[?25h[?25l[34;95H~@k[26;19H[34;95H   [26;18H[34;108H4-18[26;18H[?25h[?25l[34;95H~@k[26;18H[34;95H   [26;17H[34;108H3-17[26;17H[?25h[?25l[34;95H/[26;17H[34;1H[K[34;1H/[?2004h[?25h/[?25l[27m[23m[29m[m[H[2J[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m
[35m#include [m[31m<numeric>[m
[35m#include [m[31m<functional>[m
[35m#include [m[31m<algorithm>[m


[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[15;9Hifstream infile;[16;9Hinfile.open([31m"films.txt"[m);[17;9H[7m[38;5;130mif[m(infile.fail()){[18;17Hcout << [31m"Error with file"[m;[19;17Hexit([31m1[m);[20;9H}[21;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[22;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[24;9Hvector <[32mint[m> column1, column2,column8;[25;9Hvector<string> column3,column4,column5,column6,column7,column10;[26;9H[32mint[m sum=[31m0[m;[27;9H[32mdouble[m average;[28;9H[38;5;130mwhile[m(infile.good()){[30;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[31;25Hgetline(infile, year,[31m';'[m);[33;25H[38;5;130mif[m (!year.empty()){[34;105H17,2-9[8CTop//[34;105H[K[34;3H[?25h[?25l[34;2H[K[27m[23m[29m[m[H[2J[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);[13;25Hgetline(infile, director,[31m';'[m);[14;25Hcolumn7.push_back(director);[15;25Hgetline(infile,popularity,[31m';'[m);[16;25H[38;5;130mif[m(!popularity.empty()){[17;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[18;25H[38;5;130melse[m{column8.push_back([31m0[m);}[19;25Hgetline(infile, awards,[31m';'[m);[20;25Hgetline(infile, image,[35m'\n'[m);[21;25Hcolumn10.push_back(image);[22;17H}[24;9Hsort(column8.begin(), column8.end());[25;9H[38;5;130mfor[m( [32mint[m y:column8){[26;17Hcout <<-[31m1[m*y<<endl;[27;9H}[29;9Hsort(column8.begin(), column8.end());[30;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[31;9Hcout <<x<<endl;
}[34;105H66,3-17[7CBot/[34;105H[K[34;2H[?25h [?25l[26;17H[34;105H66,3-17[7CBot[26;17H[?25h[?25l[34;95Hi[26;17H[34;95H [26;17H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H66,3-17[7CBot[26;17H[?25h[?25l/cout <<-[31m1[m*y<<endl;[34;108H4-18[26;18H[?25h[?25l[34m//cout <<-[m[31m1[m[34m*y<<endl;[m[34;108H5-19[26;19H[?25h[?25l[25;28H[106m{[27;9H}[m[34;106H7,3-10[27;10H[?25h[?25l[25;28H{[27;9H}[34;106H8,1   [28;1H[?25h[?25l[34;106H9,12-19[29;19H[?25h[?25l[34;105H70[30;19H[?25h[?25l[34;106H1[31;19H[?25h[?25l[34;109H3-20[31;20H[?25h[?25l[34;109H4-21[31;21H[?25h[?25l[34;109H5-22[31;22H[?25h[?25l[34;109H6-23[31;23H[?25h[?25l[34;109H7-24[31;24H[?25h[?25l[1;33r[33;1H
[1;34r[31;33r[31;1H[L[1;34r[34;105H[K[34;105H72,2-9[8CBot[31;9H[?25h[?25li[34;108H3-10[31;10H[?25h[?25lt[34;108H4-11[31;11H[?25h[?25le[34;108H5-12[31;12H[?25h[?25lr[34;108H6-13[31;13H[?25h[?25la[34;108H7-14[31;14H[?25h[?25lt[34;108H8-15[31;15H[?25h[?25lt[34;108H9-16[31;16H[?25h[?25lo[34;108H10-17[31;17H[?25h[?25l[31;16H[K[34;108H9-16 [31;16H[?25h[?25lr[34;108H10-17[31;17H[?25h[?25l[31;16H[K[34;108H9-16 [31;16H[?25h[?25l[31;15H[K[34;108H8-15[31;15H[?25h[?25lo[34;108H9-16[31;16H[?25h[?25lr[34;108H10-17[31;17H[?25h[?25l[34;109H1-18[31;18H[?25h[?25li[34;109H2-19[31;19H[?25h[?25lt[34;109H3-20[31;20H[?25h[?25l[34;109H4-21[31;21H[?25h[?25l=[34;109H5-22[31;22H[?25h[?25lf[34;109H6-23[31;23H[?25h[?25li[34;109H7-24[31;24H[?25h[?25ln[34;109H8-25[31;25H[?25h[?25ld[34;109H9-26[31;26H[?25h[?25l([34;108H20-27[31;27H[?25h[?25l)[106m()[m[34;109H1-28[31;28H[?25h[?25l[34;109H0-27[31;27H[?25h[?25l[106mc[m)c[106m)[m[34;109H1-28[31;28H[?25h[?25l[106mo[m)o[106m)[m[34;109H2-29[31;29H[?25h[?25l[106ml[m)l[106m)[m[34;109H3-30[31;30H[?25h[?25l[106mu[m)u[106m)[m[34;109H4-31[31;31H[?25h[?25l[106mm[m)m[106m)[m[34;109H5-32[31;32H[?25h[?25l[106mn[m)n[106m)[m[34;109H6-33[31;33H[?25h[?25l[106m7[m)7[106m)[m[34;109H7-34[31;34H[?25h[?25l[106m,[m),[106m)[m[34;109H8-35[31;35H[?25h[?25l)[31;35H[K[31;34H[106m)[m[34;109H7-34[31;34H[?25h[?25l[106m.[m).[106m)[m[34;109H8-35[31;35H[?25h[?25l[106mb[m)b[106m)[m[34;109H9-36[31;36H[?25h[?25l[106me[m)e[106m)[m[34;108H30-37[31;37H[?25h[?25l[106mg[m)g[106m)[m[34;109H1-38[31;38H[?25h[?25l[106mi[m)i[106m)[m[34;109H2-39[31;39H[?25h[?25l[106mn[m)n[106m)[m[34;109H3-40[31;40H[?25h[?25l[106m([m)[31;26H([14C[106m)[m[34;109H4-41[31;41H[?25h[?25l[1C)[31;26H[106m([m[13C()[106m)[m[34;109H5-42[31;42H[?25h[?25l[106m,[m),[106m)[m[34;109H6-43[31;43H[?25h[?25l[106mc[m)c[106m)[m[34;109H7-44[31;44H[?25h[?25l[106mo[m)o[106m)[m[34;109H8-45[31;45H[?25h[?25l[106ml[m)l[106m)[m[34;109H9-46[31;46H[?25h[?25l[106mu[m)u[106m)[m[34;108H40-47[31;47H[?25h[?25l[106mm[m)m[106m)[m[34;109H1-48[31;48H[?25h[?25l[106mn[m)n[106m)[m[34;109H2-49[31;49H[?25h[?25l[106m7[m)7[106m)[m[34;109H3-50[31;50H[?25h[?25l[106m.[m).[106m)[m[34;109H4-51[31;51H[?25h[?25l[106me[m)e[106m)[m[34;109H5-52[31;52H[?25h[?25l[106mn[m)n[106m)[m[34;109H6-53[31;53H[?25h[?25l[106md[m)d[106m)[m[34;109H7-54[31;54H[?25h[?25l[106m([m)[31;26H([28C[106m)[m[34;109H8-55[31;55H[?25h[?25l[1C)[31;26H[106m([m[27C()[106m)[m[34;109H9-56[31;56H[?25h[?25l[31;26H([29C)[34;106H1,17-24[30;24H[?25h[?25l[29;54H[106m()[m[34;106H0,49-56[29;56H[?25h[?25l()[34;105H69,39-4[28;46H[?25h[?25l[28;45H[K[28;13H[106m([30C)[m[34;109H8-45[28;45H[?25h[?25l[28;44H[K[28;13H([28C[106m()[m[34;109H7-44[28;44H[?25h[?25l[28;43H[K[28;42H([34;109H6-43[28;43H[?25h[?25l[28;42H[K[34;109H5-42[28;42H[?25h[?25l[28;41H[K[34;109H4-41[28;41H[?25h[?25l[28;40H[K[34;109H3-40[28;40H[?25h[?25l[28;39H[K[34;109H2-39[28;39H[?25h[?25l[28;38H[K[34;109H1-38[28;38H[?25h[?25l[28;37H[K[34;109H0-37[28;37H[?25h[?25l[28;36H[K[34;108H29-36[28;36H[?25h[?25l[28;35H[K[34;109H8-35[28;35H[?25h[?25l[28;34H[K[34;109H7-34[28;34H[?25h[?25l[28;33H[K[34;109H6-33[28;33H[?25h[?25l[28;32H[K[34;109H5-32[28;32H[?25h[?25l[28;31H[K[34;109H4-31[28;31H[?25h[?25l[34;109H3-30[28;30H[?25h[?25l[28;29H[K[28;27H[106m()[m[34;109H2-29[28;29H[?25h[?25l[28;28H[K[28;27H([34;109H1-28[28;28H[?25h[?25l[28;27H[K[34;109H0-27[28;27H[?25h[?25l[28;26H[K[34;108H19-26[28;26H[?25h[?25l[28;25H[K[34;109H8-25[28;25H[?25h[?25l[28;24H[K[34;109H7-24[28;24H[?25h[?25l[28;23H[K[34;109H6-23[28;23H[?25h[?25l[28;22H[K[34;109H5-22[28;22H[?25h[?25l[28;21H[K[34;109H4-21[28;21H[?25h[?25l[28;20H[K[34;109H3-20[28;20H[?25h[?25l[28;19H[K[34;109H2-19[28;19H[?25h[?25l[28;18H[K[34;109H1-18[28;18H[?25h[?25l[28;17H[K[34;109H0-17[28;17H[?25h[?25l[28;16H[K[34;108H9-16 [28;16H[?25h[?25l[28;15H[K[34;108H8-15[28;15H[?25h[?25l[28;14H[K[34;108H7-14[28;14H[?25h[?25l[28;13H[K[34;108H6-13[28;13H[?25h[?25l[28;12H[K[34;108H5-12[28;12H[?25h[?25l[28;11H[K[34;108H4-11[28;11H[?25h[?25l[28;10H[K[34;108H3-10[28;10H[?25h[?25l[28;9H[K[34;108H2-9 [28;9H[?25h[?25l[34;108H1  [28;1H[?25h[?25l[27;33r[33;1H
[1;34r[33;1H[94m~                                                                                                                         [m[34;105H[K[34;105H68,1[10CBot[27;1H[?25h[?25l[26;33r[33;1H
[1;34r[26;9H}[33;1H[94m~                                                                                                                         [m[34;105H[K[34;105H67,3-10[7CBot[24;28H[106m{[26;9H}[?25h[?25l[m[24;28H{[26;9H}[34;106H8[27;10H[?25h[?25l[34;106H9[28;10H[?25h[?25l[34;108H4-11[28;11H[?25h[?25l[34;105H70[29;11H[?25h[?25l[34;108H5-12[29;12H[?25h[?25l[34;108H6-13[29;13H[?25h[?25l[34;108H7-14[29;14H[?25h[?25l[34;108H8-15[29;15H[?25h[?25l[34;108H9-16[29;16H[?25h[?25l[34;108H10-17[29;17H[?25h[?25l[34;109H1-18[29;18H[?25h[?25l[34;109H2-19[29;19H[?25h[?25l[34;109H3-20[29;20H[?25h[?25l[34;109H4-21[29;21H[?25h[?25l[34;109H5-22[29;22H[?25h[?25l[34;109H6-23[29;23H[?25h[?25l[34;109H7-24[29;24H[?25h[?25l[34;109H8-25[29;25H[?25h[?25ld[106m([29C)[m[34;109H9-26[29;26H[?25h[?25l[34;108H20-27[29;27H[?25h[?25l([29C)[34;109H1-28[29;28H[?25h[?25l[34;109H2-29[29;29H[?25h[?25l[34;109H3-30[29;30H[?25h[?25l[34;109H4-31[29;31H[?25h[?25l[34;109H5-32[29;32H[?25h[?25l[34;109H6-33[29;33H[?25h[?25l[34;109H7-34[29;34H[?25h[?25l[34;109H8-35[29;35H[?25h[?25l[34;109H9-36[29;36H[?25h[?25l[34;108H30-37[29;37H[?25h[?25l[34;109H1-38[29;38H[?25h[?25l[34;109H2-39[29;39H[?25h[?25ln[106m()[m[34;109H3-40[29;40H[?25h[?25l[34;109H4-41[29;41H[?25h[?25l[34;109H5-42[29;42H[?25h[?25l()[34;109H6-43[29;43H[?25h[?25l[34;109H7-44[29;44H[?25h[?25l[34;109H8-45[29;45H[?25h[?25l[34;109H9-46[29;46H[?25h[?25l[34;108H40-47[29;47H[?25h[?25l[34;109H1-48[29;48H[?25h[?25l[34;109H2-49[29;49H[?25h[?25l[34;109H3-50[29;50H[?25h[?25l[34;109H4-51[29;51H[?25h[?25l[34;109H5-52[29;52H[?25h[?25l[34;109H6-53[29;53H[?25h[?25ld[106m()[m[34;109H7-54[29;54H[?25h[?25l[34;109H8-55[29;55H[?25h[?25l[29;26H[106m([m[27C()[106m)[m[34;109H9-56[29;56H[?25h[?25l[34;108H50-57[29;57H[?25h[?25l;[29;26H([29C)[34;109H1-58[29;58H[?25h[?25l[30;33r[30;1H[L[1;34r[34;105H[K[34;105H71,2-9[8CBot[30;9H[?25h[?25lc[34;108H3-10[30;10H[?25h[?25lo[34;108H4-11[30;11H[?25h[?25lu[34;108H5-12[30;12H[?25h[?25lt[34;108H6-13[30;13H[?25h[?25l<[34;108H7-14[30;14H[?25h[?25l<[34;108H8-15[30;15H[?25h[?25l[34;108H9-16[30;16H[?25h[?25l*[34;108H10-17[30;17H[?25h[?25li[34;109H1-18[30;18H[?25h[?25lt[34;109H2-19[30;19H[?25h[?25l[34;106H0[29;19H[?25h[?25l[34;109H3-20[29;20H[?25h[?25l[34;109H4-21[29;21H[?25h[?25l[34;109H5-22[29;22H[?25h[?25l[34;109H6-23[29;23H[?25h[?25l[34;109H7-24[29;24H[?25h[?25l[34;109H8-25[29;25H[?25h[?25ld[106m([29C)[m[34;109H9-26[29;26H[?25h[?25l[34;108H20-27[29;27H[?25h[?25l([29C)[34;109H1-28[29;28H[?25h[?25l[34;109H2-29[29;29H[?25h[?25l[34;109H3-30[29;30H[?25h[?25l[34;109H4-31[29;31H[?25h[?25l[34;109H5-32[29;32H[?25h[?25l[34;109H6-33[29;33H[?25h[?25l[34;109H7-34[29;34H[?25h[?25l[34;109H8-35[29;35H[?25h[?25l[34;109H9-36[29;36H[?25h[?25l[34;108H30-37[29;37H[?25h[?25l[34;109H1-38[29;38H[?25h[?25l[34;109H2-39[29;39H[?25h[?25ln[106m()[m[34;109H3-40[29;40H[?25h[?25l[34;109H4-41[29;41H[?25h[?25l[34;109H5-42[29;42H[?25h[?25l()[34;109H6-43[29;43H[?25h[?25l[34;109H7-44[29;44H[?25h[?25l[34;109H8-45[29;45H[?25h[?25l[34;109H9-46[29;46H[?25h[?25l[34;108H40-47[29;47H[?25h[?25l[34;109H1-48[29;48H[?25h[?25l[34;109H2-49[29;49H[?25h[?25l[34;109H3-50[29;50H[?25h[?25l[34;109H4-51[29;51H[?25h[?25l[34;109H5-52[29;52H[?25h[?25l[34;109H6-53[29;53H[?25h[?25ld[106m()[m[34;109H7-54[29;54H[?25h[?25l[34;109H8-55[29;55H[?25h[?25l[29;26H[106m([m[27C()[106m)[m[34;109H9-56[29;56H[?25h[?25l[34;108H50-57[29;57H[?25h[?25l[29;26H([29C)[34;109H1-58[29;58H[?25h[?25l[29;26H[106m([29C)[m[34;109H0-57[29;57H[?25h[?25l[34;108H49-56[29;56H[?25h[?25l[106m.[m);.[106m)[m[34;108H50-57[29;57H[?25h[?25l)[106m;[m[29;58H[K[29;56H[106m)[m;[34;108H49-56[29;56H[?25h[?25l[106m,[m);,[106m)[m[34;108H50-57[29;57H[?25h[?25l[31m[106m"[m[31m);
        cout<< *it
}
        [29;57H"[m[31m[106m)[m[34;109H1-58[29;58H[?25h[?25l[31m[106m"[m);
        cout<< *it
}
        [29;58H[31m"[m[106m)[m[34;109H2-59[29;59H[?25h[?25l[29;26H([32C)[34;109H1-58[29;58H[?25h[?25l[31m "[m);[34;109H2-59[29;59H[?25h[?25l[34;109H1-58[29;58H[?25h[?25l[34;109H2-59[29;59H[?25h[?25l[31m"[m);[29;61H[K[34;109H1-58[29;58H[?25h[?25l[31mS"[m);[34;109H2-59[29;59H[?25h[?25l[31mc"[m);[34;109H3-60[29;60H[?25h[?25l[31mo"[m);[34;109H4-61[29;61H[?25h[?25l[31mr"[m);[34;109H5-62[29;62H[?25h[?25l[31ms"[m);[34;109H6-63[29;63H[?25h[?25l[31me"[m);[34;109H7-64[29;64H[?25h[?25l[31ms"[m);[34;109H8-65[29;65H[?25h[?25l[31me"[m);[34;109H9-66[29;66H[?25h[?25l[34;105H69,17-24[28;24H[?25h[?25l[34;105H70,59-66[29;66H[?25h[?25l[34;106H1,12-19[30;19H[?25h[?25l<[34;109H3-20[30;20H[?25h[?25l<[34;109H4-21[30;21H[?25h[?25l[31m"[m[34;109H5-22[30;22H[?25h[?25l[31m"[m[34;109H6-23[30;23H[?25h[?25l[34;109H5-22[30;22H[?25h[?25l[31m "[m[34;109H6-23[30;23H[?25h[?25l[31m "[m[34;109H7-24[30;24H[?25h[?25l[31m "[m[34;109H8-25[30;25H[?25h[?25l[31m "[m[34;109H9-26[30;26H[?25h[?25l[31m "[m[34;108H20-27[30;27H[?25h[?25l[34;109H1-28[30;28H[?25h[?25l<[34;109H2-29[30;29H[?25h[?25l<[34;109H3-30[30;30H[?25h[?25li[34;109H4-31[30;31H[?25h[?25lt[34;109H5-32[30;32H[?25h[?25l<[34;109H6-33[30;33H[?25h[?25l<[34;109H7-34[30;34H[?25h[?25le[34;109H8-35[30;35H[?25h[?25ln[34;109H9-36[30;36H[?25h[?25ld[34;108H30-37[30;37H[?25h[?25ll[34;109H1-38[30;38H[?25h[?25l;[34;109H2-39[30;39H[?25h[34;1H[K[30;38H[?25l[34;95H^[[30;38H[34;95H  [30;39H[34;105H71,31-38      Bot[30;38H[?25h[?25l[34;95H:[30;38H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1745C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:70:11:[m[K [01;31m[Kerror: [m[Kmissing template arguments before â€˜[01m[Kit[m[Kâ€™
   70 |  iterator [01;31m[Kit[m[K =find(column7.begin(),column7.end(),"Scorsese");
      |           [01;31m[K^~[m[K
[01m[KTasks.cpp:71:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kit[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kint[m[Kâ€™?
   71 |  cout<< *[01;31m[Kit[m[K<<"     "<<it<<endl;
      |          [01;31m[K^~[m[K
      |          [32m[Kint[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:15:43 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1745C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( [32mint[m y:column8){[25;30H[K[26;5H            [34m//cout <<-[m[31m1[m[34m*y<<endl;[m[26;38H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    iterator it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);
        cout<< *it<<[31m"     "[m<<it<<endl;
}
        [33;9H[K[34;105H71,31-38      Bot[31;38H[?25h[?25l[34;95H~@k[31;38H[34;95H   [30;38H[34;106H0[30;38H[?25h[?25l[34;95H~@k[30;38H[34;95H   [29;23H[34;105H69,16-23[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [29;22H[34;109H5-22[29;22H[?25h[?25l[34;95H~@k[29;22H[34;95H   [28;22H[34;106H8[28;22H[?25h[?25l[34;95H~@k[28;22H[34;95H   [29;22H[34;106H9[29;22H[?25h[?25l[34;95H~@k[29;22H[34;95H   [30;22H[34;105H70[30;22H[?25h[?25l[34;95H~@k[30;22H[34;95H   [30;21H[34;109H4-21[30;21H[?25h[?25l[34;95H~@k[30;21H[34;95H   [30;20H[34;109H3-20[30;20H[?25h[?25l[34;95H~@k[30;20H[34;95H   [30;19H[34;109H2-19[30;19H[?25h[?25l[34;95H~@k[30;19H[34;95H   [30;18H[34;109H1-18[30;18H[?25h[?25l[34;95H~@k[30;18H[34;95H   [30;17H[34;109H0-17[30;17H[?25h[?25l[34;95H~@k[30;17H[34;95H   [30;16H[34;108H9-16 [30;16H[?25h[?25l[34;95H~@k[30;16H[34;95H   [30;15H[34;108H8-15[30;15H[?25h[?25l[34;95H~@k[30;15H[34;95H   [30;14H[34;108H7-14[30;14H[?25h[?25l[34;95H~@k[30;14H[34;95H   [30;13H[34;108H6-13[30;13H[?25h[?25l[34;95H~@k[30;13H[34;95H   [30;12H[34;108H5-12[30;12H[?25h[?25l[34;95H~@k[30;12H[34;95H   [30;11H[34;108H4-11[30;11H[?25h[?25l[34;95H~@k[30;11H[34;95H   [30;10H[34;108H3-10[30;10H[?25h[?25l[34;95H~@k[30;10H[34;95H   [30;9H[34;108H2-9 [30;9H[?25h[?25l[34;95Hv[30;9H[34;95H1[30;9H[34;1H[1m-- VISUAL --[m[34;13H[K[34;95H1[30;9H[34;105H70,2-9[8CBot[30;9H[?25h[?25l[34;95He[30;9H[34;95H8[30;16H[30;9H[47miterato[m[34;108H9-16[30;16H[?25h[?25l[34;95Hc[30;16H[34;95H [30;9H[34;4H[1mINSERT [m[34;105H[K[34;105H70,2-9[8CBot[30;9H it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;61H[K[30;9H[?25h[?25lt it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H3-10[30;10H[?25h[?25lo it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H4-11[30;11H[?25h[?25lr it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H5-12[30;12H[?25h[?25l it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;63H[K[34;108H4-11[30;11H[?25h[?25l it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;62H[K[34;108H3-10[30;10H[?25h[?25l it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;61H[K[34;108H2-9 [30;9H[?25h[?25lv it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H3-10[30;10H[?25h[?25le it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H4-11[30;11H[?25h[?25lc it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H5-12[30;12H[?25h[?25lt it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H6-13[30;13H[?25h[?25lo it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H7-14[30;14H[?25h[?25lrr it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H9-16[30;16H[?25h[?25l it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;67H[K[34;108H8-15[30;15H[?25h[?25l< it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H9-16[30;16H[?25h[?25l> it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H10-17[30;17H[?25h[?25l[34;108H9-16 [30;16H[?25h[?25ls> it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H10-17[30;17H[?25h[?25lt> it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H1-18[30;18H[?25h[?25lr> it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H2-19[30;19H[?25h[?25li> it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H3-20[30;20H[?25h[?25ln> it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H4-21[30;21H[?25h[?25lg> it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H5-22[30;22H[?25h[?25l[34;109H6-23[30;23H[?25h[?25l  it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H7-24[30;24H[?25h[?25li it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H8-25[30;25H[?25h[?25lt it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H9-26[30;26H[?25h[?25le it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H20-27[30;27H[?25h[?25lr it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H1-28[30;28H[?25h[?25la it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H2-29[30;29H[?25h[?25lt it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H3-30[30;30H[?25h[?25lo it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H4-31[30;31H[?25h[?25lr it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H5-32[30;32H[?25h[34;1H[K[30;31H[?25l[34;95H^[[30;31H[34;95H  [30;32H[34;105H70,24-31      Bot[30;31H[?25h[?25l[34;95H:[30;31H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1760C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:70:26:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kit[m[Kâ€™
   70 |  vector<string> iterator [01;31m[Kit[m[K =find(column7.begin(),column7.end(),"Scorsese");
      |                          [01;31m[K^~[m[K
[01m[KTasks.cpp:71:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kit[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kint[m[Kâ€™?
   71 |  cout<< *[01;31m[Kit[m[K<<"     "<<it<<endl;
      |          [01;31m[K^~[m[K
      |          [32m[Kint[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:16:28 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1760C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( [32mint[m y:column8){[25;30H[K[26;5H            [34m//cout <<-[m[31m1[m[34m*y<<endl;[m[26;38H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string> iterator it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);
        cout<< *it<<[31m"     "[m<<it<<endl;
}
        [33;9H[K[34;105H70,24-31      Bot[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [31;31H[34;106H1[31;31H[?25h[?25l[34;95H~@k[31;31H[34;95H   [30;31H[34;106H0[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [29;23H[34;105H69,16-23[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [30;31H[34;105H70,24-31[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [30;32H[34;109H5-32[30;32H[?25h[?25l[34;95H~@k[30;32H[34;95H   [30;33H[34;109H6-33[30;33H[?25h[?25l[34;95H~@k[30;33H[34;95H   [30;34H[34;109H7-34[30;34H[?25h[?25l[34;95H~@k[30;34H[34;95H   [30;35H[34;109H8-35[30;35H[?25h[?25l[34;95H~@k[30;35H[34;95H   [30;34H[34;109H7-34[30;34H[?25h[?25l[34;95H~@k[30;34H[34;95H   [30;33H[34;109H6-33[30;33H[?25h[?25l[34;95H~@k[30;33H[34;95H   [30;32H[34;109H5-32[30;32H[?25h[?25l[34;95H~@k[30;32H[34;95H   [30;31H[34;109H4-31[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [30;30H[34;109H3-30[30;30H[?25h[?25l[34;95H~@k[30;30H[34;95H   [30;29H[34;109H2-29[30;29H[?25h[?25l[34;95H~@k[30;29H[34;95H   [30;28H[34;109H1-28[30;28H[?25h[?25l[34;95H~@k[30;28H[34;95H   [30;27H[34;109H0-27[30;27H[?25h[?25l[34;95H~@k[30;27H[34;95H   [30;26H[34;108H19-26[30;26H[?25h[?25l[34;95H~@k[30;26H[34;95H   [30;25H[34;109H8-25[30;25H[?25h[?25l[34;95H~@k[30;25H[34;95H   [30;24H[34;109H7-24[30;24H[?25h[?25l[34;95H~@k[30;24H[34;95H   [30;23H[34;109H6-23[30;23H[?25h[?25l[34;95H~@k[30;23H[34;95H   [30;22H[34;109H5-22[30;22H[?25h[?25l[34;95Hi[30;22H[34;95H [30;22H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H70,15-22      Bot[30;22H[?25h[?25l[34;109H6-23[30;23H[?25h[?25l[34;109H7-24[30;24H[?25h[?25l[34;109H8-25[30;25H[?25h[?25l[34;109H9-26[30;26H[?25h[?25l[34;108H20-27[30;27H[?25h[?25l[34;109H1-28[30;28H[?25h[?25l[34;109H2-29[30;29H[?25h[?25l[34;109H3-30[30;30H[?25h[?25l[34;109H4-31[30;31H[?25h[?25l[34;109H5-32[30;32H[?25h[?25l[34;109H6-33[30;33H[?25h[?25l[34;109H7-34[30;34H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;83H[K[34;109H6-33[30;33H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;82H[K[34;109H5-32[30;32H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;81H[K[34;109H4-31[30;31H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;80H[K[34;109H3-30[30;30H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;79H[K[34;109H2-29[30;29H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;78H[K[34;109H1-28[30;28H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;77H[K[34;109H0-27[30;27H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;76H[K[34;108H19-26[30;26H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;75H[K[34;109H8-25[30;25H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;74H[K[34;109H7-24[30;24H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;73H[K[34;109H6-23[30;23H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;72H[K[34;109H5-22[30;22H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;71H[K[34;109H4-21[30;21H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;70H[K[34;109H3-20[30;20H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;69H[K[34;109H2-19[30;19H[?25h[?25l[34;109H3-20[30;20H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;68H[K[34;109H2-19[30;19H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;67H[K[34;109H1-18[30;18H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;66H[K[34;109H0-17[30;17H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;65H[K[34;108H9-16 [30;16H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;64H[K[34;108H8-15[30;15H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;63H[K[34;108H7-14[30;14H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;62H[K[34;108H6-13[30;13H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;61H[K[34;108H5-12[30;12H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;60H[K[34;108H4-11[30;11H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;59H[K[34;108H3-10[30;10H[?25h[?25l =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;58H[K[34;108H2-9 [30;9H[?25h[?25ls =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H3-10[30;10H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H4-11[30;11H[?25h[?25lr =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H5-12[30;12H[?25h[?25li =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H6-13[30;13H[?25h[?25ln =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H7-14[30;14H[?25h[?25lg =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H8-15[30;15H[?25h[?25l  =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H9-16[30;16H[?25h[?25l* =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H10-17[30;17H[?25h[?25li =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H1-18[30;18H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H2-19[30;19H[?25h[34;1H[K[30;18H[?25l[34;95H^[[30;18H[34;95H  [30;19H[34;105H70,11-18      Bot[30;18H[?25h[?25l[34;95H:[30;18H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1744C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:70:18:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ to â€˜[01m[Kstd::string*[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>*[m[Kâ€™} in initialization
   70 |  string *it =[01;31m[Kfind(column7.begin(),column7.end(),"Scorsese")[m[K;
      |              [01;31m[K~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                  [01;31m[K|[m[K
      |                  [01;31m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:17:53 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1744C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( [32mint[m y:column8){[25;30H[K[26;5H            [34m//cout <<-[m[31m1[m[34m*y<<endl;[m[26;38H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    string *it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);
        cout<< *it<<[31m"     "[m<<it<<endl;
}
        [33;9H[K[34;105H70,11-18      Bot[30;18H[?25h[?25l[34;95H~@k[30;18H[34;95H   [30;19H[34;109H2-19[30;19H[?25h[?25l[34;95H~@k[30;19H[34;95H   [30;18H[34;109H1-18[30;18H[?25h[?25l[34;95H~@k[30;18H[34;95H   [30;17H[34;109H0-17[30;17H[?25h[?25l[34;95H~@k[30;17H[34;95H   [30;16H[34;108H9-16 [30;16H[?25h[?25l[34;95H~@k[30;16H[34;95H   [30;15H[34;108H8-15[30;15H[?25h[?25l[34;95Hi[30;15H[34;95H [30;15H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H70,8-15[7CBot[30;15H[?25h[?25l[34;108H9-16[30;16H[?25h[?25l[34;108H10-17[30;17H[?25h[?25lit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;67H[K[34;108H9-16 [30;16H[?25h[?25lit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;66H[K[34;108H8-15[30;15H[?25h[?25lit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;65H[K[34;108H7-14[30;14H[?25h[?25lit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;64H[K[34;108H6-13[30;13H[?25h[?25lt =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;63H[K[34;108H5-12[30;12H[?25h[?25lit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;62H[K[34;108H4-11[30;11H[?25h[?25lit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;61H[K[34;108H3-10[30;10H[?25h[?25lit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;60H[K[34;108H2-9 [30;9H[?25h[?25lvit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H3-10[30;10H[?25h[?25leit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H4-11[30;11H[?25h[?25lcit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H5-12[30;12H[?25h[?25ltit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H6-13[30;13H[?25h[?25loit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H7-14[30;14H[?25h[?25lrit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H8-15[30;15H[?25h[?25l<it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H9-16[30;16H[?25h[?25l>it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H10-17[30;17H[?25h[?25l[34;108H9-16 [30;16H[?25h[?25ls>it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H10-17[30;17H[?25h[?25lt>it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H1-18[30;18H[?25h[?25lr>it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H2-19[30;19H[?25h[?25li>it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H3-20[30;20H[?25h[?25ln>it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H4-21[30;21H[?25h[?25lg>it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H5-22[30;22H[?25h[?25l >it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H6-23[30;23H[?25h[?25l>it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;74H[K[34;109H5-22[30;22H[?25h[?25l[34;109H6-23[30;23H[?25h[?25l:it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H7-24[30;24H[?25h[?25l:it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H8-25[30;25H[?25h[?25liit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H9-26[30;26H[?25h[?25ltit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;108H20-27[30;27H[?25h[?25leit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H1-28[30;28H[?25h[?25lrit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H2-29[30;29H[?25h[?25lait =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H3-30[30;30H[?25h[?25ltit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H4-31[30;31H[?25h[?25loit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H5-32[30;32H[?25h[?25ltit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H6-33[30;33H[?25h[?25lit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[30;83H[K[34;109H5-32[30;32H[?25h[?25lrit =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H6-33[30;33H[?25h[?25l it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);[34;109H7-34[30;34H[?25h[34;1H[K[30;33H[?25l[34;95H^[[30;33H[34;95H  [30;34H[34;105H70,26-33      Bot[30;33H[?25h[?25l[34;95H:[30;33H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1761C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:71:21:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<<[m[Kâ€™ (operand types are â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ and â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™})
   71 |  [32m[Kcout<< *it<<"     "[m[K[01;31m[K<<[m[K[34m[Kit[m[K<<endl;
      |  [32m[K~~~~~~~~~~~~~~~~~~~[m[K[01;31m[K^~[m[K[34m[K~~[m[K
      |            [32m[K|[m[K          [34m[K|[m[K
      |            [32m[K|[m[K          [34m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator {aka __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >}[m[K
      |            [32m[Kstd::basic_ostream<char>[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:108:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  108 |       [01;36m[Koperator[m[K<<(__ostream_type& (*__pf)(__ostream_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:108:36:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ostream<char>& (*)(std::basic_ostream<char>&)[m[Kâ€™}
  108 |       operator<<([01;36m[K__ostream_type& (*__pf)(__ostream_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>][m[Kâ€™
  117 |       [01;36m[Koperator[m[K<<(__ios_type& (*__pf)(__ios_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ios<char>& (*)(std::basic_ios<char>&)[m[Kâ€™}
  117 |       operator<<([01;36m[K__ios_type& (*__pf)(__ios_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  127 |       [01;36m[Koperator[m[K<<(ios_base& (*__pf) (ios_base&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::ios_base& (*)(std::ios_base&)[m[Kâ€™
  127 |       operator<<([01;36m[Kios_base& (*__pf) (ios_base&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  166 |       [01;36m[Koperator[m[K<<(long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong int[m[Kâ€™
  166 |       operator<<([01;36m[Klong __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:170:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  170 |       [01;36m[Koperator[m[K<<(unsigned long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:170:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong unsigned int[m[Kâ€™
  170 |       operator<<([01;36m[Kunsigned long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:174:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  174 |       [01;36m[Koperator[m[K<<(bool __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:174:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kbool[m[Kâ€™
  174 |       operator<<([01;36m[Kbool __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
   91 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:92:22:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort int[m[Kâ€™
   92 |     operator<<([01;36m[Kshort __n[m[K)
      |                [01;36m[K~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:181:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  181 |       [01;36m[Koperator[m[K<<(unsigned short __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:181:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort unsigned int[m[Kâ€™
  181 |       operator<<([01;36m[Kunsigned short __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
  105 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:106:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™
  106 |     operator<<([01;36m[Kint __n[m[K)
      |                [01;36m[K~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:192:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  192 |       [01;36m[Koperator[m[K<<(unsigned int __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:192:31:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kunsigned int[m[Kâ€™
  192 |       operator<<([01;36m[Kunsigned int __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:201:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  201 |       [01;36m[Koperator[m[K<<(long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:201:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long int[m[Kâ€™
  201 |       operator<<([01;36m[Klong long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:205:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  205 |       [01;36m[Koperator[m[K<<(unsigned long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:205:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long unsigned int[m[Kâ€™
  205 |       operator<<([01;36m[Kunsigned long long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:220:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  220 |       [01;36m[Koperator[m[K<<(double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:220:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™
  220 |       operator<<([01;36m[Kdouble __f[m[K)
      |                  [01;36m[K~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:224:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  224 |       [01;36m[Koperator[m[K<<(float __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:224:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kfloat[m[Kâ€™
  224 |       operator<<([01;36m[Kfloat __f[m[K)
      |                  [01;36m[K~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:232:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  232 |       [01;36m[Koperator[m[K<<(long double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:232:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong double[m[Kâ€™
  232 |       operator<<([01;36m[Klong double __f[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:245:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  245 |       [01;36m[Koperator[m[K<<(const void* __p)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:245:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kconst void*[m[Kâ€™
  245 |       operator<<([01;36m[Kconst void* __p[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>][m[Kâ€™
  119 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:120:34:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__streambuf_type*[m[Kâ€™ {aka â€˜[01m[Kstd::basic_streambuf<char>*[m[Kâ€™}
  120 |     operator<<([01;36m[K__streambuf_type* __sbin[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~[m[K
In file included from [01m[K/usr/include/c++/9/string:55[m[K,
                 from [01m[K/usr/include/c++/9/bits/locale_classes.h:40[m[K,
                 from [01m[K/usr/include/c++/9/bits/ios_base.h:41[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)[m[Kâ€™
 6419 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/bits/ios_base.h:46[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)[m[Kâ€™
  217 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst std::error_code&[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)[m[Kâ€™
  506 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[K_CharT[m[Kâ€™ (â€˜[01m[Kchar[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™)
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)[m[Kâ€™
  511 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)[m[Kâ€™
  517 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)[m[Kâ€™
  523 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, signed char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Ksigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)[m[Kâ€™
  528 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kunsigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)[m[Kâ€™
  548 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst _CharT*[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)[m[Kâ€™
  321 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)[m[Kâ€™
  565 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)[m[Kâ€™
  578 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst signed char*[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)[m[Kâ€™
  583 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst unsigned char*[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&)[m[Kâ€™
  691 |     [01;36m[Koperator[m[K<<(_Ostream&& __os, const _Tp& __x)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/ostream: In substitution of â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&) [with _Ostream = std::basic_ostream<char>&; _Tp = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >][m[Kâ€™:
[01m[KTasks.cpp:71:23:[m[K   required from here
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::basic_ostream<char>&>[m[Kâ€™
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:18:48 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1761C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( [32mint[m y:column8){[25;30H[K[26;5H            [34m//cout <<-[m[31m1[m[34m*y<<endl;[m[26;38H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);
        cout<< *it<<[31m"     "[m<<it<<endl;
}
        [33;9H[K[34;105H70,26-33      Bot[30;33H[?25h[?25l[34;95H~@k[30;33H[34;95H   [31;33H[34;106H1[31;33H[?25h[?25l[34;95H~@k[31;33H[34;95H   [31;32H[34;109H5-32[31;32H[?25h[?25l[34;95H~@k[31;32H[34;95H   [31;31H[34;109H4-31[31;31H[?25h[?25l[34;95H~@k[31;31H[34;95H   [31;30H[34;109H3-30[31;30H[?25h[?25l[34;95Hi[31;30H[34;95H [31;30H


[1m-- INSERT --[m[34;13H[K[34;105H71,23-30      Bot[31;30H[?25h[?25l[34;109H4-31[31;31H[?25h[?25l[34;109H5-32[31;32H[?25h[?25l<<endl;[31;38H[K[34;109H4-31[31;31H[?25h[?25l<<endl;[31;37H[K[34;109H3-30[31;30H[?25h[?25l<endl;[31;36H[K[34;109H2-29[31;29H[?25h[?25l<endl;[31;35H[K[34;109H1-28[31;28H[?25h[34;1H[K[31;27H[?25l[34;95H^[[31;27H[34;95H  [31;28H[34;105H71,20-27      Bot[31;27H[?25h[?25l[34;95H:[31;27H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1757C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
3277857
     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ [Ag++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:19:44 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1757C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( [32mint[m y:column8){[25;30H[K[26;5H            [34m//cout <<-[m[31m1[m[34m*y<<endl;[m[26;38H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);
        cout<< *it<<[31m"     "[m<<endl;
}
        [33;9H[K[34;105H71,20-27      Bot[31;27H[?25h[?25l[34;95H~@k[31;27H[34;95H   [31;28H[34;109H1-28[31;28H[?25h[?25l[34;95H~@k[31;28H[34;95H   [31;29H[34;109H2-29[31;29H[?25h[?25l[34;95H~@k[31;29H[34;95H   [31;30H[34;109H3-30[31;30H[?25h[?25l[34;95H~@k[31;30H[34;95H   [31;31H[34;109H4-31[31;31H[?25h[?25l[34;95H~@k[31;31H[34;95H   [30;31H[34;106H0[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [29;23H[34;105H69,16-23[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [28;31H[34;106H8,24-31[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [27;9H[25;28H[106m{[27;9H}[m[34;106H7,2-9  [27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [26;31H[25;28H{[27;9H}[34;106H6,17-31[26;31H[?25h[?25l[34;95H~@k[26;31H[34;95H   [25;28H[106m{[27;9H}[m[34;106H5,21-28[25;28H[?25h[?25l[34;95H~@k[25;28H[34;95H   [25;27H[25;12H[106m([14C)[m{[27;9H}[34;109H0-27[25;27H[?25h[?25l[34;95H~@k[25;27H[34;95H   [25;26H[25;12H([14C)[34;108H19-26[25;26H[?25h[?25l[34;95H~@k[25;26H[34;95H   [25;27H[25;12H[106m([14C)[m[34;108H20-27[25;27H[?25h[?25l[34;95H7[25;27H[?25h[?25l[34;96H~@k[25;27H[34;95H    [25;28H[25;12H([14C)[106m{[27;9H}[m[34;109H1-28[25;28H[?25h[?25l[34;95H~@k[25;28H[34;95H   [25;27H[25;12H[106m([14C)[m{[27;9H}[34;109H0-27[25;27H[?25h[?25l[34;95Hi[25;27H[34;95H [25;27H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H65,20-27      Bot[25;27H[?25h[?25l)[106m{[m[25;28H[K[25;26H[106m)[m{[34;108H19-26[25;26H[?25h[?25l[106m7[m){7[106m)[m[34;108H20-27[25;27H[?25h[?25l[25;12H([14C)[34;106H6,13[26;27H[?25h[?25l[34;109H2-26[26;26H[?25h[?25l[34;109H1-25[26;25H[?25h[?25l[34;109H0-24[26;24H[?25h[?25l[34;108H9-23 [26;23H[?25h[?25l[34;108H8-22[26;22H[?25h[?25l[34;108H7-21[26;21H[?25h[?25l[34;108H6-20[26;20H[?25h[?25l[34;108H5-19[26;19H[?25h[?25l/cout <<-[31m1[m*y<<endl;[26;36H[K[34;108H4-18[26;18H[?25h[?25lcout <<-[31m1[m*y<<endl;[26;35H[K[34;108H3-17[26;17H[?25h[?25l[34;108H4-18[26;18H[?25h[?25l[34;108H5-19[26;19H[?25h[?25l[34;108H6-20[26;20H[?25h[?25l[34;108H7-21[26;21H[?25h[?25l[34;108H8-22[26;22H[?25h[?25l[34;108H9-23[26;23H[?25h[?25l[34;108H10-24[26;24H[?25h[?25l[34;109H1-25[26;25H[?25h[?25l[34;109H2-26[26;26H[?25h[?25l[34;109H3-27[26;27H[?25h[?25l1y<<endl;[26;34H[K[34;109H2-26[26;26H[?25h[?25ly<<endl;[26;33H[K[34;109H1-25[26;25H[?25h[?25ly<<endl;[26;32H[K[34;109H0-24[26;24H[?25h[?25l[25;28H[106m{[27;9H}[m[34;106H7,3-10 [27;10H[?25h[?25l[25;28H{[27;9H}[34;106H8,17-24[28;24H[?25h[?25l[34;106H9[29;24H[?25h[34;1H[K[29;23H[?25l[34;95H^[[29;23H[34;95H  [29;24H[34;105H69,16-23      Bot[29;23H[?25h[?25l[34;95H:[29;23H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1752C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:65:13:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::__cxx11::basic_string<char>[m[Kâ€™ to â€˜[01m[Kint[m[Kâ€™ in initialization
   65 |  for( int y:[01;31m[Kcolumn7[m[K){
      |             [01;31m[K^~~~~~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:20:31 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1752C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( [32mint[m y:column7){[25;30H[K[26;5H            cout <<y<<endl;[26;32H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);
        cout<< *it<<[31m"     "[m<<endl;
}
        [33;9H[K[34;105H69,16-23      Bot[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [28;23H[34;106H8[28;23H[?25h[?25l[34;95H~@k[28;23H[34;95H   [29;23H[34;106H9[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [28;23H[34;106H8[28;23H[?25h[?25l[34;95H~@k[28;23H[34;95H   [27;9H[25;28H[106m{[27;9H}[m[34;106H7,2-9  [27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [26;23H[25;28H{[27;9H}[34;106H6,9-23[26;23H[?25h[?25l[34;95H~@k[26;23H[34;95H   [26;22H[34;108H8-22[26;22H[?25h[?25l[34;95H~@k[26;22H[34;95H   [25;22H[34;106H5,15-22[25;22H[?25h[?25l[34;95H~@k[25;22H[34;95H   [25;21H[34;109H4-21[25;21H[?25h[?25l[34;95H~@k[25;21H[34;95H   [25;20H[34;109H3-20[25;20H[?25h[?25l[34;95H~@k[25;20H[34;95H   [25;19H[34;109H2-19[25;19H[?25h[?25l[34;95H~@k[25;19H[34;95H   [25;18H[34;109H1-18[25;18H[?25h[?25l[34;95H~@k[25;18H[34;95H   [25;17H[34;109H0-17[25;17H[?25h[?25l[34;95H~@k[25;17H[34;95H   [25;16H[34;108H9-16 [25;16H[?25h[?25l[34;95H~@k[25;16H[34;95H   [25;15H[34;108H8-15[25;15H[?25h[?25l[34;95H~@k[25;15H[34;95H   [25;14H[34;108H7-14[25;14H[?25h[?25l[34;95H~@k[25;14H[34;95H   [25;15H[34;108H8-15[25;15H[?25h[?25l[34;95Hi[25;15H[34;95H [25;15H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H65,8-15[7CBot[25;15H[?25h[?25l[34;108H9-16[25;16H[?25h[?25l[34;108H10-17[25;17H[?25h[?25lin y:column7){[25;28H[K[34;108H9-16 [25;16H[?25h[?25l y:column7){[25;27H[K[34;108H8-15[25;15H[?25h[?25l y:column7){[25;26H[K[34;108H7-14[25;14H[?25h[?25ls y:column7){[34;108H8-15[25;15H[?25h[?25lt y:column7){[34;108H9-16[25;16H[?25h[?25lr y:column7){[34;108H10-17[25;17H[?25h[?25li y:column7){[34;109H1-18[25;18H[?25h[?25ln y:column7){[34;109H2-19[25;19H[?25h[?25lg y:column7){[34;109H3-20[25;20H[?25h[34;1H[K[25;19H[?25l[34;95H^[[25;19H[34;95H  [25;20H[34;105H65,12-19      Bot[25;19H[?25h[?25l[34;95H:[25;19H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1755C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
Almodóvar, Pedro
Almodóvar, Pedro
Cronenberg, David
Lester, Richard
Malick, Terrence
Glen, John
Loma, José Antonio de la
Sebastian, Beverly
Besson, Luc
Nuytten, Bruno
Bergman, Ingmar
Bertolucci, Bernardo
Lelouch, Claude
Lelouch, Claude
Lelouch, Claude
Puenzo, Luiz
Kulik, Buzz
Hitchcock, Alfred
Ford, John
Coppola, Francis Ford
Donner, Richard
Spielberg, Steven
Glaser, Paul Michael
Hopkins, Stephen
Hopper, Dennis
Pillsbury, Sam
Sinise, Gary
Thompson, J. Lee
Stern, Steven Hilliard
Altman, Robert
Bergman, Ingmar
Bergman, Ingmar
Bergman, Ingmar

Bergman, Ingmar
Bergman, Ingmar
Bergman, Ingmar
Bergman, Ingmar
Huston, John
Hughes, Ken
Young, Terence

Edwards, Blake
Edwards, Blake
Hill, George Roy
Hitchcock, Alfred
Konchalovsky, Andrei
Wise, Robert

Depardieu, Gérard
Alda, Alan
Attenborough, Richard
Russell, Ken
Kagan, Jeremy Paul
Vanwagenen, Sterling
Lyne, Adrian
Noyce, Phillip
Truffaut, François
Howson, Frank

Lang, Fritz

Besson, Luc
Milius, John
Purcell, Evelyn
Scorsese, Martin
Seidelman, Susan
May, Elaine
Thorpe, Richard
Crosland, Alan
Axel, Gabriel

Young, Terrence
Hitchcock, Alfred
Donaggio, Michael Winner
Lumet, Sidney
Wellman, William
Gilbert, Lewis
Winning, David

Bradley, Al
Frankenheimer, John
Jones, David
Lynch, David
DeCoteau, David
Romero, George A.
Frears, Stephen
Wenders, Wim
Allegret, Marc
Aurel, Jean
Boisrond, Michel
Boisrond, Michel
Bourguignon, Serge
Dmytryk, Edward
Godard, Jean-Luc
Koster, Henry
Malle, Louis
Molinaro, Edouard
Surin, Fred
Thomas, Ralph
Vadim, Roger
Vadim, Roger
Vadim, Roger
Lambert, Mary
Hitchcock, Alfred
Schaffner, Franklin J.
Spielberg, Steven
Bakshi, Ralph
Benton, Robert
Burton, Tim
Edwards, Blake
Heston, Charlton
Joanou, Phil
Kershner, Irvin
Lyne, Adrian
Moxey, John Llewellyn
Pearce, Richard
Rees, Jerry
Reiner, Rob
Bergman, Ingmar
Philips, Lee

Drury, David

Mastorakis, Nico
Pakula, Alan J.
DeMille, Cecil B.
Rosenberg, Stuart
Taylor, Jud

Winkler, Irwin
Lang, Fritz
Lang, Fritz
Ford, Greg

Attenborough, Richard
Milius, John
Nichols, Mike
Rush, Richard
Wenders, Wim
Adolphson, Edvin
Bergman, Ingmar
Cukor, George
Donen, Stanley
Edgren, Gustaf
Fleming, Victor
Gibson, Alan
Green, Guy
Hitchcock, Alfred
Hitchcock, Alfred
Lindberg, Per
Litvak, Anatole
Litvak, Anatole
McCarey, Leo
Molander, Gustaf
Molander, Gustaf
Molander, Gustaf
Molander, Gustav
Molander, Gustav
Renoir, Jean
Rossellini, Roberto
Rossellini, Roberto
Rossellini, Roberto
Rossellini, Roberto
Saks, Gene


Holzman, Allan
Milius, John
Prior, David A.
Clark, Jim
Scorsese, Martin

Forman, Milos
Sargent, Joseph
Kaufman, Philip
Huston, John
Seaton, George
Truffaut, François
Bergman, Ingmar
Curtis, Dan
Hopper, Dennis
Rafelson, Bob
Schlesinger, John
Hamilton, Guy
Boorman, John
Bernds, Edward
Leigh, Jason
Nelson, Ralph
Eastwood, Clint
Eastwood, Clint
Barker, Clive
Pialat, Maurice
Varda, Agnes

Gilliam, Terry

Anthony, Joseph
Glen, John
Wellman, William
McTiernan, John
Scorsese, Martin
Babenco, Hector
Eastwood, Clint
Hill, George Roy
Pevney, Joseph
Rumar, Craig
Rappeneau, Jean-Paul
Ford, Aleksander
Ingvordsen, J. Christian
Wicki, Bernhard
Bergman, Ingmar
Polanski, Roman
Crichton, Michael
Cronenberg, David
Lambert, Bruce
Friedkin, William

King Keller, Frederick
Ford, John
Anger, Kenneth
Lee, Spike
Cannon, Dyan
Lumet, Sidney
Claxton, William F.
Bergman, Robert
Day, Robert
Huyck, Willard
Ruben, Joseph
Scott, Ridley
Fellini, Federico
Cabanne, Christy
Duigan, John
Clément, René
Gries, Tom
Taylor, Don
Mackenzie, John
Hitchcock, Alfred

Theumer, Ernst R. von
Mackenzie, John
Dante, Joe
Heckerling, Amy
Gottlieb, Michael
Cronenberg, David
Edwards, Blake
Lambert, Bruce

Seiter, William A.
Ray, Nicholas
Lynch, David
Jewison, Norman
Miller, George
Gilbert, Lewis
Lathan, Stan

Rifkin, Adam
Ashby, Hal
Lumet, Sidney
Schlesinger, John
Englund, George
Taylor, Sam
Walsh, Raoul
Ritt, Martin
Siegel, Don
Penn, Arthur
Konchalovsky, Andrei
Weill, Claudia
Frears, Stephen
Schroeder, Barbet
Szabó, István

Daniel, Rod
Hitchcock, Alfred
Panama, Norman
Gilbert, Lewis
Joffe, Roland
Furie, Sidney J.
Feferman, Linda
Bahr, Fax
Coppola, Francis Ford
Eastwood, Clint
Bourguignon, Serge
Schmoeller, David
Spielberg, Steven
Lambert, Mary
Walton, Kip
Hill, George Roy
Altman, Robert
Crichton, Charles
Bergman, Ingmar
Bergman, Ingmar
Beineix, Jean-Jacques
Forman, Milos
S, Jeremiah
Kurosawa, Akira
Allen, Woody
Avedis, Howard Hikmet
Wright, Thomas J.
Coppola, Francis Ford
Hathaway, Henry
Ford, John
Ford, John
Aldrich, Robert
Bernhardt, Curtis
Goulding, Edmund
Mankiewicz, Joseph L.
Cronenberg, David
Franklin, Howard 
Russell, Ken
Russell, Ken
Hitchcock, Alfred
Cocteau, Jean
Hitchcock, Alfred
Wyler, William
Castle, Nick
Wrede, Caspar
Auer, John H.
Lee, Spike
Peerce, Larry
Widerberg, Bo
Budds, Colin


Brickman, Paul
Berri, Claude
Chouraqui, Elie
Comeau, Alain
Corneau, Alan
Richards, Dick
Truffaut, François
Berri, Claude
Joffe, Roland
Lynch, David
Lumet, Sidney
Menendez, Ramon
Crichton, Michael
Jameson, Jerry

Garnett, Tay
Kramer, Stanley


Wenders, Wim
Wenders, Wim
Roeg, Nicolas

Caro, Marc
Crichton, Michael
Hyams, Peter
Tuchner, Michael
Ford, John
Ford, John
Ford, John
Meagher, John
Dahlin, Bob
Kollek, Amos
Lumet, Sidney
Polanski, Roman
Pollack, Sydney
Rosenberg, Stuart
Schroeder, Barbet

Curtiz, Michael
Fleming, Victor
Resnais, Alain
Gilliam, Terry
Kubrick, Stanley
Kane, Joseph

Cronenberg, David
Ritt, Martin
Brest, Martin
Quinn, James
Fellini, Federico
De Sica, Vittorio
Hamilton, Guy
Hermoso, Miguel
Parrish, Robert

Winning, David
Schnitzer, Robert Allen
Casden, Ron
Daves, Delmer
Allen, Woody
Allen, Woody
Allen, Woody
Allen, Woody
Troell, Jan
Avnet, John
Needham, Hal
Collins, Lewis D.
Chomsky, Marvin J.
Band, Charles
London, Roy
Kiersch, Fritz
Belson, Jerry
Benton, Robert
Gilbert, Brian
Kagan, Jeremy Paul
Pollack, Sydney
Ritt, Martin
Ross, Herbert
Dante, Joe
Kershner, Irvin
Lucas, George
Marquand, Richard
Chelsom, Peter
Dwan, Allan
Sturges, John
Lederman, Ross
Smithey, Alan
Fellini, Federico
Bridges, James
Lumet, Sidney
Pakula, Alan J.
Pollack, Sydney
Silverstein, Elliot

Hitchcock, Alfred
Stevenson, Robert
Sidaris, Andy
Golden, Dan
Ruben, Katt Shea
Stein, Ken
Coolidge, Martha
Demme, Jonathan
Kampmann, Steven 
McEveety, Bernard

Brooks, Richard
Sheridan, Jim
Hobbs, Lyndall
Boleslawski, Richard
Brown, Clarence
Brown, Clarence
Brown, Clarence
Brown, Clarence
Brown, Clarence
Cukor, George
Fitzmaurice, George
Franklin, Sidney
Goulding, Edmund
Leonard, Robert Z.
Lubitsch, Ernst
Mamoulian, Rouben
Niblo, Fred
Pabst, Georg Wilhelm
Robertson, John S.


Cassavetes, John
Pollack, Sydney
Pytka, Joe
Mankiewicz, Joseph L.
Spielberg, Steven
Spielberg, Steven
Lisberger, Steven
Young, Robert M.
Hickox, Douglas
Blier, Bertrand
Stone, Oliver
Ford, John
Haskin, Byron
Rossen, Robert
Hyam, Peter
Mulligan, Robert
Wilson, Hugh

Mulligan, Robert
Levinson, Barry
Godard, Jean-Luc
Stanley, Paul

Curtis, Dan

Hitchcock, Alfred
Mann, Michael
De Palma, Brian
Nichols, Mike
Seltzer, David

Kuzui, Fran Rubel
Cameron, James
Cameron, James
Guillermin, John

Babenco, Hector
Bill, Tony
Carpenter, John
Chapman, Michael
Davis, Andrew
Foley, James
Jordan, Neil
Schepisi, Fred
Scott, Ridley
Stone, Oliver


Taylor, Ray
Conway, Jack
Byrum, John
Lafia, John
Beresford, Bruce
Barnard, Michael
Cronenberg, David
Holzman, Allan
Mulcahy, Russell

Konchalovsky, Andrei
Boulting, Roy
Demme, Jonathan
Higgins, Colin
Jewison, Norman
Katselas, Milton
Marshall, Garry
Miller, Robert Ellis
Oz, Frank
Ritchie, Michael
Ross, Herbert
Sandrich, Jay
Spielberg, Steven
Zieff, Howard

Ford, John
Taylor, Jud
Hathaway, Henry
Sherman, Vincent
Welles, Orson
Vidor, Charles
Vidor, Charles
Vidor, Charles
Beatty, Warren
Hitchcock, Alfred
Florea, John
Heckerling, Amy
Holcomb, Rod
Bergman, Ingmar
Cukor, George
Huston, John
Lester, Richard
Wyler, William
Anthony, Joseph
Cukor, George
Harvey, Anthony
Kazan, Elia
Kramer, Stanley
Lang, Walter
Miller, Stuart
Rydell, Mark







Dickerson, Ernest R.
Anspaugh, David
Levinson, Barry
Scorsese, Martin

Reeve, Geoffrey
Zinnemann, Fred
Emes, Ian
Brand, Larry
Taylor, Ray
Thompson, Brett
Hoffs, Tamar Simon
Ramis, Harold
Taylor, Don
Clarke, Alan
Taylor, Ray
Taylor, Sam
Neff, Thomas L.
Kaczender, George
Ford, John
Koster, Henry
Wilmington, Michael
Coen, Joel
Hallström, Lasse
Pialat, Maurice
Hill, George Roy
Fukasaku, Kinji
Vidor, King
Coppola, Francis Ford
Mazursky, Paul
Sonnenfeld, B.
Browning, Tod
Dragoti, Stan
Barreto, Bruno
Oliansky, Joel
Silver, Joan Micklin
Wenders, Wim
Barrett, Lezli-An
Frank, Melvin
Russell, Ken
Russell, Ken
Chaffey, Don
Bergman, Ingmar
Jaglom, Henry
Szabó, István
Hitchcock, Alfred

Hooks, Kevin
Donen, Stanley
Cox, Alex

Magnoli, Albert
Levy, Ralph

Wiemer, Robert
Bergman, Ingmar
Bogdanovich, Peter
Damski, Mel
Wilder, Gene
Amurri, Franco
Wilder, Gene
Kubrick, Stanley
Meyer, Nicholas
McBride, Jim
Stone, Oliver
Marshall, Penny
Allen, Woody
Allen, Woody
Beatty, Warren
Beresford, Bruce
Brooks, Richard
Coppola, Francis Ford
Coppola, Francis Ford
Panama, Norman
Ross, Herbert


Fellini, Federico
Avildsen, John G.
Frankenheimer, John
Pollack, Sydney
Saks, Gene
Ford, John
Hitchcock, Alfred
Hitchcock, Alfred
Colmes, Walter
King, Henry
LeRoy, Mervyn
Donner, Richard
Herman, Mark
Webb, Millard
Donner, Richard
Furie, Sidney J.
Waris, Hussein
Noyce, Phillip
Scott, Tony
Hallström, Lasse
Beineix, Jean-Jacques
Wenders, Wim
Zieff, Howard
Winner, Michael
Jones, Terry
Kikoine, Gerard
King, Rick
Coppola, Francis Ford
Zanussi, Krzystoff
Collins, Lewis D.
Cornell, John
Faiman, Peter
Wenders, Wim
Pakula, Alan J.
Blot, Philippe
Coppola, Christopher
Lambert, Bruce
Jarmusch, Jim
Post, Ted
Byrne, David
Mizoguchi, Kenji
Cohen, Martin B.
Coolidge, Martha
Badham, John
Lumet, Sidney
Nimoy, Leonard
Attenborough, Richard
Blancato, Ken
Bolt, Ben
Coppola, Francis Ford
Coppola, Francis Ford
Finch, Charles
Hill, Walter
Brickman, Paul
Hackford, Taylor
Scorsese, Martin

Taylor, Ray
Blier, Bertrand
Russell, Ken
Malmuth, Bruce
Hitchcock, Alfred
Sternberg, Josef von
Stockwell, John
Kazan, Elia
Ritchie, Michael
Amateau, Rod
Lattuada, Alberto
Jewison, Norman
McLaglen, Andrew V.
Barry, Michael
Eastwood, Clint
Eastwood, Clint
Locke, Sondra
Hitchcock, Alfred
Hook, Harry
Boulting, Roy
Higgin, Howard
Hitchcock, Alfred
Rayfield, David
Hanson, Curtis
Glatter, Lesli Linka
Dell, Stewart
Freed, Mark
Cukor, George
De Sica, Vittorio
De Sica, Vittorio
De Sica, Vittorio
Hathaway, Henry
Hough, John
Mann, Anthony
Mann, Anthony
Mann, Delbert
Mattoli, Mario
Ritt, Martin
Sagal, Boris
Scola, Ettore
Wertmuller, Lina





Needham, Hal

Lommel, Ulli

Beaudine, William
Joffe, Roland
Hughes, John
Kubrick, Stanley
Soderbergh, Steven
Weir, Peter
Sebastian, Beverly
Ashby, Hal
Brooks, James L.
De Sica, Vittorio
McGrath, Joseph
Nichols, Mike
Siegel, Don

Howard, William K.
De Winter, Harry
Keshishian, Alek
Lewicki, Steven Jon





Dinner, Michael
Gibbins, Duncan
Hopper, Dennis
Fellini, Federico
Martino, Sergio
Hopper, Dennis
Dwan, Allan
Stone, Oliver
Loncraine, Richard
Fellini, Federico
Eastwood, Clint
Eastwood, Clint
Ross, Herbert


Costner, Kevin
Donaldson, Roger
Scorsese, Martin
Haines, Randa
Almodóvar, Pedro
Almodóvar, Pedro
Almodóvar, Pedro
Keach, James

Sherman, Gary

Loach, Ken
Lanza, Anthony M.
Costner, Kevin
Sayles, John
Parker, Alan
Eastwood, Clint
Barbash, Uri
Ferrera, Abel
Kaplan, Jonathan
Kotcheff, Ted
Miller, Robert Ellis
Rudolph, Alan
Scott, Tony
Weir, Peter

Benjamin, Richard
Brickman, Marshall

Stevens, George
Miller, Robert Ellis
Bergman, Andrew
Kubrick, Stanley
Dassin, Jules
Ross, Herbert
Arkush, Allan
Figgis, Mike
Stone, Oliver
Van Peebles, Mario

Boorman, John
Lean, David
Sarafian, Richard C.
Ford, John
Frankenheimer, John
Kleiser, Randal
Pal, George
Fosse, Bob
Gordon, Steve
Minnelli, Vincente
Scorsese, Martin
Hopkins, Stephen
Haggard, Piers
Greenaway, Peter
Huston, John
Karlson, Phil
Negulesco, Jean

Aykroyd, Dan
Estevez, Emilio
Holland, Savage Steve
Jordan, Neil
Schatzberg, Jerry
Zucker, Jerry
Zwick, Edward
Bill, Tony
Lewis, Joseph H.
Mann, Daniel
Blier, Bertrand
Fraker, William A.
Welles, Orson
Cammell, Donald
Brooks, Mel
Ritt, Martin
Gold, Greg
Bowser, Kenneth
Sturges, John
Vorhaus, Bernard
Deruddere, Dominique
Ford, John
Hitchcock, Alfred
Marder, Bruce
Ritt, Martin

George, Peter
Mann, Daniel

Dearden, Basil
Russell, Ken

Bradbury, Robert N.
Weis, Gary
Meyer, Nicholas
Shatner, William 
Lovy, Steven
Cosmatos, George P.
Scott, Tony

Bergman, Ingmar

Hitchcock, Alfred
Bennett, Walter
Reis, Irving
Taylor, Ray
Taylor, Ray
Taylor, Ray
Ford, John
Ford, John
Ford, John
Hitchcock, Alfred
Sherman, George

Bergman, Ingmar
Ludwig, Edward
O'Herlihy, Michael
Benedek, Laslo
Hitchcock, Alfred
Forbes, Bryan
Cronenberg, David
Smith, Charles Martin
Hill, Walter
Masterson, Peter
Ford, John
Costa-Gavras
Ivory, James
Richardson, Tony
Besson, Luc
Bergman, Andrew
Taylor, Dan
Hunt, Peter R.
Winkler, Henry
Stern, Steven Hilliard
Fisher, Jack
Clark, Bob
DeVito, Danny

Clement, Dick
Brooks, Mel
Eastwood, Clint
Reiner, Carl
Compton, Richard
Alda, Alan
Birch, Patricia
Demme, Jonathan
Donner, Richard
Kloves, Steve
Landis, John
Schepisi, Fred
Towne, Robert

Hopper, Dennis
Milius, John
Edzard, Christine
Taylor, Sam
Stone, Oliver
Winner, Michael
Daves, Delmer
Greenaway, Peter
Baker, Graham
Beresford, Bruce

Stern, Sandor
Edwards, Blake
Cook, Fielder
Donner, Clive
Donner, Clive
Taylor, Jud
Zucker, David
Tatoulis, Colin South, John
Reitman, Ivan
Thomas, Dave
Colla, Richard A.
Tuchner, Michael

Scheerer, Robert
Stern, Sandor
Coppola, Francis Ford
Patterson, Willi
Malle, Louis
Rossi, Franco
Waggner, George
Boorman, John
Bonerz, Peter
Myerson, Alan
Paris, Jerry
Walton, Kip
Zinnemann, Fred
Russell, Ken
Segal, Alex
Donaldson, Roger
Spottiswoode, Roger
Schlöndorff, Volker


Spielberg, Steven
Schrader, Paul
Hunt, Peter R.
Deutch, Howard

Taylor, Ray
Rohmer, Eric
Hughes, John
Marshall, Garry
Schumacher, Joel
Spielberg, Steven
Taylor, Ray

Cimino, Michael
Howard, Ron
Taylor, Baz
Hitchcock, Alfred
Totten, Robert
Morneau, Louis
Cooper, Jackie
Hill, George Roy
McLaglen, Andrew V.
Taylor, Don
Lynch, David

Annaud, Jean-Jacques
Allen, Woody
Jarmusch, Jim
Silver, Marisa
Gilliam, Terry
Phillips, Maurice
Dmytryk, Edward
Quinn, John

Grant, James Edward
Locke, Sondra
Roeg, Nicolas
Richardson, Tony

Dearden, Basil
Dante, Joe
Hyams, Peter
Patrick, John
Stone, Oliver
Abrahams, Jim
Bogart, Paul
Hitchcock, Alfred
Jewison, Norman
Preminger, Otto
Imamura, Shohei
Taylor, Jud
De Sica, Vittorio
Haines, Fred
Huston, John
Bertolucci, Bernardo
Bertolucci, Bernardo
Siegel, Don
Hughes, John
Scott, Ridley
Jordan, Glenn
Palcy, Euzhan
Sharman, Jim
Bondarchuk, Sergei



Travis, Mark W.


Antonioni, Michelangelo
Bertolucci, Bernardo
Gillard, Stuart
Lang, Fritz
Wendkos, Paul
Finkleman, Ken

Bunuel, Luis
Manning, Michelle
Rosenthal, Rick
Byrum, John
Bogdanovich, Peter
Taylor, Don
Zeffirelli, Franco
Avildsen, John G.
Donaldson, Roger
Hitchcock, Alfred
Mizrahi, Moshe

Koster, Henry
Kubrick, Stanley
Mankiewicz, Joseph L.
Wise, Robert
Landis, John
Poitier, Sidney
Hunter, Tim
Abrahams, Jim
Ross, Herbert
Kadar, Jan
Hill, George Roy
Clayton, Jack
Ross, Herbert
King, Stephen
Eastwood, Clint
Wharmby, Tony
Gilbert, Brian
Jackson, Donald G
Edwards, Blake

Costa-Gavras
Sidaris, Andy
Sidaris, Andy
Hamilton, Guy
Green, Alfred E.
Mate, Rudolph
Howard, Ron
Morahan, Christopher

Hyams, Peter
Post, Ted
Verhoeven, Paul
Verhoeven, Paul
Badham, John
Ouellette, Jean-Paul
Corman, Roger
Babenco, Hector
Benton, Robert
Benton, Robert
Brooks, Albert
Cimino, Michael
Grosbard, Ulu
Nichols, Mike
Nichols, Mike
Pakula, Alan J.
Pollack, Sydney
Reisz, Karel
Schepisi, Fred
Schepisi, Fred
Seidelman, Susan
Zemeckis, Robert

Minnelli, Vincente
Ritt, Martin
Streisand, Barbra
Wyler, William
Towns, Philip Saville
Kurosawa, Akira
Cimino, Michael
Cromwell, John
Weeks, Stephen
Bergman, Ingmar
Beresford, Bruce

Antonio, Lou
Dmytryk, Edward
Griffi, Giuseppe Patroni
Huston, John
Hutton, Brian G.
Losey, Joseph
Mankiewicz, Joseph L.
Minnelli, Vincente
Nichols, Mike
Prince, Harold
Stevens, George
Trikonis, Gus
Wilcox, Fred M






Ruggles, Wesley
Corman, Roger

Petrie, Donald
Savoca, Nancy
Beebe, Ford
Wimhurst, Jolyon
Cooper, Jackie
Ford, John
Ford, John
Mandel, Robert
Matthau, Charles
Chapman, Michael
Deutch, Howard
Deutch, Howard
Zemeckis, Robert
Bergman, Ingmar
Bergman, Ingmar
Bergman, Ingmar
Minnelli, Vincente
Apted, Michael


Avildsen, John G.
McLaglen, Andrew V.
Marshall, George
Seiter, William A.
Walsh, Raoul
Coppola, Francis Ford
Couturie, Bill
Huston, John
Reiner, Carl
Russell, Ken
Teague, Lewis
Zemeckis, Robert 

Farrow, John

Lawton, J.F.
Battersby, Roy
Kubrick, Stanley
Bergman, Ingmar
Bergman, Ingmar
Bergman, Ingmar
Bergman, Ingmar
Dembo, Richard
Logan, Joshua
Hulton, Brian G.
Daniel, Rod
Kaurismäki, Mika
Bridges, James
Bergman, Ingmar
Bertolucci, Bernardo
Eastwood, Clint
Kronsberg, Jeremy Joe
Rosenberg, Stuart
Plone, Allen
Band, Charles
Foley, James
Glen, John
Levinson, Barry
Caton-Jones, Michael
Roth, Bobby
Cameron, James
Fincher, David
Jeunet, Jean-Pierre
Scott, Ridley
Vigne, Daniel
Flicker, Theodore J.
Hancock, John D.
Zanussi, Krzystoff
Colla, Richard A.
De Filippo, Eduardo
Donen, Stanley
Fleischer, Richard
Gries, Tom
Ivory, James
McLaglen, Andrew V.
Ross, Herbert


Eastwood, Clint

Jackson, Donald G
Wilder, Billy
Ford, John
Apted, Michael
Yorkin, Bud
Ward, David S.
Bridges, James
Schumacher, Joel
Seidelman, Susan
Coppola, Francis Ford
Lucas, George
Walters, Charles
Poitier, Sidney
Serious, Yahoo
Kubrick, Stanley
McLaglen, Andrew V.
Wolfe, Donald
Bertolucci, Bernardo
Hackford, Taylor
Rafelson, Bob
Reitman, Ivan
Corman, Roger
Green, Guy
Heisler, Stuart
Hellman, Oliver
Pollack, Sydney
Madsen, Kenneth
Leone, Sergio
Betnel, Jonathan
Edwards, Blake
Ford, John
Neame, Ronald
Ray, Nicholas
Wise, Robert
Morrissey, Paul
Cook, Fielder
Kershner, Irvin
Newman, Paul
Newman, Paul
Newman, Paul
Ritt, Martin


Joanou, Phil
Hitchcock, Alfred
Zinnemann, Fred
Hitchcock, Alfred
Wellman, William
Miles, Christopher
Simon, S. Sylvan
Jameson, Jerry

Bergman, Ingmar
Roeg, Nicolas
Aldrich, Robert
Aldrich, Robert
Aldrich, Robert
Aldrich, Robert
Allen, Craig
Almodóvar, Pedro
Anderson, Michael
Annakin, Ken
Annaud, Jean-Jacques
Arnold, Newt
Aslanian, Samson
August, Bille
Becker, Harold
Bergman, Andrew
Bertolucci, Bernardo
Bertolucci, Bernardo
Besson, Luc
Blier, Bertrand
Bogner, Willy
Boulting, John
Brando, Marlon
Cannon, Raymond
Carlsen, Henning
Chaplin, Charles
Cimino, Michael
Clair, Rene
Clarke, Alan
Clegg, Tom
Coppola, Francis Ford
Coppola, Francis Ford
Corman, Roger
Corman, Roger
Cronenberg, David
Dale, Cynthia
De Bello, John
De Bello, John
De Palma, Brian
De Palma, Brian
Degas, Andre
Di Leo, Mario
Donaldson, Roger
Donen, Stanley
Douglas, Kirk
Eastwood, Clint
Fanaka, Jamaa
Fellini, Federico
Forbes, Bryan
Ford, John
Ford, John
Ford, John
Ford, Philip
Ford, Philip
Ford, Philip
Ford, Philip
Ford, Philip
Ford, Philip
Ford, Philip
Forman, Milos
Forsyth, Bill
Friedkin, William
Friedkin, William
Gilbert, Lewis
Gower, Bruce
Graef, Roger
Guest, Val
Guney, Yilmaz
Hardy, Rod
Harrington, Curtis
Haskin, Byron
Hathaway, Henry
Hellman, Monte
Hellman, Monte
Heyes, Douglas
Hitchcock, Alfred
Hitchcock, Alfred
Hitchcock, Alfred
Hitchcock, Alfred
Hitchcock, Alfred
Hitchcock, Alfred
Houck, Joy, Jr.
Hudson, Hugh
Hughes, Terry
Huston, John
Huston, John
Hutton, Brian G.
Irvin, John
Jackson, Mick
Jarman, Derek
Jarmusch, Jim
Joffe, Roland
Jones, Chris
Jones, Terry
Jones, Terry
Kalatozov, Mikhail
Kane, Joseph
Kazan, Elia
Kellogg, Ray
Kennedy, Burt
King, George
Koster, Henry
Kotcheff, Ted
Kubrick, Stanley
Kubrick, Stanley
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Kurosawa, Akira
Lambert, Bruce
Lambert, Bruce
Lang, Fritz
Lang, Fritz
Lang, Fritz
Lang, Fritz
Lang, Fritz
Lang, Fritz
Lang, Fritz
Lee, Spike
Lennon, Biddy W.
Leo, Malcolm
Leone, Sergio
LeRoy, Mervyn
Lester, Mark L.
Lester, Richard
Levinson, Barry
Lloyd, Frank
Logan, Joshua
Logan, Joshua
Lucidi, Maurizio
Ludman, Larry
Ludman, Larry
Ludwig, Edward
Lynch, David
Lynch, David
Mackendrick, Alexander
Mackendrick, Alexander
MacNaughton, Ian
Malle, Louis
Mate, Rudolph
McEveety, Vincent
McGann, William
McGrath, Joseph
McLaglen, Andrew V.
McLaglen, Andrew V.
McTiernan, John
Menzel, Jiri
Miller, David
Miller, David
Minnelli, Vincente
Mischer, Don
Murphy, Eddie
Murphy, Eddie
Nelson, Gary
Newell, Mike
Newman, Paul
Nichols, Mike
Nicholson, Arch
Nicholson, Arch
Nigh, William
O'Connor, Pat
Oliver, Ron
Olmos, Edward James
Owen, Cliff
Pakula, Alan J.
Pakula, Alan J.
Patterson, Richard
Peckinpah, Sam
Penn, Leo
Perier, Etienne
Petrie, Daniel
Pollack, Sydney
Pollack, Sydney
Pontecorvo, Gillo
Post, Ted
Pyun, Albert
Quine, Richard
Quisenberry, Byron
Rademakers, Fons
Ray, Nicholas
Reed, Jerry
Resnais, Alain
Richards, Dick
Ritchie, Michael
Robinson, John Mark
Rochlin, Sheldon
Rosenthal, Rick
Ross, Herbert
Russell, Ken
Rydell, Mark
Sanger, Jonathan
Schaffner, Franklin J.
Schlesinger, John
Schlesinger, John
Schroeder, Barbet
Schultz, Michael
Scorsese, Martin
Sevush, Herb
Sherman, George
Sherman, George
Sholder, Jack
Siegel, Don
Siegel, Don
Siodmak, Robert
Smight, Jack
Spielberg, Steven
Spielberg, Steven
Stevens, George, Jr.
Stiller, Mauritz
Stone, Oliver
Strock, Herbert L.
Stuart, Mel
Sturges, John
Szwarc, Jeannot
Taurog, Norman
Taylor, Gavin
Taylor, Jud
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Ray
Taylor, Roderick
Thomas, Gerald
Tourneur, Jacques
Wajda, Andrzej
Wayne, John
Veber, Francis
Veber, Francis
Weir, Peter
Welles, Orson
Wellman, William
Wenders, Wim
Werner, Peter
Vigne, Daniel
Wise, Robert



































































































































3277857
     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:20:47 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1755C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( string y:column7){[25;32H[K[26;5H            cout <<y<<endl;[26;32H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese"[m);
        cout<< *it<<[31m"     "[m<<endl;
}
        [33;9H[K[34;105H65,12-19      Bot[25;19H[?25h[?25l[34;95H~@k[25;19H[34;95H   [26;19H[34;106H6,5-19 [26;19H[?25h[?25l[34;95H~@k[26;19H[34;95H   [27;9H[25;31H[106m{[27;9H}[m[34;106H7,2-9 [27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [28;19H[25;31H{[27;9H}[34;106H8,12-19[28;19H[?25h[?25l[34;95H~@k[28;19H[34;95H   [29;19H[34;106H9[29;19H[?25h[?25l[34;95H~@k[29;19H[34;95H   [30;19H[34;105H70[30;19H[?25h[?25l[34;95H~@k[30;19H[34;95H   [30;20H[34;109H3-20[30;20H[?25h[?25l[34;95H~@k[30;20H[34;95H   [30;21H[34;109H4-21[30;21H[?25h[?25l[34;95H~@k[30;21H[34;95H   [30;22H[34;109H5-22[30;22H[?25h[?25l[34;95H~@k[30;22H[34;95H   [30;23H[34;109H6-23[30;23H[?25h[?25l[34;95H~@k[30;23H[34;95H   [30;24H[34;109H7-24[30;24H[?25h[?25l[34;95H~@k[30;24H[34;95H   [30;25H[34;109H8-25[30;25H[?25h[?25l[34;95H~@k[30;25H[34;95H   [30;26H[34;109H9-26[30;26H[?25h[?25l[34;95H~@k[30;26H[34;95H   [30;27H[34;108H20-27[30;27H[?25h[?25l[34;95H~@k[30;27H[34;95H   [30;28H[34;109H1-28[30;28H[?25h[?25l[34;95H~@k[30;28H[34;95H   [30;29H[34;109H2-29[30;29H[?25h[?25l[34;95H~@k[30;29H[34;95H   [30;30H[34;109H3-30[30;30H[?25h[?25l[34;95H~@k[30;30H[34;95H   [30;31H[34;109H4-31[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [30;32H[34;109H5-32[30;32H[?25h[?25l[34;95H~@k[30;32H[34;95H   [30;33H[34;109H6-33[30;33H[?25h[?25l[34;95H~@k[30;33H[34;95H   [30;34H[34;109H7-34[30;34H[?25h[?25l[34;95H~@k[30;34H[34;95H   [30;35H[34;109H8-35[30;35H[?25h[?25l[34;95H~@k[30;35H[34;95H   [30;36H[34;109H9-36[30;36H[?25h[?25l[34;95H~@k[30;36H[34;95H   [30;37H[34;108H30-37[30;37H[?25h[?25l[34;95H~@k[30;37H[34;95H   [30;38H[34;109H1-38[30;38H[?25h[?25l[34;95H~@k[30;38H[34;95H   [30;39H[34;109H2-39[30;39H[?25h[?25l[34;95H~@k[30;39H[34;95H   [30;40H[34;109H3-40[30;40H[?25h[?25l[34;95H~@k[30;40H[34;95H   [30;41H[34;109H4-41[30;41H[?25h[?25l[34;95H~@k[30;41H[34;95H   [30;42H[106m([40C)[m[34;109H5-42[30;42H[?25h[?25l[34;95H~@k[30;42H[34;95H   [30;43H([40C)[34;109H6-43[30;43H[?25h[?25l[34;95H~@k[30;43H[34;95H   [30;44H[34;109H7-44[30;44H[?25h[?25l[34;95H~@k[30;44H[34;95H   [30;45H[34;109H8-45[30;45H[?25h[?25l[34;95H~@k[30;45H[34;95H   [30;46H[34;109H9-46[30;46H[?25h[?25l[34;95H~@k[30;46H[34;95H   [30;47H[34;108H40-47[30;47H[?25h[?25l[34;95H~@k[30;47H[34;95H   [30;48H[34;109H1-48[30;48H[?25h[?25l[34;95H~@k[30;48H[34;95H   [30;49H[34;109H2-49[30;49H[?25h[?25l[34;95H~@k[30;49H[34;95H   [30;50H[34;109H3-50[30;50H[?25h[?25l[34;95H~@k[30;50H[34;95H   [30;51H[34;109H4-51[30;51H[?25h[?25l[34;95H~@k[30;51H[34;95H   [30;52H[34;109H5-52[30;52H[?25h[?25l[34;95H~@k[30;52H[34;95H   [30;53H[34;109H6-53[30;53H[?25h[?25l[34;95H~@k[30;53H[34;95H   [30;54H[34;109H7-54[30;54H[?25h[?25l[34;95H~@k[30;54H[34;95H   [30;55H[34;109H8-55[30;55H[?25h[?25l[34;95H~@k[30;55H[34;95H   [30;56H[106m()[m[34;109H9-56[30;56H[?25h[?25l[34;95H~@k[30;56H[34;95H   [30;57H[34;108H50-57[30;57H[?25h[?25l[34;95H~@k[30;57H[34;95H   [30;58H()[34;109H1-58[30;58H[?25h[?25l[34;95H~@k[30;58H[34;95H   [30;59H[34;109H2-59[30;59H[?25h[?25l[34;95H~@k[30;59H[34;95H   [30;60H[34;109H3-60[30;60H[?25h[?25l[34;95H~@k[30;60H[34;95H   [30;61H[34;109H4-61[30;61H[?25h[?25l[34;95H~@k[30;61H[34;95H   [30;62H[34;109H5-62[30;62H[?25h[?25l[34;95H~@k[30;62H[34;95H   [30;63H[34;109H6-63[30;63H[?25h[?25l[34;95H~@k[30;63H[34;95H   [30;64H[34;109H7-64[30;64H[?25h[?25l[34;95H~@k[30;64H[34;95H   [30;65H[34;109H8-65[30;65H[?25h[?25l[34;95H~@k[30;65H[34;95H   [30;66H[34;109H9-66[30;66H[?25h[?25l[34;95H~@k[30;66H[34;95H   [30;67H[34;108H60-67[30;67H[?25h[?25l[34;95H~@k[30;67H[34;95H   [30;68H[34;109H1-68[30;68H[?25h[?25l[34;95H~@k[30;68H[34;95H   [30;69H[34;109H2-69[30;69H[?25h[?25l[34;95H~@k[30;69H[34;95H   [30;70H[106m()[m[34;109H3-70[30;70H[?25h[?25l[34;95H~@k[30;70H[34;95H   [30;71H[34;109H4-71[30;71H[?25h[?25l[34;95H~@k[30;71H[34;95H   [30;72H()[34;109H5-72[30;72H[?25h[?25l[34;95H~@k[30;72H[34;95H   [30;73H[34;109H6-73[30;73H[?25h[?25l[34;95H~@k[30;73H[34;95H   [30;74H[34;109H7-74[30;74H[?25h[?25l[34;95H~@k[30;74H[34;95H   [30;75H[34;109H8-75[30;75H[?25h[?25l[34;95H~@k[30;75H[34;95H   [30;76H[34;109H9-76[30;76H[?25h[?25l[34;95H~@k[30;76H[34;95H   [30;77H[34;108H70-77[30;77H[?25h[?25l[34;95H~@k[30;77H[34;95H   [30;78H[34;109H1-78[30;78H[?25h[?25l[34;95H~@k[30;78H[34;95H   [30;79H[34;109H2-79[30;79H[?25h[?25l[34;95H~@k[30;79H[34;95H   [30;80H[34;109H3-80[30;80H[?25h[?25l[34;95H~@k[30;80H[34;95H   [30;81H[34;109H4-81[30;81H[?25h[?25l[34;95H~@k[30;81H[34;95H   [30;82H[34;109H5-82[30;82H[?25h[?25l[34;95H,[30;82H[34;95H [30;82H[?25h[?25l[34;95H<20>[30;82H[34;95H    [30;83H[30;42H[106m([40C)[m[34;109H6-83[30;83H[?25h[?25l[34;95Hi[30;83H[34;95H [30;83H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H70,76-83      Bot[30;83H[?25h[?25l[30;42H([40C)[34;109H5-82[30;82H[?25h[?25l[34;109H4-81[30;81H[?25h[?25l[34;109H5-82[30;82H[?25h[?25l[31m,"[m);[34;109H6-83[30;83H[?25h[?25l[31m "[m);[34;109H7-84[30;84H[?25h[?25l[31mM"[m);[34;109H8-85[30;85H[?25h[?25l[31ma"[m);[34;109H9-86[30;86H[?25h[?25l[31mr"[m);[34;108H80-87[30;87H[?25h[?25l[31mt"[m);[34;109H1-88[30;88H[?25h[?25l[31mi"[m);[34;109H2-89[30;89H[?25h[?25l[31mn"[m);[34;109H3-90[30;90H[?25h[?25l[34;105H69,17-24[29;24H[?25h[?25l[34;106H8,53-60[28;60H[?25h[?25l[25;31H[106m{[27;9H}[m[34;106H7,3-10 [27;10H[?25h[?25l[25;31H{[27;9H}[34;106H6,18-32[26;32H[?25h[?25l[34;109H7-31[26;31H[?25h[?25l[34;109H6-30[26;30H[?25h[?25l[34;109H5-29[26;29H[?25h[?25l[34;109H4-28[26;28H[?25h[?25l[34;109H3-27[26;27H[?25h[?25l[34;109H2-26[26;26H[?25h[?25l[34;109H1-25[26;25H[?25h[?25l[34;109H0-24[26;24H[?25h[?25l[34;108H9-23 [26;23H[?25h[?25l[34;108H8-22[26;22H[?25h[?25l[34;108H7-21[26;21H[?25h[?25l[34;108H6-20[26;20H[?25h[?25l[34;108H5-19[26;19H[?25h[?25l[34;108H4-18[26;18H[?25h[?25l[34;108H3-17[26;17H[?25h[?25l[34;108H2-9 [26;9H[?25h[?25l/[34;108H3-10[26;10H[?25h[?25l[34m//      cout <<y<<endl;[m[34;108H4-11[26;11H[?25h[34;1H[K[26;10H[?25l[34;95H^[[26;10H[34;95H  [26;11H[34;105H66,3-10[7CBot[26;10H[?25h[?25l[34;95H:[26;10H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1765C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
3277857
Scorsese, Martin     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:21:32 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1765C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( string y:column7){[25;32H[K[26;5H    [34m//      cout <<y<<endl;[m[26;32H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;
}
        [33;9H[K[34;105H66,3-10[7CBot[26;10H[?25h[?25l[34;95H~@k[26;10H[34;95H   [27;9H[25;31H[106m{[27;9H}[m[34;106H7,2-9 [27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [28;10H[25;31H{[27;9H}[34;106H8,3-10[28;10H[?25h[?25l[34;95H~@k[28;10H[34;95H   [29;10H[34;106H9[29;10H[?25h[?25l[34;95H~@k[29;10H[34;95H   [30;10H[34;105H70[30;10H[?25h[?25l[34;95H~@k[30;10H[34;95H   [31;10H[34;106H1[31;10H[?25h[?25l[34;95H~@k[31;10H[34;95H   [31;11H[34;108H4-11[31;11H[?25h[?25l[34;95H~@k[31;11H[34;95H   [31;12H[34;108H5-12[31;12H[?25h[?25l[34;95H~@k[31;12H[34;95H   [31;13H[34;108H6-13[31;13H[?25h[?25l[34;95H~@k[31;13H[34;95H   [31;14H[34;108H7-14[31;14H[?25h[?25l[34;95H~@k[31;14H[34;95H   [31;15H[34;108H8-15[31;15H[?25h[?25l[34;95H~@k[31;15H[34;95H   [31;16H[34;108H9-16[31;16H[?25h[?25l[34;95H~@k[31;16H[34;95H   [31;17H[34;108H10-17[31;17H[?25h[?25l[34;95H~@k[31;17H[34;95H   [31;18H[34;109H1-18[31;18H[?25h[?25l[34;95H~@k[31;18H[34;95H   [31;19H[34;109H2-19[31;19H[?25h[?25l[34;95H~@k[31;19H[34;95H   [31;20H[34;109H3-20[31;20H[?25h[?25l[34;95H~@k[31;20H[34;95H   [31;21H[34;109H4-21[31;21H[?25h[?25l[34;95H~@k[31;21H[34;95H   [31;22H[34;109H5-22[31;22H[?25h[?25l[34;95H~@k[31;22H[34;95H   [31;23H[34;109H6-23[31;23H[?25h[?25l[34;95H~@k[31;23H[34;95H   [31;24H[34;109H7-24[31;24H[?25h[?25l[34;95H~@k[31;24H[34;95H   [31;25H[34;109H8-25[31;25H[?25h[?25l[34;95H~@k[31;25H[34;95H   [31;26H[34;109H9-26[31;26H[?25h[?25l[34;95H~@k[31;26H[34;95H   [31;27H[34;108H20-27[31;27H[?25h[?25l[34;95H~@k[31;27H[34;95H   [31;28H[34;109H1-28[31;28H[?25h[?25l[34;95H~@k[31;28H[34;95H   [31;29H[34;109H2-29[31;29H[?25h[?25l[34;95H~@k[31;29H[34;95H   [31;30H[34;109H3-30[31;30H[?25h[?25l[34;95H<[31;30H[?25h[?25l[34;96H<[31;30H[34;95H  [31;1Hcout<< *it<<[31m"     "[m<<endl;[31;27H[K[34;108H1    [31;1H[?25h[?25l[34;95Hi[31;1H[34;95H [31;1H


[1m-- INSERT --[m[34;13H[K[34;105H71,1[10CBot[31;1H[?25h[?25l        cout<< *it<<[31m"     "[m<<endl;[34;108H2-9[31;9H[?25h[?25l[34;108H3-10[31;10H[?25h[?25l[34;108H4-11[31;11H[?25h[?25l[34;108H5-12[31;12H[?25h[?25l[34;108H6-13[31;13H[?25h[?25l[34;108H7-14[31;14H[?25h[?25l[34;108H8-15[31;15H[?25h[?25l[34;108H9-16[31;16H[?25h[?25l[34;108H10-17[31;17H[?25h[?25l[34;109H1-18[31;18H[?25h[?25l[34;109H2-19[31;19H[?25h[?25l[34;109H3-20[31;20H[?25h[?25l[34;109H4-21[31;21H[?25h[?25l[34;109H5-22[31;22H[?25h[?25l[34;109H6-23[31;23H[?25h[?25l[34;109H7-24[31;24H[?25h[?25l[34;109H8-25[31;25H[?25h[?25l[34;109H9-26[31;26H[?25h[?25l[34;108H20-27[31;27H[?25h[?25l[34;109H1-28[31;28H[?25h[?25l[34;109H2-29[31;29H[?25h[?25l[34;109H3-30[31;30H[?25h[?25l<endl;[34;109H4-31[31;31H[?25h[?25l<endl;[34;109H5-32[31;32H[?25h[?25l[34;109H4-31[31;31H[?25h[?25l[34;109H3-30[31;30H[?25h[?25lc<<endl;[34;109H4-31[31;31H[?25h[?25lo<<endl;[34;109H5-32[31;32H[?25h[?25ll<<endl;[34;109H6-33[31;33H[?25h[?25lu<<endl;[34;109H7-34[31;34H[?25h[?25lm<<endl;[34;109H8-35[31;35H[?25h[?25ln<<endl;[34;109H9-36[31;36H[?25h[?25l1<<endl;[34;108H30-37[31;37H[?25h[?25l[<<endl[97m[101m;
}[m[34;109H1-38[31;38H[?25h[?25l]<<endl;
}[31;37H[106m[][m[34;109H2-39[31;39H[?25h[?25l[34;109H1-38[31;38H[?25h[?25l[106mi[m]<<endl;[31;38Hi[106m][m[34;109H2-39[31;39H[?25h[?25l[106mt[m]<<endl;[31;39Ht[106m][m[34;109H3-40[31;40H[?25h[?25l[34;109H4-41[31;41H[?25h[34;1H[K[31;40H[?25l[34;95H^[[31;40H[34;95H  [31;41H[34;105H71,33-40      Bot[31;40H[?25h[?25l[34;95H:[31;40H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1778C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:71:30:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[Kstd::vector<int>[m[Kâ€™ and â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™})
   71 |  cout<< *it<<"     "<<column1[01;31m[K[[m[Kit]<<endl;
      |                              [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1040:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::reference = int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int][m[Kâ€™
 1040 |       [01;36m[Koperator[m[K[](size_type __n) _GLIBCXX_NOEXCEPT
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1040:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™}
 1040 |       operator[]([01;36m[Ksize_type __n[m[K) _GLIBCXX_NOEXCEPT
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1058:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::const_reference = const int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int][m[Kâ€™
 1058 |       [01;36m[Koperator[m[K[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1058:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™}
 1058 |       operator[]([01;36m[Ksize_type __n[m[K) const _GLIBCXX_NOEXCEPT
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:22:06 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1778C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( string y:column7){[25;32H[K[26;5H    [34m//      cout <<y<<endl;[m[26;32H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<column1[106m[[mit[106m][m<<endl;
}
        [33;9H[K[34;105H71,33-40      Bot[31;40H[?25h[?25l[34;95H~@k[31;40H[34;95H   [31;41H[it][34;109H4-41[31;41H[?25h[?25l[34;95H~@k[31;41H[34;95H   [31;42H[34;109H5-42[31;42H[?25h[?25l[34;95H~@k[31;42H[34;95H   [31;41H[34;109H4-41[31;41H[?25h[?25l[34;95H~@k[31;41H[34;95H   [31;40H[106m[[mit[106m][m[34;109H3-40[31;40H[?25h[?25l[34;95H~@k[31;40H[34;95H   [31;39H[it][34;109H2-39[31;39H[?25h[?25l[34;95H~@k[31;39H[34;95H   [31;38H[34;109H1-38[31;38H[?25h[?25l[34;95H~@k[31;38H[34;95H   [31;37H[106m[[mit[106m][m[34;109H0-37[31;37H[?25h[?25l[34;95H~@k[31;37H[34;95H   [31;36H1[it][34;108H29-36[31;36H[?25h[?25l[34;95H~@k[31;36H[34;95H   [31;37H[106m[[mit[106m][m[34;108H30-37[31;37H[?25h[?25l[34;95H.[31;37H[34;95H [31;37H[?25h[?25l[34;95Ha[31;37H[34;95H [31;38H


[1m-- INSERT --[m[34;13H[K[34;105H71,31-38      Bot[31;38H[?25h[?25lti[106mt[m]<<endl;[31;37H[tit[34;109H2-39[31;39H[?25h[?25lit]<<endl;[31;48H[K[31;37H[106m[[mit[106m][m[34;109H1-38[31;38H[?25h[?25l[106mi[mt[97m[101m][m[106m<[m<endl;[31;47H[K[31;37Hi[2C<[34;109H0-37[31;37H[?25h[?25l.it[97m[101m][m<<endl;[34;109H1-38[31;38H[?25h[?25lait[97m[101m][m<<endl;[34;109H2-39[31;39H[?25h[?25ltit[97m[101m][m<<endl;[34;109H3-40[31;40H[?25h[?25l(it]<<endl;[34;109H4-41[31;41H[?25h[?25l[34;109H5-42[31;42H[?25h[?25l[34;109H6-43[31;43H[?25h[?25l[34;109H7-44[31;44H[?25h[?25l<<endl;[31;50H[K[34;109H6-43[31;43H[?25h[?25l)<<endl;[31;40H[106m([mit[106m)[m[34;109H7-44[31;44H[?25h[34;1H[K[31;43H[?25l[34;95H^[[31;43H[34;95H  [31;44H[34;105H71,36-43      Bot[31;43H[?25h[?25l[34;95H:[31;43H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1781C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:71:36:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<int>::at(std::vector<std::__cxx11::basic_string<char> >::iterator&)[m[Kâ€™
   71 |  cout<< *it<<"     "<<column1.at(it[01;31m[K)[m[K<<endl;
      |                                    [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1089:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::reference = int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int][m[Kâ€™
 1089 |       [01;36m[Kat[m[K(size_type __n)
      |       [01;36m[K^~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1089:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™}
 1089 |       at([01;36m[Ksize_type __n[m[K)
      |          [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1107:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::at(std::vector<_Tp, _Alloc>::size_type) const [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::const_reference = const int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int][m[Kâ€™
 1107 |       [01;36m[Kat[m[K(size_type __n) const
      |       [01;36m[K^~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1107:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™}
 1107 |       at([01;36m[Ksize_type __n[m[K) const
      |          [01;36m[K~~~~~~~~~~^~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:23:08 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1781C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( string y:column7){[25;32H[K[26;5H    [34m//      cout <<y<<endl;[m[26;32H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<column1.at[106m([mit[106m)[m<<endl;
}
        [33;9H[K[34;105H71,36-43      Bot[31;43H[?25h[?25l[34;95H~@k[31;43H[34;95H   [31;44H(it)[34;109H7-44[31;44H[?25h[?25l[34;95H~@k[31;44H[34;95H   [31;43H[106m([mit[106m)[m[34;109H6-43[31;43H[?25h[?25l[34;95H~@k[31;43H[34;95H   [31;42H(it)[34;109H5-42[31;42H[?25h[?25l[34;95H~@k[31;42H[34;95H   [31;41H[34;109H4-41[31;41H[?25h[?25l[34;95H~@k[31;41H[34;95H   [31;40H[106m([mit[106m)[m[34;109H3-40[31;40H[?25h[?25l[34;95H~@k[31;40H[34;95H   [31;41H(it)[34;109H4-41[31;41H[?25h[?25l[34;95H~@k[31;41H[34;95H   [31;42H[34;109H5-42[31;42H[?25h[?25l[34;95H~@k[31;42H[34;95H   [31;41H[34;109H4-41[31;41H[?25h[?25l[34;95H~@k[31;41H[34;95H   [31;42H[34;109H5-42[31;42H[?25h[?25l[34;95H~@k[31;42H[34;95H   [31;43H[106m([mit[106m)[m[34;109H6-43[31;43H[?25h[?25l[34;95H~@k[31;43H[34;95H   [31;44H(it)[34;109H7-44[31;44H[?25h[?25l[34;95H~@k[31;44H[34;95H   [31;43H[106m([mit[106m)[m[34;109H6-43[31;43H[?25h[?25l[34;95H~@k[31;43H[34;95H   [31;42H(it)[34;109H5-42[31;42H[?25h[?25l[34;95H~@k[31;42H[34;95H   [31;41H[34;109H4-41[31;41H[?25h[?25l[34;95H~@k[31;41H[34;95H   [31;40H[106m([mit[106m)[m[34;109H3-40[31;40H[?25h[?25l[34;95Hi[31;40H[34;95H [31;40H


[1m-- INSERT --[m[34;13H[K[34;105H71,33-40      Bot[31;40H[?25h[?25l[34;109H4-41[31;41H[?25h[?25l[106mi[mt[97m[101m)[m[106m<[m<endl;[31;50H[K[31;40Hi[2C<[34;109H3-40[31;40H[?25h[?25lit[97m[101m)[m<<endl;[31;49H[K[34;109H2-39[31;39H[?25h[?25lit[97m[101m)[m<<endl;[31;48H[K[34;109H1-38[31;38H[?25h[?25lit[97m[101m)[m<<endl;[31;47H[K[34;109H0-37[31;37H[?25h[?25lit[97m[101m)[m<<endl;[31;46H[K[34;108H29-36[31;36H[?25h[?25lit[97m[101m)[m<<endl;[31;45H[K[34;109H8-35[31;35H[?25h[?25lit[97m[101m)[m<<endl;[31;44H[K[34;109H7-34[31;34H[?25h[?25lit[97m[101m)[m<<endl;[31;43H[K[34;109H6-33[31;33H[?25h[?25lit[97m[101m)[m<<endl;[31;42H[K[34;109H5-32[31;32H[?25h[?25lit[97m[101m)[m<<endl;[31;41H[K[34;109H4-31[31;31H[?25h[?25lit[97m[101m)[m<<endl;[31;40H[K[34;109H3-30[31;30H[?25h[?25l[34;109H4-31[31;31H[?25h[?25l[34;109H5-32[31;32H[?25h[?25l[34;109H6-33[31;33H[?25h[?25l<<endl;[31;39H[K[34;109H5-32[31;32H[?25h[34;1H[K[31;31H[?25l[34;95H^[[31;31H[34;95H  [31;32H[34;105H71,24-31      Bot[31;31H[?25h[?25l[34;95H:[31;31H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1769C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:71:21:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<<[m[Kâ€™ (operand types are â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ and â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™})
   71 |  [32m[Kcout<< *it<<"     "[m[K[01;31m[K<<[m[K[34m[Kit[m[K<<endl;
      |  [32m[K~~~~~~~~~~~~~~~~~~~[m[K[01;31m[K^~[m[K[34m[K~~[m[K
      |            [32m[K|[m[K          [34m[K|[m[K
      |            [32m[K|[m[K          [34m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator {aka __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >}[m[K
      |            [32m[Kstd::basic_ostream<char>[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:108:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  108 |       [01;36m[Koperator[m[K<<(__ostream_type& (*__pf)(__ostream_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:108:36:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ostream<char>& (*)(std::basic_ostream<char>&)[m[Kâ€™}
  108 |       operator<<([01;36m[K__ostream_type& (*__pf)(__ostream_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>][m[Kâ€™
  117 |       [01;36m[Koperator[m[K<<(__ios_type& (*__pf)(__ios_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ios<char>& (*)(std::basic_ios<char>&)[m[Kâ€™}
  117 |       operator<<([01;36m[K__ios_type& (*__pf)(__ios_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  127 |       [01;36m[Koperator[m[K<<(ios_base& (*__pf) (ios_base&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::ios_base& (*)(std::ios_base&)[m[Kâ€™
  127 |       operator<<([01;36m[Kios_base& (*__pf) (ios_base&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  166 |       [01;36m[Koperator[m[K<<(long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong int[m[Kâ€™
  166 |       operator<<([01;36m[Klong __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:170:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  170 |       [01;36m[Koperator[m[K<<(unsigned long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:170:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong unsigned int[m[Kâ€™
  170 |       operator<<([01;36m[Kunsigned long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:174:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  174 |       [01;36m[Koperator[m[K<<(bool __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:174:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kbool[m[Kâ€™
  174 |       operator<<([01;36m[Kbool __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
   91 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:92:22:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort int[m[Kâ€™
   92 |     operator<<([01;36m[Kshort __n[m[K)
      |                [01;36m[K~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:181:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  181 |       [01;36m[Koperator[m[K<<(unsigned short __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:181:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort unsigned int[m[Kâ€™
  181 |       operator<<([01;36m[Kunsigned short __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
  105 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:106:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™
  106 |     operator<<([01;36m[Kint __n[m[K)
      |                [01;36m[K~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:192:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  192 |       [01;36m[Koperator[m[K<<(unsigned int __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:192:31:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kunsigned int[m[Kâ€™
  192 |       operator<<([01;36m[Kunsigned int __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:201:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  201 |       [01;36m[Koperator[m[K<<(long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:201:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long int[m[Kâ€™
  201 |       operator<<([01;36m[Klong long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:205:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  205 |       [01;36m[Koperator[m[K<<(unsigned long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:205:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long unsigned int[m[Kâ€™
  205 |       operator<<([01;36m[Kunsigned long long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:220:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  220 |       [01;36m[Koperator[m[K<<(double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:220:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™
  220 |       operator<<([01;36m[Kdouble __f[m[K)
      |                  [01;36m[K~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:224:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  224 |       [01;36m[Koperator[m[K<<(float __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:224:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kfloat[m[Kâ€™
  224 |       operator<<([01;36m[Kfloat __f[m[K)
      |                  [01;36m[K~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:232:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  232 |       [01;36m[Koperator[m[K<<(long double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:232:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong double[m[Kâ€™
  232 |       operator<<([01;36m[Klong double __f[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:245:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  245 |       [01;36m[Koperator[m[K<<(const void* __p)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:245:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kconst void*[m[Kâ€™
  245 |       operator<<([01;36m[Kconst void* __p[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>][m[Kâ€™
  119 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:120:34:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__streambuf_type*[m[Kâ€™ {aka â€˜[01m[Kstd::basic_streambuf<char>*[m[Kâ€™}
  120 |     operator<<([01;36m[K__streambuf_type* __sbin[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~[m[K
In file included from [01m[K/usr/include/c++/9/string:55[m[K,
                 from [01m[K/usr/include/c++/9/bits/locale_classes.h:40[m[K,
                 from [01m[K/usr/include/c++/9/bits/ios_base.h:41[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)[m[Kâ€™
 6419 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/bits/ios_base.h:46[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)[m[Kâ€™
  217 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst std::error_code&[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)[m[Kâ€™
  506 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[K_CharT[m[Kâ€™ (â€˜[01m[Kchar[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™)
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)[m[Kâ€™
  511 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)[m[Kâ€™
  517 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)[m[Kâ€™
  523 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, signed char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Ksigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)[m[Kâ€™
  528 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kunsigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)[m[Kâ€™
  548 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst _CharT*[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)[m[Kâ€™
  321 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)[m[Kâ€™
  565 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)[m[Kâ€™
  578 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst signed char*[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)[m[Kâ€™
  583 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:23:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst unsigned char*[m[Kâ€™
   71 |  cout<< *it<<"     "<<[01;36m[Kit[m[K<<endl;
      |                       [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&)[m[Kâ€™
  691 |     [01;36m[Koperator[m[K<<(_Ostream&& __os, const _Tp& __x)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/ostream: In substitution of â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&) [with _Ostream = std::basic_ostream<char>&; _Tp = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >][m[Kâ€™:
[01m[KTasks.cpp:71:23:[m[K   required from here
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::basic_ostream<char>&>[m[Kâ€™
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ w[Kg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:26:05 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1769C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( string y:column7){[25;32H[K[26;5H    [34m//      cout <<y<<endl;[m[26;32H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<it<<endl;
}
        [33;9H[K[34;105H71,24-31      Bot[31;31H[?25h[?25l[34;95H~@k[31;31H[34;95H   [31;32H[34;109H5-32[31;32H[?25h[?25l[34;95H~@k[31;32H[34;95H   [31;31H[34;109H4-31[31;31H[?25h[?25l[34;95H~@k[31;31H[34;95H   [31;30H[34;109H3-30[31;30H[?25h[?25l[34;95H<20>[31;30H[34;95H    [31;31H[34;109H4-31[31;31H[?25h[?25l[34;95H~@k[31;31H[34;95H   [31;32H[34;109H5-32[31;32H[?25h[?25l[34;95H~@k[31;32H[34;95H   [31;33H[34;109H6-33[31;33H[?25h[?25l[34;95H~@k[31;33H[34;95H   [31;32H[34;109H5-32[31;32H[?25h[?25l[34;95Hi[31;32H[34;95H [31;32H


[1m-- INSERT --[m[34;13H[K[34;105H71,25-32      Bot[31;32H[?25h[?25l[34;109H4-31[31;31H[?25h[?25l[34;109H3-30[31;30H[?25h[?25l it<<endl;[34;109H4-31[31;31H[?25h[?25l[34;109H5-32[31;32H[?25h[?25l[34;109H6-33[31;33H[?25h[?25l <<endl;[34;109H7-34[31;34H[?25h[34;1H[K[31;33H[?25l[34;95H^[[31;33H[34;95H  [31;34H[34;105H71,26-33      Bot[31;33H[?25h[?25l[34;95H:[31;33H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1771C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:71:21:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<<[m[Kâ€™ (operand types are â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ and â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™})
   71 |  [32m[Kcout<< *it<<"     "[m[K[01;31m[K<<[m[K [34m[Kit[m[K <<endl;
      |  [32m[K~~~~~~~~~~~~~~~~~~~[m[K[01;31m[K^~[m[K [34m[K~~[m[K
      |            [32m[K|[m[K           [34m[K|[m[K
      |            [32m[K|[m[K           [34m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator {aka __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >}[m[K
      |            [32m[Kstd::basic_ostream<char>[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:108:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  108 |       [01;36m[Koperator[m[K<<(__ostream_type& (*__pf)(__ostream_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:108:36:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ostream<char>& (*)(std::basic_ostream<char>&)[m[Kâ€™}
  108 |       operator<<([01;36m[K__ostream_type& (*__pf)(__ostream_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>][m[Kâ€™
  117 |       [01;36m[Koperator[m[K<<(__ios_type& (*__pf)(__ios_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ios<char>& (*)(std::basic_ios<char>&)[m[Kâ€™}
  117 |       operator<<([01;36m[K__ios_type& (*__pf)(__ios_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  127 |       [01;36m[Koperator[m[K<<(ios_base& (*__pf) (ios_base&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::ios_base& (*)(std::ios_base&)[m[Kâ€™
  127 |       operator<<([01;36m[Kios_base& (*__pf) (ios_base&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  166 |       [01;36m[Koperator[m[K<<(long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong int[m[Kâ€™
  166 |       operator<<([01;36m[Klong __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:170:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  170 |       [01;36m[Koperator[m[K<<(unsigned long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:170:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong unsigned int[m[Kâ€™
  170 |       operator<<([01;36m[Kunsigned long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:174:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  174 |       [01;36m[Koperator[m[K<<(bool __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:174:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kbool[m[Kâ€™
  174 |       operator<<([01;36m[Kbool __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
   91 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:92:22:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort int[m[Kâ€™
   92 |     operator<<([01;36m[Kshort __n[m[K)
      |                [01;36m[K~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:181:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  181 |       [01;36m[Koperator[m[K<<(unsigned short __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:181:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort unsigned int[m[Kâ€™
  181 |       operator<<([01;36m[Kunsigned short __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
  105 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:106:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™
  106 |     operator<<([01;36m[Kint __n[m[K)
      |                [01;36m[K~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:192:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  192 |       [01;36m[Koperator[m[K<<(unsigned int __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:192:31:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kunsigned int[m[Kâ€™
  192 |       operator<<([01;36m[Kunsigned int __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:201:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  201 |       [01;36m[Koperator[m[K<<(long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:201:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long int[m[Kâ€™
  201 |       operator<<([01;36m[Klong long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:205:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  205 |       [01;36m[Koperator[m[K<<(unsigned long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:205:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long unsigned int[m[Kâ€™
  205 |       operator<<([01;36m[Kunsigned long long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:220:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  220 |       [01;36m[Koperator[m[K<<(double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:220:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™
  220 |       operator<<([01;36m[Kdouble __f[m[K)
      |                  [01;36m[K~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:224:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  224 |       [01;36m[Koperator[m[K<<(float __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:224:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kfloat[m[Kâ€™
  224 |       operator<<([01;36m[Kfloat __f[m[K)
      |                  [01;36m[K~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:232:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  232 |       [01;36m[Koperator[m[K<<(long double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:232:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong double[m[Kâ€™
  232 |       operator<<([01;36m[Klong double __f[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:245:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  245 |       [01;36m[Koperator[m[K<<(const void* __p)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:245:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kconst void*[m[Kâ€™
  245 |       operator<<([01;36m[Kconst void* __p[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>][m[Kâ€™
  119 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:120:34:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__streambuf_type*[m[Kâ€™ {aka â€˜[01m[Kstd::basic_streambuf<char>*[m[Kâ€™}
  120 |     operator<<([01;36m[K__streambuf_type* __sbin[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~[m[K
In file included from [01m[K/usr/include/c++/9/string:55[m[K,
                 from [01m[K/usr/include/c++/9/bits/locale_classes.h:40[m[K,
                 from [01m[K/usr/include/c++/9/bits/ios_base.h:41[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)[m[Kâ€™
 6419 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/bits/ios_base.h:46[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)[m[Kâ€™
  217 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst std::error_code&[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)[m[Kâ€™
  506 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[K_CharT[m[Kâ€™ (â€˜[01m[Kchar[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™)
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)[m[Kâ€™
  511 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)[m[Kâ€™
  517 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)[m[Kâ€™
  523 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, signed char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Ksigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)[m[Kâ€™
  528 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kunsigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)[m[Kâ€™
  548 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst _CharT*[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)[m[Kâ€™
  321 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)[m[Kâ€™
  565 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)[m[Kâ€™
  578 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst signed char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)[m[Kâ€™
  583 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:24:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kit[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst unsigned char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kit[m[K <<endl;
      |                        [01;36m[K^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&)[m[Kâ€™
  691 |     [01;36m[Koperator[m[K<<(_Ostream&& __os, const _Tp& __x)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/ostream: In substitution of â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&) [with _Ostream = std::basic_ostream<char>&; _Tp = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >][m[Kâ€™:
[01m[KTasks.cpp:71:24:[m[K   required from here
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::basic_ostream<char>&>[m[Kâ€™
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:26:50 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1771C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( string y:column7){[25;32H[K[26;5H    [34m//      cout <<y<<endl;[m[26;32H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<< it <<endl;
}
        [33;9H[K[34;105H71,26-33      Bot[31;33H[?25h[?25l[34;95H~@k[31;33H[34;95H   [31;34H[34;109H7-34[31;34H[?25h[?25l[34;95H~@k[31;34H[34;95H   [31;35H[34;109H8-35[31;35H[?25h[?25l[34;95H~@k[31;35H[34;95H   [31;34H[34;109H7-34[31;34H[?25h[?25l[34;95H~@k[31;34H[34;95H   [31;33H[34;109H6-33[31;33H[?25h[?25l[34;95H~@k[31;33H[34;95H   [31;32H[34;109H5-32[31;32H[?25h[?25l[34;95H~@k[31;32H[34;95H   [31;31H[34;109H4-31[31;31H[?25h[?25l[34;95H~@k[31;31H[34;95H   [31;32H[34;109H5-32[31;32H[?25h[?25l[34;95Hi[31;32H[34;95H [31;32H


[1m-- INSERT --[m[34;13H[K[34;105H71,25-32      Bot[31;32H[?25h[?25l[34;109H6-33[31;33H[?25h[?25l <<endl;[31;40H[K[34;109H5-32[31;32H[?25h[?25l <<endl;[31;39H[K[34;109H4-31[31;31H[?25h[?25lm <<endl;[34;109H5-32[31;32H[?25h[?25ly <<endl;[34;109H6-33[31;33H[?25h[?25l <<endl;[31;40H[K[34;109H5-32[31;32H[?25h[?25l <<endl;[31;39H[K[34;109H4-31[31;31H[?25h[?25lc <<endl;[34;109H5-32[31;32H[?25h[?25lo <<endl;[34;109H6-33[31;33H[?25h[?25ll <<endl;[34;109H7-34[31;34H[?25h[?25lu <<endl;[34;109H8-35[31;35H[?25h[?25lm <<endl;[34;109H9-36[31;36H[?25h[?25ln <<endl;[34;108H30-37[31;37H[?25h[?25l7 <<endl;[34;109H1-38[31;38H[?25h[?25l. <<endl;[34;109H2-39[31;39H[?25h[?25lb <<endl;[34;109H3-40[31;40H[?25h[?25le <<endl;[34;109H4-41[31;41H[?25h[?25lg <<endl;[34;109H5-42[31;42H[?25h[?25li <<endl;[34;109H6-43[31;43H[?25h[?25ln <<endl;[34;109H7-44[31;44H[?25h[?25l( <<endl;[34;109H8-45[31;45H[?25h[?25l) <<endl;[31;44H[106m()[m[34;109H9-46[31;46H[?25h[34;1H[K[31;45H[?25l[34;95H^[[31;45H[34;95H  [31;46H[34;105H71,38-45      Bot[31;45H[?25h[?25l[34;95H:[31;45H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1784C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:71:21:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<<[m[Kâ€™ (operand types are â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ and â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™})
   71 |  [32m[Kcout<< *it<<"     "[m[K[01;31m[K<<[m[K [34m[Kcolumn7.begin()[m[K <<endl;
      |  [32m[K~~~~~~~~~~~~~~~~~~~[m[K[01;31m[K^~[m[K [34m[K~~~~~~~~~~~~~~~[m[K
      |            [32m[K|[m[K                        [34m[K|[m[K
      |            [32m[Kstd::basic_ostream<char>[m[K [34m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator {aka __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >}[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:108:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  108 |       [01;36m[Koperator[m[K<<(__ostream_type& (*__pf)(__ostream_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:108:36:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ostream<char>& (*)(std::basic_ostream<char>&)[m[Kâ€™}
  108 |       operator<<([01;36m[K__ostream_type& (*__pf)(__ostream_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>][m[Kâ€™
  117 |       [01;36m[Koperator[m[K<<(__ios_type& (*__pf)(__ios_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ios<char>& (*)(std::basic_ios<char>&)[m[Kâ€™}
  117 |       operator<<([01;36m[K__ios_type& (*__pf)(__ios_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  127 |       [01;36m[Koperator[m[K<<(ios_base& (*__pf) (ios_base&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::ios_base& (*)(std::ios_base&)[m[Kâ€™
  127 |       operator<<([01;36m[Kios_base& (*__pf) (ios_base&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  166 |       [01;36m[Koperator[m[K<<(long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong int[m[Kâ€™
  166 |       operator<<([01;36m[Klong __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:170:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  170 |       [01;36m[Koperator[m[K<<(unsigned long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:170:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong unsigned int[m[Kâ€™
  170 |       operator<<([01;36m[Kunsigned long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:174:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  174 |       [01;36m[Koperator[m[K<<(bool __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:174:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kbool[m[Kâ€™
  174 |       operator<<([01;36m[Kbool __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
   91 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:92:22:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort int[m[Kâ€™
   92 |     operator<<([01;36m[Kshort __n[m[K)
      |                [01;36m[K~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:181:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  181 |       [01;36m[Koperator[m[K<<(unsigned short __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:181:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort unsigned int[m[Kâ€™
  181 |       operator<<([01;36m[Kunsigned short __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
  105 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:106:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™
  106 |     operator<<([01;36m[Kint __n[m[K)
      |                [01;36m[K~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:192:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  192 |       [01;36m[Koperator[m[K<<(unsigned int __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:192:31:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kunsigned int[m[Kâ€™
  192 |       operator<<([01;36m[Kunsigned int __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:201:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  201 |       [01;36m[Koperator[m[K<<(long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:201:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long int[m[Kâ€™
  201 |       operator<<([01;36m[Klong long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:205:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  205 |       [01;36m[Koperator[m[K<<(unsigned long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:205:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long unsigned int[m[Kâ€™
  205 |       operator<<([01;36m[Kunsigned long long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:220:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  220 |       [01;36m[Koperator[m[K<<(double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:220:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™
  220 |       operator<<([01;36m[Kdouble __f[m[K)
      |                  [01;36m[K~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:224:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  224 |       [01;36m[Koperator[m[K<<(float __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:224:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kfloat[m[Kâ€™
  224 |       operator<<([01;36m[Kfloat __f[m[K)
      |                  [01;36m[K~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:232:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  232 |       [01;36m[Koperator[m[K<<(long double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:232:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong double[m[Kâ€™
  232 |       operator<<([01;36m[Klong double __f[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:245:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  245 |       [01;36m[Koperator[m[K<<(const void* __p)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:245:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kconst void*[m[Kâ€™
  245 |       operator<<([01;36m[Kconst void* __p[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>][m[Kâ€™
  119 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:120:34:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__streambuf_type*[m[Kâ€™ {aka â€˜[01m[Kstd::basic_streambuf<char>*[m[Kâ€™}
  120 |     operator<<([01;36m[K__streambuf_type* __sbin[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~[m[K
In file included from [01m[K/usr/include/c++/9/string:55[m[K,
                 from [01m[K/usr/include/c++/9/bits/locale_classes.h:40[m[K,
                 from [01m[K/usr/include/c++/9/bits/ios_base.h:41[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)[m[Kâ€™
 6419 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/bits/ios_base.h:46[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)[m[Kâ€™
  217 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst std::error_code&[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)[m[Kâ€™
  506 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[K_CharT[m[Kâ€™ (â€˜[01m[Kchar[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™)
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)[m[Kâ€™
  511 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)[m[Kâ€™
  517 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)[m[Kâ€™
  523 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, signed char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Ksigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)[m[Kâ€™
  528 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kunsigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)[m[Kâ€™
  548 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst _CharT*[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)[m[Kâ€™
  321 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)[m[Kâ€™
  565 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)[m[Kâ€™
  578 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst signed char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)[m[Kâ€™
  583 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst unsigned char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&)[m[Kâ€™
  691 |     [01;36m[Koperator[m[K<<(_Ostream&& __os, const _Tp& __x)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/ostream: In substitution of â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&) [with _Ostream = std::basic_ostream<char>&; _Tp = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >][m[Kâ€™:
[01m[KTasks.cpp:71:38:[m[K   required from here
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::basic_ostream<char>&>[m[Kâ€™
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:27:32 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 73L, 1784C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[15;11H              getline(infile,popularity,[31m';'[m);[15;56H[K[16;10H               [38;5;130mif[m(!popularity.empty()){[16;49H[K[17;11H              column8.push_back(-[31m1[m*stoi(popularity));}[18;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[19;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[21;14H           column10.push_back(image);[22;7H          }[22;18H[K[24;1H        sort(column8.begin(), column8.end());[24;46H[K[25;5H    [38;5;130mfor[m( string y:column7){[25;32H[K[26;5H    [34m//      cout <<y<<endl;[m[26;32H[K[27;1H        }[27;10H[K[28;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[28;60H[K[29;5H    cout <<x<<endl;[29;24H[K[30;5H    vector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<< column7.begin[106m()[m <<endl;
}
        [33;9H[K[34;105H71,38-45      Bot[31;45H[?25h[?25l[34;95H~@k[31;45H[34;95H   [30;45H[31;44H()[34;106H0[30;45H[?25h[?25l[34;95H~@k[30;45H[34;95H   [29;23H[34;105H69,16-23[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [28;45H[34;106H8,38-45[28;45H[?25h[?25l[34;95H~@k[28;45H[34;95H   [27;9H[25;31H[106m{[27;9H}[m[34;106H7,2-9  [27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [26;31H[25;31H{[27;9H}[34;106H6,19-31[26;31H[?25h[?25l[34;95H~@k[26;31H[34;95H   [25;31H[106m{[27;9H}[m[34;106H5,24[25;31H[?25h[?25l[34;95H~@k[25;31H[34;95H   [24;45H[25;31H{[27;9H}[34;106H4,38-45[24;45H[?25h[?25l[34;95H~@k[24;45H[34;95H   [23;1H[34;106H3,0-1  [23;1H[?25h[?25l[34;95H~@k[23;1H[34;95H   [22;17H[34;106H2,3-17[22;17H[?25h[?25l[34;95H~@k[22;17H[34;95H   [21;45H[34;106H1,24-45[21;45H[?25h[?25l[34;95H~@k[21;45H[34;95H   [20;45H[34;106H0[20;45H[?25h[?25l[34;95H~@k[20;45H[34;95H   [19;45H[34;105H59[19;45H[?25h[?25l[34;95H~@k[19;45H[34;95H   [18;45H[34;106H8[18;45H[?25h[?25l[34;95H~@k[18;45H[34;95H   [17;45H[34;106H7[17;45H[?25h[?25l[34;95H~@k[17;45H[34;95H   [16;45H[106m()[m[34;106H6[16;45H[?25h[?25l[34;95H~@k[16;45H[34;95H   [15;45H[16;45H()[34;106H5[15;45H[?25h[?25l[34;95H~@k[15;45H[34;95H   [14;45H[34;106H4[14;45H[?25h[?25l[34;95H~@k[14;45H[34;95H   [13;45H[34;106H3[13;45H[?25h[?25l[34;95H~@k[13;45H[34;95H   [12;45H[34;106H2[12;45H[?25h[?25l[34;95H~@k[12;45H[34;95H   [11;45H[34;106H1[11;45H[?25h[?25l[34;95H~@k[11;45H[34;95H   [10;45H[34;106H0[10;45H[?25h[?25l[34;95H~@k[10;45H[34;95H   [9;45H[34;105H49[9;45H[?25h[?25l[34;95H~@k[9;45H[34;95H   [8;45H[34;106H8[8;45H[?25h[?25l[34;95H~@k[8;45H[34;95H   [7;45H[34;106H7[7;45H[?25h[?25l[34;95H~@k[7;45H[34;95H   [6;45H[34;106H6[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m(!length.empty()){[34;1H[K[34;105H45,24-45      97%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H44,3-24[7C95%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H43,24-45      92%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;17H[1;33r[1;1H[L[1;34r[4;44H[106m{[6;17H}[m[34;105H[K[34;105H42,3-17[7C90%[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;25H[38;5;130melse[m{column1.push_back([31m0[m); }[5;44H{[7;17H}[34;105H[K[34;105H41,24-45      87%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;44H[1;33r[1;1H[L[1;34r[1;9H}[6;44H[106m{[8;17H}[m[34;105H[K[34;105H40,23-44      85%[6;44H[?25h[?25l[34;95H~@k[6;44H[34;95H   [6;16H[1;33r[1;1H[L[1;34r[1;33Hcolumn1.push_back(stoi(year));[7;44H{[9;17H}[34;105H[K[34;105H39,2-16[7C82%[6;16H[?25h[?25l[34;95H~@k[6;16H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m (!year.empty()){[34;105H[K[34;105H38,24-45      80%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H37,0-1[8C77%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;105H[K[34;105H36,24-45      75%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;9H[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[4;43H[106m{[6;9H}[m[34;105H[K[34;105H35,2-9[8C72%[6;9H[?25h[?25l[34;95H~@k[6;9H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[5;43H{[7;9H}[34;105H[K[34;105H34,17-45      70%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;43H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[6;43H[106m{[8;9H}[m[34;105H[K[34;105H33,22-43      67%[6;43H[?25h[?25l[34;95H~@k[6;43H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[7;43H{[9;9H}[34;105H[K[34;105H32,3-24[7C65%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;9H[32mint[m sum=[31m0[m;[34;105H[K[34;105H31,24-45      62%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[34;105H[K[34;105H30,24-45      60%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;105H[K[34;105H29,0-1[8C57%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;29H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H28,22-29      55%[6;29H[?25h[?25l[34;95H~@k[6;29H[34;95H   [6;23H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H27,16-23      52%[6;23H[?25h[?25l[34;95H~@k[6;23H[34;95H   [6;18H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H26,11-18      50%[6;18H[?25h[?25l[34;95H~@k[6;18H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H25,38-45      47%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;105H[K[34;105H24,38-45      45%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;105H[K[34;105H23,1-8[8C42%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;105H[K[34;105H22,38-45      40%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;45H[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;105H[K[34;105H21,38-45      37%[6;45H[?25h[?25l[34;95H~@k[6;45H[34;95H   [6;9H[1;33r[1;1H[L[1;34r[1;9Hifstream infile;[3;26H[106m{[6;9H}[m[34;105H[K[34;105H20,2-9[8C35%[6;9H[?25h[?25l[34;95H~@k[6;9H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[1;1H[32mint[m main(){[4;26H{[7;9H}[34;105H[K[34;105H19,10-24      32%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;42H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H18,28-42      30%[6;42H[?25h[?25l[34;95H~@k[6;42H[34;95H   [6;26H[1;33r[1;1H[L[1;34r[1;1H[38;5;130musing[m [32mnamespace[m std;[6;26H[106m{[9;9H}[m[34;105H[K[34;105H17,19-26      27%[6;26H[?25h[?25l[34;95H~@k[6;26H[34;95H   [6;33H[1;33r[1;1H[L[1;34r[7;26H{[10;9H}[34;105H[K[34;105H16,26-33      25%[6;33H[?25h[?25l[34;95H~@k[6;33H[34;95H   [6;24H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H15,17-24      22%[6;24H[?25h[?25l[34;95H~@k[6;24H[34;95H   [6;11H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<algorithm>[m[34;105H[K[34;105H14,11[9C20%[6;11H[?25h[?25l[34;95H~@k[6;11H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<functional>[m[34;105H[K[34;105H13,0-1[8C17%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;20H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<numeric>[m[34;105H[K[34;105H12,20[9C15%[6;20H[?25h[?25l[34;95H~@k[6;20H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<vector>[m[34;105H[K[34;105H11,0-1[8C12%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<limits>[m[34;105H[K[34;105H10,0-1[8C10%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;20H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<string>[m[34;105H[K[34;105H9,20[11C7%[6;20H[?25h[?25l[34;95H~@k[6;20H[34;95H   [6;21H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<fstream>[m[34;105H[K[34;105H8,21[11C5%[6;21H[?25h[?25l[34;95H~@k[6;21H[34;95H   [6;18H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<iostream>[m[34;105H[K[34;105H7,18[11C2%[6;18H[?25h[?25l[34;95H~@k[6;18H[34;95H   [6;17H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H6,17[10CTop[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [5;17H[34;105H5[5;17H[?25h[?25l[34;95H~@k[5;17H[34;95H   [4;17H[34;105H4[4;17H[?25h[?25l[34;95H~@k[4;17H[34;95H   [3;18H[34;105H3,18[3;18H[?25h[?25l[34;95H~@k[3;18H[34;95H   [2;19H[34;105H2,19[2;19H[?25h[?25l[34;95H~@k[2;19H[34;95H   [3;18H[34;105H3,18[3;18H[?25h[?25l[34;95H~@k[3;18H[34;95H   [4;17H[34;105H4,17[4;17H[?25h[?25l[34;95H~@k[4;17H[34;95H   [5;17H[34;105H5[5;17H[?25h[?25l[34;95H~@k[5;17H[34;95H   [6;17H[34;105H6[6;17H[?25h[?25l[34;95H~@k[6;17H[34;95H   [7;18H[34;105H7,18[7;18H[?25h[?25l[34;95H~@k[7;18H[34;95H   [8;21H[34;105H8,21[8;21H[?25h[?25l[34;95H~@k[8;21H[34;95H   [8;21H[?25h[?25l[34;95H~@k[8;21H[34;95H   [9;20H[34;105H9,20[9;20H[?25h[?25l[34;95H~@k[9;20H[34;95H   [9;20H[?25h[?25l[34;95H^M[9;20H[34;95H  [10;1H[34;105H10,0-1[10;1H[?25h[?25l[34;95Hi[10;1H[34;95H [10;1H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H10,1[10CTop[10;1H[?25h[?25l#[34;108H2[10;2H[?25h[?25li[34;108H3[10;3H[?25h[?25ln[34;108H4[10;4H[?25h[?25lc[34;108H5[10;5H[?25h[?25ll[34;108H6[10;6H[?25h[?25lu[34;108H7[10;7H[?25h[?25ld[34;108H8[10;8H[?25h[?25le[34;108H9[10;9H[?25h[?25l,[34;108H10[10;10H[?25h[?25l[10;9H[K[34;108H9 [10;9H[?25h[?25l[34;108H10[10;10H[?25h[?25l,[34;109H1[10;11H[?25h[?25l.[34;109H2[10;12H[?25h[?25l[10;11H[K[34;109H1[10;11H[?25h[?25l[10;10H[K[34;109H0[10;10H[?25h[?25l[35m#include <[m[34;109H1[10;11H[?25h[?25l[31m<>[m[34;109H2[10;12H[?25h[?25l[34;109H1[10;11H[?25h[?25l[31mb>[m[34;109H2[10;12H[?25h[?25l[31mi>[m[34;109H3[10;13H[?25h[?25l[31mt>[m[34;109H4[10;14H[?25h[?25l[31ms>[m[34;109H5[10;15H[?25h[?25l[31m/>[m[34;109H6[10;16H[?25h[?25l[31ms>[m[34;109H7[10;17H[?25h[?25l[31mt>[m[34;109H8[10;18H[?25h[?25l[31md>[m[34;109H9[10;19H[?25h[?25l[31mc>[m[34;108H20[10;20H[?25h[?25l[31m+>[m[34;109H1[10;21H[?25h[?25l[31m+>[m[34;109H2[10;22H[?25h[?25l[31m.>[m[34;109H3[10;23H[?25h[?25l[31mh>[m[34;109H4[10;24H[?25h[?25l[34;109H5[10;25H[?25h[34;1H[K[10;24H[?25l[34;95H^[[10;24H[34;95H  [10;25H[34;105H10,24[9CTop[10;24H[?25h[?25l[34;95H:[10;24H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1808C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:71:21:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<<[m[Kâ€™ (operand types are â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ and â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™})
   71 |  [32m[Kcout<< *it<<"     "[m[K[01;31m[K<<[m[K [34m[Kcolumn7.begin()[m[K <<endl;
      |  [32m[K~~~~~~~~~~~~~~~~~~~[m[K[01;31m[K^~[m[K [34m[K~~~~~~~~~~~~~~~[m[K
      |            [32m[K|[m[K                        [34m[K|[m[K
      |            [32m[Kstd::basic_ostream<char>[m[K [34m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator {aka __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >}[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:108:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  108 |       [01;36m[Koperator[m[K<<(__ostream_type& (*__pf)(__ostream_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:108:36:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ostream<char>& (*)(std::basic_ostream<char>&)[m[Kâ€™}
  108 |       operator<<([01;36m[K__ostream_type& (*__pf)(__ostream_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>][m[Kâ€™
  117 |       [01;36m[Koperator[m[K<<(__ios_type& (*__pf)(__ios_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ios<char>& (*)(std::basic_ios<char>&)[m[Kâ€™}
  117 |       operator<<([01;36m[K__ios_type& (*__pf)(__ios_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  127 |       [01;36m[Koperator[m[K<<(ios_base& (*__pf) (ios_base&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::ios_base& (*)(std::ios_base&)[m[Kâ€™
  127 |       operator<<([01;36m[Kios_base& (*__pf) (ios_base&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  166 |       [01;36m[Koperator[m[K<<(long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong int[m[Kâ€™
  166 |       operator<<([01;36m[Klong __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:170:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  170 |       [01;36m[Koperator[m[K<<(unsigned long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:170:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong unsigned int[m[Kâ€™
  170 |       operator<<([01;36m[Kunsigned long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:174:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  174 |       [01;36m[Koperator[m[K<<(bool __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:174:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kbool[m[Kâ€™
  174 |       operator<<([01;36m[Kbool __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
   91 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:92:22:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort int[m[Kâ€™
   92 |     operator<<([01;36m[Kshort __n[m[K)
      |                [01;36m[K~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:181:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  181 |       [01;36m[Koperator[m[K<<(unsigned short __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:181:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort unsigned int[m[Kâ€™
  181 |       operator<<([01;36m[Kunsigned short __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
  105 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:106:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™
  106 |     operator<<([01;36m[Kint __n[m[K)
      |                [01;36m[K~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:192:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  192 |       [01;36m[Koperator[m[K<<(unsigned int __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:192:31:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kunsigned int[m[Kâ€™
  192 |       operator<<([01;36m[Kunsigned int __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:201:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  201 |       [01;36m[Koperator[m[K<<(long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:201:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long int[m[Kâ€™
  201 |       operator<<([01;36m[Klong long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:205:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  205 |       [01;36m[Koperator[m[K<<(unsigned long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:205:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long unsigned int[m[Kâ€™
  205 |       operator<<([01;36m[Kunsigned long long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:220:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  220 |       [01;36m[Koperator[m[K<<(double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:220:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™
  220 |       operator<<([01;36m[Kdouble __f[m[K)
      |                  [01;36m[K~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:224:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  224 |       [01;36m[Koperator[m[K<<(float __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:224:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kfloat[m[Kâ€™
  224 |       operator<<([01;36m[Kfloat __f[m[K)
      |                  [01;36m[K~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:232:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  232 |       [01;36m[Koperator[m[K<<(long double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:232:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong double[m[Kâ€™
  232 |       operator<<([01;36m[Klong double __f[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:245:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  245 |       [01;36m[Koperator[m[K<<(const void* __p)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:245:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kconst void*[m[Kâ€™
  245 |       operator<<([01;36m[Kconst void* __p[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>][m[Kâ€™
  119 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:120:34:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__streambuf_type*[m[Kâ€™ {aka â€˜[01m[Kstd::basic_streambuf<char>*[m[Kâ€™}
  120 |     operator<<([01;36m[K__streambuf_type* __sbin[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~[m[K
In file included from [01m[K/usr/include/c++/9/regex:62[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/regex.h:1553:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ch_type, class _Ch_traits, class _Bi_iter> std::basic_ostream<_CharT, _Traits>& std::__cxx11::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::sub_match<_Bi_iter>&)[m[Kâ€™
 1553 |     [01;36m[Koperator[m[K<<(basic_ostream<_Ch_type, _Ch_traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/regex.h:1553:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__cxx11::sub_match<_Bi_iter>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/string:55[m[K,
                 from [01m[K/usr/include/c++/9/bits/locale_classes.h:40[m[K,
                 from [01m[K/usr/include/c++/9/bits/ios_base.h:41[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)[m[Kâ€™
 6419 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/bits/ios_base.h:46[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)[m[Kâ€™
  217 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst std::error_code&[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)[m[Kâ€™
  506 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[K_CharT[m[Kâ€™ (â€˜[01m[Kchar[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™)
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)[m[Kâ€™
  511 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)[m[Kâ€™
  517 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)[m[Kâ€™
  523 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, signed char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Ksigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)[m[Kâ€™
  528 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kunsigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)[m[Kâ€™
  548 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst _CharT*[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)[m[Kâ€™
  321 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)[m[Kâ€™
  565 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)[m[Kâ€™
  578 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst signed char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)[m[Kâ€™
  583 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst unsigned char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&)[m[Kâ€™
  691 |     [01;36m[Koperator[m[K<<(_Ostream&& __os, const _Tp& __x)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/ostream: In substitution of â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&) [with _Ostream = std::basic_ostream<char>&; _Tp = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >][m[Kâ€™:
[01m[KTasks.cpp:71:38:[m[K   required from here
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::basic_ostream<char>&>[m[Kâ€™
In file included from [01m[K/usr/include/c++/9/ccomplex:39[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/complex:552:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::complex<_Tp>&)[m[Kâ€™
  552 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const complex<_Tp>& __x)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/complex:552:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:66[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bitset:1538:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, long unsigned int _Nb> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::bitset<_Nb>&)[m[Kâ€™
 1538 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bitset:1538:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::bitset<_Nb>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:79:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Resetiosflags)[m[Kâ€™
   79 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Resetiosflags __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:79:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Resetiosflags[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:109:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setiosflags)[m[Kâ€™
  109 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setiosflags __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:109:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Setiosflags[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:143:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setbase)[m[Kâ€™
  143 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setbase __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:143:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Setbase[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:178:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>)[m[Kâ€™
  178 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setfill<_CharT> __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:178:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::_Setfill<_CharT>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:208:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision)[m[Kâ€™
  208 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setprecision __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:208:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Setprecision[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:238:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw)[m[Kâ€™
  238 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setw __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:238:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Setw[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:311:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _MoneyT> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_money<_MoneyT>)[m[Kâ€™
  311 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Put_money<_MoneyT> __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:311:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::_Put_money<_MoneyT>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:363:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_time<_CharT>)[m[Kâ€™
  363 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Put_time<_CharT> __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:363:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::_Put_time<_CharT>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/memory:81[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/shared_ptr.h:66:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ch, class _Tr, class _Tp, __gnu_cxx::_Lock_policy _Lp> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__shared_ptr<_Tp, _Lp>&)[m[Kâ€™
   66 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_Ch, _Tr>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:66:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__shared_ptr<_Tp, _Lp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__shift_left, _Tp>::result_type> std::operator<<(const std::valarray<_Tp>&, const std::valarray<_Tp>&)[m[Kâ€™
 1193 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(<<, __shift_left)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::valarray<_Tp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__shift_left, _Tp>::result_type> std::operator<<(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)[m[Kâ€™
 1193 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(<<, __shift_left)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::valarray<_Tp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__shift_left, _Tp>::result_type> std::operator<<(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)[m[Kâ€™
 1193 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(<<, __shift_left)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::valarray<_Tp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/future:39[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/thread:322:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::thread::id)[m[Kâ€™
  322 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, thread::id __id)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/thread:322:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::thread::id[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/random:49[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.h:1298:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RandomNumberEngine, long unsigned int __w, class _UIntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::independent_bits_engine<_RandomNumberEngine, __w, _UIntType>&)[m[Kâ€™
 1298 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.h:1298:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::independent_bits_engine<_RandomNumberEngine, __w, _UIntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:877:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::uniform_int_distribution<_IntType>&)[m[Kâ€™
  877 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:877:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::uniform_int_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:936:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::uniform_real_distribution<_IntType>&)[m[Kâ€™
  936 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:936:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::uniform_real_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2133:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::cauchy_distribution<_RealType>&)[m[Kâ€™
 2133 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2133:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::cauchy_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:998:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::bernoulli_distribution&)[m[Kâ€™
  998 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:998:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst std::bernoulli_distribution&[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1080:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::geometric_distribution<_IntType>&)[m[Kâ€™
 1080 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1080:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::geometric_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1737:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::exponential_distribution<_RealType>&)[m[Kâ€™
 1737 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1737:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::exponential_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2532:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::weibull_distribution<_RealType>&)[m[Kâ€™
 2532 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2532:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::weibull_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2608:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::extreme_value_distribution<_RealType>&)[m[Kâ€™
 2608 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2608:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::extreme_value_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:154:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::linear_congruential_engine<_UIntType, __a, __c, __m>&)[m[Kâ€™
  154 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:154:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::linear_congruential_engine<_UIntType, __a, __c, __m>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:476:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _UIntType1, long unsigned int __w1, long unsigned int __n1, long unsigned int __m1, long unsigned int __r1, _UIntType1 __a1, long unsigned int __u1, _UIntType1 __d1, long unsigned int __s1, _UIntType1 __b1, long unsigned int __t1, _UIntType1 __c1, long unsigned int __l1, _UIntType1 __f1, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>&)[m[Kâ€™
  476 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:476:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:632:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _UIntType, long unsigned int __w, long unsigned int __s, long unsigned int __r, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::subtract_with_carry_engine<_UIntType, __w, __s, __r>&)[m[Kâ€™
  632 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:632:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::subtract_with_carry_engine<_UIntType, __w, __s, __r>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:702:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RandomNumberEngine, long unsigned int __p, long unsigned int __r, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::discard_block_engine<_RandomNumberEngine, __p, __r>&)[m[Kâ€™
  702 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:702:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::discard_block_engine<_RandomNumberEngine, __p, __r>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:831:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RandomNumberEngine, long unsigned int __k, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::shuffle_order_engine<_RandomNumberEngine, __k>&)[m[Kâ€™
  831 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:831:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::shuffle_order_engine<_RandomNumberEngine, __k>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1195:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::negative_binomial_distribution<_IntType>&)[m[Kâ€™
 1195 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1195:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::negative_binomial_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1406:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::poisson_distribution<_IntType>&)[m[Kâ€™
 1406 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1406:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::poisson_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1673:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::binomial_distribution<_IntType>&)[m[Kâ€™
 1673 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1673:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::binomial_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1904:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType1, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::normal_distribution<_RealType>&)[m[Kâ€™
 1904 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1904:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::normal_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1973:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::lognormal_distribution<_RealType>&)[m[Kâ€™
 1973 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1973:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::lognormal_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2046:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::chi_squared_distribution<_RealType>&)[m[Kâ€™
 2046 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2046:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::chi_squared_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2210:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::fisher_f_distribution<_RealType>&)[m[Kâ€™
 2210 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2210:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::fisher_f_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2285:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::student_t_distribution<_RealType>&)[m[Kâ€™
 2285 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2285:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::student_t_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2454:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType1, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::gamma_distribution<_RealType>&)[m[Kâ€™
 2454 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2454:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::gamma_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2745:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::discrete_distribution<_IntType>&)[m[Kâ€™
 2745 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2745:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::discrete_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2969:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::piecewise_constant_distribution<_RealType>&)[m[Kâ€™
 2969 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2969:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::piecewise_constant_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:3177:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::piecewise_linear_distribution<_RealType>&)[m[Kâ€™
 3177 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:3177:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::piecewise_linear_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ [K]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:28:26 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[52;1H[K[?25l[52;1H"Tasks.cpp" 73L, 1808C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m
[35m#include [m[31m<numeric>[m
[35m#include [m[31m<functional>[m
[35m#include [m[31m<algorithm>[m
[35m#include [m[31m<bits/stdc++.h>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[15;9Hifstream infile;[16;9Hinfile.open([31m"films.txt"[m);[17;9H[38;5;130mif[m(infile.fail()){[18;17Hcout << [31m"Error with file"[m;[19;17Hexit([31m1[m);[20;9H}[21;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[22;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[24;9Hvector <[32mint[m> column1, column2,column8;[25;9Hvector<string> column3,column4,column5,column6,column7,column10;[26;9H[32mint[m sum=[31m0[m;[27;9H[32mdouble[m average;[28;9H[38;5;130mwhile[m(infile.good()){[30;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;
               [9Cgetline(infile, year,[31m';'[m);
                        [32;26H[K[33;11H              [38;5;130mif[m (!year.empty()){[33;44H[K[34;10H                       column1.push_back(stoi(year));[35;9H}[35;11H[K[36;10H               [38;5;130melse[m{column1.push_back([31m0[m); }[37;9H[K[38;1H                        getline(infile, length,[31m';'[m);[39;14H   [39;17H[K[40;7H                  [38;5;130mif[m(!length.empty()){[41;25Hcolumn2.push_back(stoi(length));
                }[42;18H[K[43;5H                    [38;5;130melse[m{column2.push_back([31m0[m);}[43;52H[K[44;5H                    [44;25H[K[45;1H                        getline(infile, title,[31m';'[m);
                        column3.push_back(title);[46;50H[K[47;5H                    getline(infile, subject,[31m';'[m);
                        column4.push_back(subject);[48;52H[K[49;5H                    getline(infile, actor,[31m';'[m);[50;25Hcolumn5.push_back(actor);
                        getline(infile, actress,[31m';'[m);[52;180H10,24[9CTop[10;24H[?25h[?25l[52;170H~@k[10;24H[52;170H   [11;1H[52;181H1,0-1[11;1H[?25h[?25l[52;170H~@k[11;1H[52;170H   [12;20H[52;181H2,20 [12;20H[?25h[?25l[52;170H~@k[12;20H[52;170H   [13;1H[52;181H3,0-1[13;1H[?25h[?25l[52;170H~@k[13;1H[52;170H   [14;11H[52;181H4,11 [14;11H[?25h[?25l[52;170H~@k[14;11H[52;170H   [15;24H[52;181H5,17-24[15;24H[?25h[?25l[52;170H~@k[15;24H[52;170H   [16;24H[52;181H6[16;24H[?25h[?25l[52;170H~@k[16;24H[52;170H   [17;24H[106m()[m[52;181H7[17;24H[?25h[?25l[52;170H~@k[17;24H[52;170H   [18;24H[17;23H()[52;181H8,10[18;24H[?25h[?25l[52;170H~@k[18;24H[52;170H   [19;24H[52;181H9[19;24H[?25h[?25l[52;170H~@k[19;24H[52;170H   [20;9H[17;26H[106m{[20;9H}[m[52;180H20,2-9  [20;9H[?25h[?25l[52;170H~@k[20;9H[52;170H   [21;24H[17;26H{[20;9H}[52;181H1,17-24[21;24H[?25h[?25l[52;170H~@k[21;24H[52;170H   [22;24H[52;181H2[22;24H[?25h[?25l[52;170H~@k[22;24H[52;170H   [23;8H[52;181H3,1-8  [23;8H[?25h[?25l[52;170H~@k[23;8H[52;170H   [24;24H[52;181H4,17-24[24;24H[?25h[?25l[52;170H~@k[24;24H[52;170H   [25;24H[52;181H5[25;24H[?25h[?25l[52;170H~@k[25;24H[52;170H   [26;18H[52;181H6,11-18[26;18H[?25h[?25l[52;170H~@k[26;18H[52;170H   [27;23H[52;181H7,16-23[27;23H[?25h[?25l[52;170H~@k[27;23H[52;170H   [28;24H[52;181H8,17-24[28;24H[?25h[?25l[52;170H~@k[28;24H[52;170H   [29;1H[52;181H9,0-1  [29;1H[?25h[?25l[52;170H~@k[29;1H[52;170H   [30;24H[52;180H30,3-24[30;24H[?25h[?25l[52;170H~@k[30;24H[52;170H   [31;24H[52;181H1[31;24H[?25h[?25l[52;170H~@k[31;24H[52;170H   [32;24H[52;181H2[32;24H[?25h[?25l[52;170H~@k[32;24H[52;170H   [33;24H[52;181H3[33;24H[?25h[?25l[52;170H~@k[33;24H[52;170H   [34;24H[52;181H4[34;24H[?25h[?25l[52;170H~@k[34;24H[52;170H   [35;9H[33;43H[106m{[35;9H}[m[52;181H5,2-9 [35;9H[?25h[?25l[52;170H~@k[35;9H[52;170H   [36;24H[33;43H{[35;9H}[52;181H6,3-24[36;24H[?25h[?25l[52;170H~@k[36;24H[52;170H   [37;1H[52;181H7,0-1 [37;1H[?25h[?25l[52;170H~@k[37;1H[52;170H   [38;24H[52;181H8,3-24[38;24H[?25h[?25l[52;170H~@k[38;24H[52;170H   [39;16H[52;181H9,2-16[39;16H[?25h[?25l[52;170H~@k[39;16H[52;170H   [40;24H[52;180H40,3-24[40;24H[?25h[?25l[52;170H~@k[40;24H[52;170H   [41;24H[52;181H1[41;24H[?25h[?25l[52;170H~@k[41;24H[52;170H   [42;17H[40;44H[106m{[42;17H}[m[52;181H2,3-17[42;17H[?25h[?25l[52;170H~@k[42;17H[52;170H   [43;24H[40;44H{[42;17H}[52;181H3,3-24[43;24H[?25h[?25l[52;170H~@k[43;24H[52;170H   [44;24H[52;181H4[44;24H[?25h[?25l[52;170H~@k[44;24H[52;170H   [45;24H[52;181H5[45;24H[?25h[?25l[52;170H~@k[45;24H[52;170H   [46;24H[52;181H6[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25Hcolumn6.push_back(actress);[52;1H[K[52;180H47,3-24[8C4%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25Hgetline(infile, director,[31m';'[m);[52;180H[K[52;180H48,3-24[8C9%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25Hcolumn7.push_back(director);[52;180H[K[52;180H49,3-24[7C13%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25Hgetline(infile,popularity,[31m';'[m);[52;180H[K[52;180H50,3-24[7C18%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25H[38;5;130mif[m(!popularity.empty()){[52;180H[K[52;180H51,3-24[7C22%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[52;180H[K[52;180H52,3-24[7C27%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25H[38;5;130melse[m{column8.push_back([31m0[m);}[52;180H[K[52;180H53,3-24[7C31%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25Hgetline(infile, awards,[31m';'[m);[52;180H[K[52;180H54,3-24[7C36%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25Hgetline(infile, image,[35m'\n'[m);[52;180H[K[52;180H55,3-24[7C40%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;25Hcolumn10.push_back(image);[52;180H[K[52;180H56,3-24[7C45%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;17H}[52;180H[K[52;180H57,3-24[7C50%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[52;180H[K[52;180H58,3-24[7C54%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;9Hsort(column8.begin(), column8.end());[52;180H[K[52;180H59,3-24[7C59%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;9H[38;5;130mfor[m( string y:column7){[52;180H[K[52;180H60,3-24[7C63%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;9H[34m//      cout <<y<<endl;[m[52;180H[K[52;180H61,3-24[7C68%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;17H[1;51r[51;1H
[1;52r[12;29H[106m{[46;17H}[m[51;9H}[52;180H[K[52;180H62,3-17[7C72%[46;17H[?25h[?25l[52;170H~@k[46;17H[52;170H   [46;1H[1;51r[51;1H
[1;52r[11;29H{[45;17H}[51;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[52;180H[K[52;180H63,0-1[8C77%[46;1H[?25h[?25l[52;170H~@k[46;1H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;9Hcout <<x<<endl;[52;180H[K[52;180H64,17-24      81%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;9Hvector<string>::iterator it =find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;180H[K[52;180H65,17-24      86%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;24H[1;51r[51;1H
[1;52r[51;9Hcout<< *it<<[31m"     "[m<< column7.begin() <<endl;[52;180H[K[52;180H66,12-24      90%[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [46;9H[1;51r[51;1H
[1;52r[44;31H[106m{[46;9H}[m[51;1H}[52;180H[K[52;180H67,2-9[8C95%[46;9H[?25h[?25l[52;170H~@k[46;9H[52;170H   [46;24H[1;51r[51;1H
[1;52r[43;31H{[45;9H}[52;180H[K[52;180H68,17-24      Bot[46;24H[?25h[?25l[52;170H~@k[46;24H[52;170H   [47;23H[52;181H9,16-23[47;23H[?25h[?25l[52;170H~@k[47;23H[52;170H   [48;24H[52;180H70,17-24[48;24H[?25h[?25l[52;170H~@k[48;24H[52;170H   [49;24H[52;181H1[49;24H[?25h[?25l[52;170H~@k[49;24H[52;170H   [50;1H[52;181H2,1    [50;1H[?25h[?25l[52;170H~@k[50;1H[52;170H   [51;8H[52;181H3,1-8[51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170H~@k[51;8H[52;170H   [51;8H[?25h[?25l[52;170Hi[51;8H[52;170H [51;1H
[1m-- INSERT --[m[52;180H[K[52;180H73,1[10CBot[51;1H[?25h[?25l[52;181H2[50;1H[?25h[?25l[52;181H1[49;1H[?25h[?25l[52;181H0[48;1H[?25h[?25l[52;183H2-9[48;9H[?25h[?25l[52;183H3-10[48;10H[?25h[?25l[52;183H4-11[48;11H[?25h[?25l[52;183H5-12[48;12H[?25h[?25l[52;183H6-13[48;13H[?25h[?25l[52;183H7-14[48;14H[?25h[?25l[52;183H8-15[48;15H[?25h[?25l[52;183H9-16[48;16H[?25h[?25l[52;183H10-17[48;17H[?25h[?25l[52;184H1-18[48;18H[?25h[?25l[52;184H2-19[48;19H[?25h[?25l[52;184H3-20[48;20H[?25h[?25l[52;184H4-21[48;21H[?25h[?25l[52;184H5-22[48;22H[?25h[?25l[52;184H6-23[48;23H[?25h[?25l[52;184H7-24[48;24H[?25h[?25l[52;184H8-25[48;25H[?25h[?25l[52;184H9-26[48;26H[?25h[?25l[52;183H20-27[48;27H[?25h[?25l[52;184H1-28[48;28H[?25h[?25l[52;184H2-29[48;29H[?25h[?25l[52;184H3-30[48;30H[?25h[?25l[52;184H4-31[48;31H[?25h[?25l[52;184H5-32[48;32H[?25h[?25l[52;184H6-33[48;33H[?25h[?25l[52;184H7-34[48;34H[?25h[?25l[52;184H8-35[48;35H[?25h[?25l[52;184H9-36[48;36H[?25h[?25l[52;183H30-37[48;37H[?25h[?25l[52;184H1-38[48;38H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;92H[K[52;184H0-37[48;37H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;91H[K[52;183H29-36[48;36H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;90H[K[52;184H8-35[48;35H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;89H[K[52;184H7-34[48;34H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;88H[K[52;184H6-33[48;33H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;87H[K[52;184H5-32[48;32H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;86H[K[52;184H4-31[48;31H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;85H[K[52;184H3-30[48;30H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;84H[K[52;184H2-29[48;29H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;83H[K[52;184H1-28[48;28H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;82H[K[52;184H0-27[48;27H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;81H[K[52;183H19-26[48;26H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;80H[K[52;184H8-25[48;25H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;79H[K[52;184H7-24[48;24H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;78H[K[52;184H6-23[48;23H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;77H[K[52;184H5-22[48;22H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;76H[K[52;184H4-21[48;21H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;75H[K[52;184H3-20[48;20H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;74H[K[52;184H2-19[48;19H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;73H[K[52;184H1-18[48;18H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;72H[K[52;184H0-17[48;17H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;71H[K[52;183H9-16 [48;16H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;70H[K[52;183H8-15[48;15H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;69H[K[52;183H7-14[48;14H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;68H[K[52;183H6-13[48;13H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;67H[K[52;183H5-12[48;12H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;66H[K[52;183H4-11[48;11H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;65H[K[52;183H3-10[48;10H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;64H[K[52;183H2-9 [48;9H[?25h[?25lcfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H3-10[48;10H[?25h[?25lofind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H4-11[48;11H[?25h[?25llfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H5-12[48;12H[?25h[?25lufind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H6-13[48;13H[?25h[?25lmfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H7-14[48;14H[?25h[?25lnfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H8-15[48;15H[?25h[?25l1find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H9-16[48;16H[?25h[?25l(find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H10-17[48;17H[?25h[?25l[52;184H1-18[48;18H[?25h[?25l[52;184H2-19[48;19H[?25h[?25l[52;184H3-20[48;20H[?25h[?25ld[106m([48C)[m[52;184H4-21[48;21H[?25h[?25l[52;184H5-22[48;22H[?25h[?25l([48C)[52;184H6-23[48;23H[?25h[?25l[52;184H7-24[48;24H[?25h[?25l[52;184H8-25[48;25H[?25h[?25l[52;184H9-26[48;26H[?25h[?25l[52;183H20-27[48;27H[?25h[?25l[52;184H1-28[48;28H[?25h[?25l[52;184H2-29[48;29H[?25h[?25l[52;184H3-30[48;30H[?25h[?25l[52;184H4-31[48;31H[?25h[?25l[52;184H5-32[48;32H[?25h[?25l[52;184H6-33[48;33H[?25h[?25l[52;184H7-34[48;34H[?25h[?25ln[106m()[m[52;184H8-35[48;35H[?25h[?25l[52;184H9-36[48;36H[?25h[?25l[52;183H30-37[48;37H[?25h[?25l()[52;184H1-38[48;38H[?25h[?25l[52;184H2-39[48;39H[?25h[?25l[52;184H3-40[48;40H[?25h[?25l[52;184H2-39[48;39H[?25h[?25l[52;184H1-38[48;38H[?25h[?25l[106m()[m[52;184H0-37[48;37H[?25h[?25l[52;183H29-36[48;36H[?25h[?25l[52;184H8-35[48;35H[?25h[?25l()[52;184H7-34[48;34H[?25h[?25l[52;184H6-33[48;33H[?25h[?25l[52;184H5-32[48;32H[?25h[?25l[52;184H4-31[48;31H[?25h[?25l[52;184H3-30[48;30H[?25h[?25l[52;184H2-29[48;29H[?25h[?25l[52;184H1-28[48;28H[?25h[?25l[52;184H0-27[48;27H[?25h[?25l[52;183H19-26[48;26H[?25h[?25l[52;184H8-25[48;25H[?25h[?25l[52;184H7-24[48;24H[?25h[?25l[52;184H6-23[48;23H[?25h[?25l[106m([48C)[m[52;184H5-22[48;22H[?25h[?25l[52;184H4-21[48;21H[?25h[?25l([48C)[52;184H3-20[48;20H[?25h[?25l[52;184H2-19[48;19H[?25h[?25l[52;184H1-18[48;18H[?25h[?25l[52;184H0-17[48;17H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;71H[K[52;183H9-16 [48;16H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;70H[K[52;183H8-15[48;15H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;69H[K[52;183H7-14[48;14H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;68H[K[52;183H6-13[48;13H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;67H[K[52;183H5-12[48;12H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;66H[K[52;183H4-11[48;11H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;65H[K[52;183H3-10[48;10H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;64H[K[52;183H2-9 [48;9H[?25h[?25lcfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H3-10[48;10H[?25h[?25lofind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H4-11[48;11H[?25h[?25lufind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H5-12[48;12H[?25h[?25ltfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H6-13[48;13H[?25h[?25ltfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H7-14[48;14H[?25h[?25l<find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H8-15[48;15H[?25h[?25l<find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H9-16[48;16H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;70H[K[52;183H8-15[48;15H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;69H[K[52;183H7-14[48;14H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;68H[K[52;183H6-13[48;13H[?25h[?25l<find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H7-14[48;14H[?25h[?25l<find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H8-15[48;15H[?25h[?25l find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H9-16[48;16H[?25h[?25lcfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;183H10-17[48;17H[?25h[?25lofind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;184H1-18[48;18H[?25h[?25llfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;184H2-19[48;19H[?25h[?25lufind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;184H3-20[48;20H[?25h[?25lmfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;184H4-21[48;21H[?25h[?25lnfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;184H5-22[48;22H[?25h[?25l(find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[52;184H6-23[48;23H[?25h[?25l[52;184H7-24[48;24H[?25h[?25l[52;184H6-23[48;23H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[48;77H[K[52;184H5-22[48;22H[?25h[?25l[find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m;[49;53H;
}[m[52;184H6-23[48;23H[?25h[?25l[52;184H7-24[48;24H[?25h[?25l[52;184H8-25[48;25H[?25h[?25l[52;184H9-26[48;26H[?25h[?25ld[106m([48C)[m[52;183H20-27[48;27H[?25h[?25l[52;184H1-28[48;28H[?25h[?25l([48C)[52;184H2-29[48;29H[?25h[?25l[52;184H3-30[48;30H[?25h[?25l[52;184H4-31[48;31H[?25h[?25l[52;184H5-32[48;32H[?25h[?25l[52;184H6-33[48;33H[?25h[?25l[52;184H7-34[48;34H[?25h[?25l[52;184H8-35[48;35H[?25h[?25l[52;184H9-36[48;36H[?25h[?25l[52;183H30-37[48;37H[?25h[?25l[52;184H1-38[48;38H[?25h[?25l[52;184H2-39[48;39H[?25h[?25l[52;184H3-40[48;40H[?25h[?25ln[106m()[m[52;184H4-41[48;41H[?25h[?25l[52;184H5-42[48;42H[?25h[?25l[52;184H6-43[48;43H[?25h[?25l()[52;184H7-44[48;44H[?25h[?25l[52;184H8-45[48;45H[?25h[?25l[52;184H9-46[48;46H[?25h[?25l[52;183H40-47[48;47H[?25h[?25l[52;184H1-48[48;48H[?25h[?25l[52;184H2-49[48;49H[?25h[?25l[52;184H3-50[48;50H[?25h[?25l[52;184H4-51[48;51H[?25h[?25l[52;184H5-52[48;52H[?25h[?25l[52;184H6-53[48;53H[?25h[?25l[52;184H7-54[48;54H[?25h[?25ld[106m()[m[52;184H8-55[48;55H[?25h[?25l[52;184H9-56[48;56H[?25h[?25l[52;183H50-57[48;57H[?25h[?25l()[52;184H1-58[48;58H[?25h[?25l[52;184H2-59[48;59H[?25h[?25l[52;184H3-60[48;60H[?25h[?25l[52;184H4-61[48;61H[?25h[?25l[52;184H5-62[48;62H[?25h[?25l[52;184H6-63[48;63H[?25h[?25l[52;184H7-64[48;64H[?25h[?25l[52;184H8-65[48;65H[?25h[?25l[52;184H9-66[48;66H[?25h[?25l[52;183H60-67[48;67H[?25h[?25l[52;184H1-68[48;68H[?25h[?25l[52;184H2-69[48;69H[?25h[?25l[52;184H3-70[48;70H[?25h[?25l[52;184H4-71[48;71H[?25h[?25l[52;184H5-72[48;72H[?25h[?25l[52;184H6-73[48;73H[?25h[?25l[52;184H7-74[48;74H[?25h[?25l[52;184H8-75[48;75H[?25h[?25l[48;27H[106m([48C)[m[52;184H9-76[48;76H[?25h[?25l[52;183H70-77[48;77H[?25h[?25l];[49;53H;
}[48;22H[106m[[mfind([48C)[106m][m[52;184H1-78[48;78H[?25h[52;1H[K[48;77H[?25l[52;170H^[[48;77H[52;170H  [48;78H[52;180H70,70-77      Bot[48;77H[?25h[?25l[52;170H:[48;77H[52;170H[K[52;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1794C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:70:9:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn7[m[Kâ€™?
   70 |  cout<< [01;31m[Kcolumn[m[K[find(column7.begin(),column7.end(),"Scorsese, Martin")];
      |         [01;31m[K^~~~~~[m[K
      |         [32m[Kcolumn7[m[K
[01m[KTasks.cpp:71:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kit[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kint[m[Kâ€™?
   71 |  cout<< *[01;31m[Kit[m[K<<"     "<< column7.begin() <<endl;
      |          [01;31m[K^~[m[K
      |          [32m[Kint[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:30:52 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[52;1H[K[?25l[52;1H"Tasks.cpp" 73L, 1794C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;9Hvector <[32mint[m> column1, column2,column8;[3;9Hvector<string> column3,column4,column5,column6,column7,column10;[4;9H[32mint[m sum=[31m0[m;[5;9H[32mdouble[m average;[6;9H[38;5;130mwhile[m(infile.good()){[8;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[9;25Hgetline(infile, year,[31m';'[m);[11;25H[38;5;130mif[m (!year.empty()){[12;33Hcolumn1.push_back(stoi(year));[13;9H}[14;25H[38;5;130melse[m{column1.push_back([31m0[m); }[16;25Hgetline(infile, length,[31m';'[m);[18;25H[38;5;130mif[m(!length.empty()){[19;25Hcolumn2.push_back(stoi(length));[20;17H}[21;25H[38;5;130melse[m{column2.push_back([31m0[m);}[23;25Hgetline(infile, title,[31m';'[m);[24;25Hcolumn3.push_back(title);[25;25Hgetline(infile, subject,[31m';'[m);[26;25Hcolumn4.push_back(subject);[27;25Hgetline(infile, actor,[31m';'[m);[28;25Hcolumn5.push_back(actor);[29;25Hgetline(infile, actress,[31m';'[m);[30;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[33;11H              getline(infile,popularity,[31m';'[m);[33;56H[K[34;10H               [38;5;130mif[m(!popularity.empty()){[34;49H[K[35;11H              column8.push_back(-[31m1[m*stoi(popularity));}[36;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[37;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[39;14H           column10.push_back(image);[40;7H          }[40;18H[K[42;1H        sort(column8.begin(), column8.end());[42;46H[K[43;5H    [38;5;130mfor[m( string y:column7){[43;32H[K[44;5H    [34m//      cout <<y<<endl;[m[44;32H[K[45;1H        }[45;10H[K[46;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[46;60H[K[47;5H    cout <<x<<endl;[47;24H[K[48;5H    cout<< column[106m[[mfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[106m][m;
        cout<< *it<<[31m"     "[m<< column7.begin() <<endl;
}
        [51;9H[K[52;180H70,70-77      Bot[48;77H[?25h[?25l[52;170H~@k[48;77H[52;170H   [47;23H[48;22H[[54C][52;180H69,16-23[47;23H[?25h[?25l[52;170H~@k[47;23H[52;170H   [48;77H[48;22H[106m[[54C][m[52;180H70,70-77[48;77H[?25h[?25l[52;170H~@k[48;77H[52;170H   [48;76H[48;22H[find[106m([48C)[m][52;183H69-76[48;76H[?25h[?25l[52;170Hi[48;76H[52;170H [48;76H[52;1H[1m-- INSERT --[m[52;13H[K[52;180H70,69-76      Bot[48;76H[?25h[?25l[48;27H([48C)[52;181H1,47-54[49;54H[?25h[?25l[52;184H6-53[49;53H[?25h[?25l[52;184H5-52[49;52H[?25h[?25l[52;181H0[48;52H[?25h[?25l[52;184H4-51[48;51H[?25h[?25l[52;184H3-50[48;50H[?25h[?25l[52;184H2-49[48;49H[?25h[?25l[52;184H1-48[48;48H[?25h[?25l[52;184H0-47[48;47H[?25h[?25l[52;183H39-46[48;46H[?25h[?25l[52;184H8-45[48;45H[?25h[?25l[52;184H7-44[48;44H[?25h[?25l[106m()[m[52;184H6-43[48;43H[?25h[?25l[52;184H5-42[48;42H[?25h[?25l[52;184H4-41[48;41H[?25h[?25l()[52;184H3-40[48;40H[?25h[?25l[52;184H2-39[48;39H[?25h[?25l[52;184H1-38[48;38H[?25h[?25l[52;184H0-37[48;37H[?25h[?25l[52;183H29-36[48;36H[?25h[?25l[52;184H8-35[48;35H[?25h[?25l[52;184H7-34[48;34H[?25h[?25l[52;184H6-33[48;33H[?25h[?25l[52;184H5-32[48;32H[?25h[?25l[52;184H4-31[48;31H[?25h[?25l[52;184H3-30[48;30H[?25h[?25l[52;184H2-29[48;29H[?25h[?25l[106m([48C)[m[52;184H1-28[48;28H[?25h[?25l[52;184H0-27[48;27H[?25h[?25l([48C)[52;183H19-26[48;26H[?25h[?25l[52;184H8-25[48;25H[?25h[?25l[52;184H7-24[48;24H[?25h[?25l[106m[[54C][m[52;184H6-23[48;23H[?25h[?25l[52;184H5-22[48;22H[?25h[?25l[[54C][52;184H4-21[48;21H[?25h[?25ln[106m[[54C][m[52;184H5-22[48;22H[?25h[?25l[106m1[m[find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m[106m)[m];[48;22H1[106m[[m[53C)[106m][m[52;184H6-23[48;23H[?25h[?25l[[54C][52;181H1[49;23H[?25h[?25l[52;184H5-22[49;22H[?25h[?25l[52;184H4-21[49;21H[?25h[?25l[52;184H3-20[49;20H[?25h[?25l[52;184H2-19[49;19H[?25h[?25l[52;184H1-18[49;18H[?25h[?25l[52;184H0-17[49;17H[?25h[?25l[52;183H9-16 [49;16H[?25h[?25l[52;183H8-15[49;15H[?25h[?25l[52;183H7-14[49;14H[?25h[?25l[52;183H6-13[49;13H[?25h[?25l[52;183H5-12[49;12H[?25h[?25l[52;183H4-11[49;11H[?25h[?25l[52;183H3-10[49;10H[?25h[?25l[52;183H2-9 [49;9H[?25h[?25l[52;183H1  [49;1H[?25h[?25l/[52;183H2[49;2H[?25h[?25l[34m//      cout<< *it<<[7C<< column7.begin() <<endl;[m[52;183H3[49;3H[?25h[52;1H[K[49;2H[?25l[52;170H^[[49;2H[52;170H  [49;3H[52;180H71,2[10CBot[49;2H[?25h[?25l[52;170H:[49;2H[52;170H[K[52;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 73L, 1797C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:70:16:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[Kstd::vector<int>[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™)
   70 |  cout<< column1[01;31m[K[[m[Kfind(column7.begin(),column7.end(),"Scorsese, Martin")];
      |                [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1040:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::reference = int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int][m[Kâ€™
 1040 |       [01;36m[Koperator[m[K[](size_type __n) _GLIBCXX_NOEXCEPT
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1040:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ to â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™}
 1040 |       operator[]([01;36m[Ksize_type __n[m[K) _GLIBCXX_NOEXCEPT
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1058:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::const_reference = const int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int][m[Kâ€™
 1058 |       [01;36m[Koperator[m[K[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1058:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ to â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™}
 1058 |       operator[]([01;36m[Ksize_type __n[m[K) const _GLIBCXX_NOEXCEPT
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ :wq!g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;52r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[52;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Fri Dec 02 19:31:13 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[52;1H[K[?25l[52;1H"Tasks.cpp" 73L, 1797C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;9Hvector <[32mint[m> column1, column2,column8;[3;9Hvector<string> column3,column4,column5,column6,column7,column10;[4;9H[32mint[m sum=[31m0[m;[5;9H[32mdouble[m average;[6;9H[38;5;130mwhile[m(infile.good()){[8;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[9;25Hgetline(infile, year,[31m';'[m);[11;25H[38;5;130mif[m (!year.empty()){[12;33Hcolumn1.push_back(stoi(year));[13;9H}[14;25H[38;5;130melse[m{column1.push_back([31m0[m); }[16;25Hgetline(infile, length,[31m';'[m);[18;25H[38;5;130mif[m(!length.empty()){[19;25Hcolumn2.push_back(stoi(length));[20;17H}[21;25H[38;5;130melse[m{column2.push_back([31m0[m);}[23;25Hgetline(infile, title,[31m';'[m);[24;25Hcolumn3.push_back(title);[25;25Hgetline(infile, subject,[31m';'[m);[26;25Hcolumn4.push_back(subject);[27;25Hgetline(infile, actor,[31m';'[m);[28;25Hcolumn5.push_back(actor);[29;25Hgetline(infile, actress,[31m';'[m);[30;25Hcolumn6.push_back(actress);
               [9Cgetline(infile, director,[31m';'[m);
                        column7.push_back(director);[33;11H              getline(infile,popularity,[31m';'[m);[33;56H[K[34;10H               [38;5;130mif[m(!popularity.empty()){[34;49H[K[35;11H              column8.push_back(-[31m1[m*stoi(popularity));}[36;10H               [38;5;130melse[m{column8.push_back([31m0[m);}[37;9H                getline(infile, awards,[31m';'[m);
                        getline(infile, image,[35m'\n'[m);[39;14H           column10.push_back(image);[40;7H          }[40;18H[K[42;1H        sort(column8.begin(), column8.end());[42;46H[K[43;5H    [38;5;130mfor[m( string y:column7){[43;32H[K[44;5H    [34m//      cout <<y<<endl;[m[44;32H[K[45;1H        }[45;10H[K[46;5H    [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[46;60H[K[47;5H    cout <<x<<endl;[47;24H[K[48;5H    cout<< column1[find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)];
[34m//      cout<< *it<<[m[31m"     "[m[34m<< column7.begin() <<endl;[m
}
        [51;9H[K[52;180H71,2[10CBot[49;2H[?25h[?25l[52;170H~@k[49;2H[52;170H   [49;1H[52;183H1[49;1H[?25h[?25l[52;170H~@k[49;1H[52;170H   [48;79H[52;181H0,72-79[48;79H[?25h[?25l[52;170H~@k[48;79H[52;170H   [49;53H[52;181H1,48-53[49;53H[?25h[?25l[52;170H~@k[49;53H[52;170H   [49;52H[52;184H7-52[49;52H[?25h[?25l[52;170H~@k[49;52H[52;170H   [49;51H[52;184H6-51[49;51H[?25h[?25l[52;170H~@k[49;51H[52;170H   [49;50H[52;184H5-50[49;50H[?25h[?25l[52;170H~@k[49;50H[52;170H   [49;49H[52;184H4-49[49;49H[?25h[?25l[52;170H~@k[49;49H[52;170H   [49;48H[52;184H3-48[49;48H[?25h[?25l[52;170H~@k[49;48H[52;170H   [49;47H[52;184H2-47[49;47H[?25h[?25l[52;170H~@k[49;47H[52;170H   [49;46H[52;184H1-46[49;46H[?25h[?25l[52;170H~@k[49;46H[52;170H   [49;45H[34m[106m()[m[52;184H0-45[49;45H[?25h[?25l[52;170H~@k[49;45H[52;170H   [49;44H[52;183H39-44[49;44H[?25h[?25l[52;170H~@k[49;44H[52;170H   [49;43H[1C[34m()[m[52;184H8-43[49;43H[?25h[?25l[52;170H~@k[49;43H[52;170H   [49;42H[52;184H7-42[49;42H[?25h[?25l[52;170H~@k[49;42H[52;170H   [49;41H[52;184H6-41[49;41H[?25h[?25l[52;170H~@k[49;41H[52;170H   [49;40H[52;184H5-40[49;40H[?25h[?25l[52;170H~@k[49;40H[52;170H   [49;39H[52;184H4-39[49;39H[?25h[?25l[52;170H~@k[49;39H[52;170H   [49;38H[52;184H3-38[49;38H[?25h[?25l[52;170H~@k[49;38H[52;170H   [49;37H[52;184H2-37[49;37H[?25h[?25l[52;170H~@k[49;37H[52;170H   [49;36H[52;184H1-36[49;36H[?25h[?25l[52;170H~@k[49;36H[52;170H   [49;35H[52;184H0-35[49;35H[?25h[?25l[52;170H~@k[49;35H[52;170H   [49;34H[52;183H29-34[49;34H[?25h[?25l[52;170H~@k[49;34H[52;170H   [49;33H[52;184H8-33[49;33H[?25h[?25l[52;170H~@k[49;33H[52;170H   [49;32H[52;184H7-32[49;32H[?25h[?25l[52;170H~@k[49;32H[52;170H   [49;31H[52;184H6-31[49;31H[?25h[?25l[52;170H~@k[49;31H[52;170H   [49;30H[52;184H5-30[49;30H[?25h[?25l[52;170H~@k[49;30H[52;170H   [49;29H[52;184H4-29[49;29H[?25h[?25l[52;170H~@k[49;29H[52;170H   [49;28H[52;184H3-28[49;28H[?25h[?25l[52;170H~@k[49;28H[52;170H   [49;27H[52;184H2-27[49;27H[?25h[?25l[52;170H~@k[49;27H[52;170H   [49;26H[52;184H1-26[49;26H[?25h[?25l[52;170H~@k[49;26H[52;170H   [49;25H[52;184H0-25[49;25H[?25h[?25l[52;170H~@k[49;25H[52;170H   [49;24H[52;183H19-24[49;24H[?25h[?25l[52;170H~@k[49;24H[52;170H   [49;23H[52;184H8-23[49;23H[?25h[?25l[52;170H~@k[49;23H[52;170H   [49;22H[52;184H7-22[49;22H[?25h[?25l[52;170H~@k[49;22H[52;170H   [49;21H[52;184H6-21[49;21H[?25h[?25l[52;170H~@k[49;21H[52;170H   [49;20H[52;184H5-20[49;20H[?25h[?25l[52;170H~@k[49;20H[52;170H   [49;19H[52;184H4-19[49;19H[?25h[?25l[52;170H~@k[49;19H[52;170H   [49;18H[52;184H3-18[49;18H[?25h[?25l[52;170H~@k[49;18H[52;170H   [49;17H[52;184H2-17[49;17H[?25h[?25l[52;170H~@k[49;17H[52;170H   [49;16H[52;184H1-16[49;16H[?25h[?25l[52;170H~@k[49;16H[52;170H   [49;15H[52;184H0-15[49;15H[?25h[?25l[52;170H~@k[49;15H[52;170H   [49;14H[52;183H9-14 [49;14H[?25h[?25l[52;170H~@k[49;14H[52;170H   [49;13H[52;183H8-13[49;13H[?25h[?25l[52;170H~@k[49;13H[52;170H   [49;12H[52;183H7-12[49;12H[?25h[?25l[52;170H~@k[49;12H[52;170H   [49;11H[52;183H6-11[49;11H[?25h[?25l[52;170H~@k[49;11H[52;170H   [49;10H[52;183H5-10[49;10H[?25h[?25l[52;170H~@k[49;10H[52;170H   [49;9H[52;183H4-9 [49;9H[?25h[?25l[52;170H~@k[49;9H[52;170H   [49;8H[52;183H3-8[49;8H[?25h[?25l[52;170H~@k[49;8H[52;170H   [49;2H[52;183H2  [49;2H[?25h[?25l[52;170H~@k[49;2H[52;170H   [49;1H[52;183H1[49;1H[?25h[?25l[52;170H~@k[49;1H[52;170H   [49;2H[52;183H2[49;2H[?25h[?25l[52;170H~@k[49;2H[52;170H   [49;8H[52;183H3-8[49;8H[?25h[?25l[52;170H~@k[49;8H[52;170H   [49;2H[52;183H2  [49;2H[?25h[?25l[52;170H^[[49;2H[52;170H  [49;2H[52;170H^[[49;2H[52;170H  [49;2H[?25h[?25l[52;170H~@k[49;2H[52;170H   [48;8H[52;181H0,1-8[48;8H[?25h[?25l[52;170H~@k[48;8H[52;170H   [49;2H[52;181H1,2  [49;2H[?25h[27m[23m[29m[m[H[2J[?25l[1;25Hcolumn2.push_back(stoi(length));[2;17H}[3;25H[38;5;130melse[m{column2.push_back([31m0[m);}[5;25Hgetline(infile, title,[31m';'[m);[6;25Hcolumn3.push_back(title);[7;25Hgetline(infile, subject,[31m';'[m);[8;25Hcolumn4.push_back(subject);[9;25Hgetline(infile, actor,[31m';'[m);[10;25Hcolumn5.push_back(actor);[11;25Hgetline(infile, actress,[31m';'[m);[12;25Hcolumn6.push_back(actress);[13;25Hgetline(infile, director,[31m';'[m);[14;25Hcolumn7.push_back(director);[15;25Hgetline(infile,popularity,[31m';'[m);[16;25H[38;5;130mif[m(!popularity.empty()){[17;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[18;25H[38;5;130melse[m{column8.push_back([31m0[m);}[19;25Hgetline(infile, awards,[31m';'[m);[20;25Hgetline(infile, image,[35m'\n'[m);[21;25Hcolumn10.push_back(image);[22;17H}[24;9Hsort(column8.begin(), column8.end());[25;9H[38;5;130mfor[m( string y:column7){[26;9H[34m//      cout <<y<<endl;[m[27;9H}[28;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[29;9Hcout <<x<<endl;[30;9Hcout<< column1[find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)];
[34m//      cout<< *it<<[m[31m"     "[m[34m<< column7.begin() <<endl;[m
}[34;105H71,2[10CBot[31;2H[?25h[?25l[34;95H~@k[31;2H[34;95H   [30;8H[34;106H0,1-8[30;8H[?25h[?25l[34;95H~@k[30;8H[34;95H   [31;2H[34;106H1,2  [31;2H[?25h[?25l[34;95Hi[31;2H[34;95H [31;2H


[1m-- INSERT --[m[34;105H[K[34;105H71,2[10CBot[31;2H[?25h[?25l[34;108H3[31;3H[?25h[?25l/       cout<< *it<<[7C<< column7.begin() <<endl;[34;108H2[31;2H[?25h[?25l [34;108H1[31;1H[?25h[?25l[34;106H2[32;1H[?25h[?25l[1;33r[33;1H
[1;34r[31;1H[K[32;1H}[34;105H[K[34;105H73,1[10CBot[32;1H[?25h[?25l[34;106H2[31;1H[?25h[?25l[34;108H2-9[31;9H[?25h[34;1H[K[31;8H[?25l[34;95H^[[31;8H[34;95H  [31;9H[34;105H72,1-8[8CBot[31;8H[?25h[?25l[34;95H:[31;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1797C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:70:16:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator[][m[Kâ€™ (operand types are â€˜[01m[Kstd::vector<int>[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™)
   70 |  cout<< column1[01;31m[K[[m[Kfind(column7.begin(),column7.end(),"Scorsese, Martin")];
      |                [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1040:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::reference = int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int][m[Kâ€™
 1040 |       [01;36m[Koperator[m[K[](size_type __n) _GLIBCXX_NOEXCEPT
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1040:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ to â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™}
 1040 |       operator[]([01;36m[Ksize_type __n[m[K) _GLIBCXX_NOEXCEPT
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1058:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::vector<_Tp, _Alloc>::const_reference std::vector<_Tp, _Alloc>::operator[](std::vector<_Tp, _Alloc>::size_type) const [with _Tp = int; _Alloc = std::allocator<int>; std::vector<_Tp, _Alloc>::const_reference = const int&; std::vector<_Tp, _Alloc>::size_type = long unsigned int][m[Kâ€™
 1058 |       [01;36m[Koperator[m[K[](size_type __n) const _GLIBCXX_NOEXCEPT
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1058:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ to â€˜[01m[Kstd::vector<int>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™}
 1058 |       operator[]([01;36m[Ksize_type __n[m[K) const _GLIBCXX_NOEXCEPT
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[KTasks.cpp:71:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kit[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kint[m[Kâ€™?
   71 |  cout<< *[01;31m[Kit[m[K<<"     "<< column7.begin() <<endl;
      |          [01;31m[K^~[m[K
      |          [32m[Kint[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:10:00 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1797C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m( string y:column7){[24;32H[K[25;5H    [34m//      cout <<y<<endl;[m[25;32H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    cout<< column1[find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)];
        cout<< *it<<[31m"     "[m<< column7.begin() <<endl;[30;54H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H72,1-8[8CBot[31;8H[?25h[?25l[34;95H~@k[31;8H[34;95H   [30;8H[34;106H1[30;8H[?25h[?25l[34;95H~@k[30;8H[34;95H   [29;8H[34;106H0[29;8H[?25h[?25l[34;95H~@k[29;8H[34;95H   [29;9H[34;108H2-9[29;9H[?25h[?25l[34;95H~@k[29;9H[34;95H   [29;10H[34;108H3-10[29;10H[?25h[?25l[34;95H~@k[29;10H[34;95H   [29;11H[34;108H4-11[29;11H[?25h[?25l[34;95H~@k[29;11H[34;95H   [29;12H[34;108H5-12[29;12H[?25h[?25l[34;95H~@k[29;12H[34;95H   [29;13H[34;108H6-13[29;13H[?25h[?25l[34;95H~@k[29;13H[34;95H   [29;14H[34;108H7-14[29;14H[?25h[?25l[34;95H~@k[29;14H[34;95H   [29;15H[34;108H8-15[29;15H[?25h[?25l[34;95H~@k[29;15H[34;95H   [29;16H[34;108H9-16[29;16H[?25h[?25l[34;95H~@k[29;16H[34;95H   [29;17H[34;108H10-17[29;17H[?25h[?25l[34;95H~@k[29;17H[34;95H   [29;18H[34;109H1-18[29;18H[?25h[?25l[34;95H~@k[29;18H[34;95H   [29;19H[34;109H2-19[29;19H[?25h[?25l[34;95H~@k[29;19H[34;95H   [29;20H[34;109H3-20[29;20H[?25h[?25l[34;95H~@k[29;20H[34;95H   [29;21H[34;109H4-21[29;21H[?25h[?25l[34;95H~@k[29;21H[34;95H   [29;22H[34;109H5-22[29;22H[?25h[?25l[34;95H~@k[29;22H[34;95H   [29;23H[106m[[54C][m[34;109H6-23[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [29;24H[[54C][34;109H7-24[29;24H[?25h[?25l[34;95H~@k[29;24H[34;95H   [29;23H[106m[[54C][m[34;109H6-23[29;23H[?25h[?25l[34;95H~@k[29;23H[34;95H   [29;22H1[[54C][34;109H5-22[29;22H[?25h[?25l[34;95H~@k[29;22H[34;95H   [29;21H[34;109H4-21[29;21H[?25h[?25l[34;95H~@k[29;21H[34;95H   [29;20H[34;109H3-20[29;20H[?25h[?25l[34;95H~@k[29;20H[34;95H   [29;19H[34;109H2-19[29;19H[?25h[?25l[34;95H~@k[29;19H[34;95H   [29;18H[34;109H1-18[29;18H[?25h[?25l[34;95H~@k[29;18H[34;95H   [29;17H[34;109H0-17[29;17H[?25h[?25l[34;95H~@k[29;17H[34;95H   [29;16H[34;108H9-16 [29;16H[?25h[?25l[34;95H~@k[29;16H[34;95H   [29;15H[34;108H8-15[29;15H[?25h[?25l[34;95H~@k[29;15H[34;95H   [29;14H[34;108H7-14[29;14H[?25h[?25l[34;95Hu[29;14H[34;1HAlready at oldest change[34;95H[K[29;14H[34;105H70,7-14[7CBot[29;14H[?25h[?25l[34;95Hi[29;14H[34;95H [29;14H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H70,7-14[7CBot[29;14H[?25h[?25l[34;108H8-15[29;15H[?25h[?25l[34;108H9-16[29;16H[?25h[?25l[34;108H10-17[29;17H[?25h[?25l[34;109H1-18[29;18H[?25h[?25l[34;109H2-19[29;19H[?25h[?25l[34;109H3-20[29;20H[?25h[?25l[34;109H4-21[29;21H[?25h[?25l[34;109H5-22[29;22H[?25h[?25l1[106m[[54C][m[34;109H6-23[29;23H[?25h[?25l[34;109H7-24[29;24H[?25h[?25l[106mf[mind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m[106m;[m[29;79H[K[29;23Hf[54C;[34;109H6-23[29;23H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;78H[K[34;109H5-22[29;22H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;77H[K[34;109H4-21[29;21H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;76H[K[34;109H3-20[29;20H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;75H[K[34;109H2-19[29;19H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;74H[K[34;109H1-18[29;18H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;73H[K[34;109H0-17[29;17H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;72H[K[34;108H9-16 [29;16H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;71H[K[34;108H8-15[29;15H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;70H[K[34;108H7-14[29;14H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;69H[K[34;108H6-13[29;13H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;68H[K[34;108H5-12[29;12H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;67H[K[34;108H4-11[29;11H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;66H[K[34;108H3-10[29;10H[?25h[?25lfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[29;65H[K[34;108H2-9 [29;9H[?25h[?25lvfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H3-10[29;10H[?25h[?25lefind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H4-11[29;11H[?25h[?25lcfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H5-12[29;12H[?25h[?25ltfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H6-13[29;13H[?25h[?25lofind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H7-14[29;14H[?25h[?25lrfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H8-15[29;15H[?25h[?25l<find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H9-16[29;16H[?25h[?25l>find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H10-17[29;17H[?25h[?25l[34;108H9-16 [29;16H[?25h[?25ls>find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H10-17[29;17H[?25h[?25lt>find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H1-18[29;18H[?25h[?25lr>find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H2-19[29;19H[?25h[?25li>find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H3-20[29;20H[?25h[?25ln>find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H4-21[29;21H[?25h[?25lg>find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H5-22[29;22H[?25h[?25l[34;109H6-23[29;23H[?25h[?25lifind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H7-24[29;24H[?25h[?25ltfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H8-25[29;25H[?25h[?25lefind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H9-26[29;26H[?25h[?25lrfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;108H20-27[29;27H[?25h[?25lafind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H1-28[29;28H[?25h[?25ltfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H2-29[29;29H[?25h[?25lofind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H3-30[29;30H[?25h[?25lrfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H4-31[29;31H[?25h[?25l find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H5-32[29;32H[?25h[?25lifind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H6-33[29;33H[?25h[?25ltfind(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H7-34[29;34H[?25h[?25l=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m)[97m[101m][m;[34;109H8-35[29;35H[?25h[?25l[34;109H9-36[29;36H[?25h[?25l[34;108H30-37[29;37H[?25h[?25l[34;109H1-38[29;38H[?25h[?25ld[106m([48C)[m[34;109H2-39[29;39H[?25h[?25l[34;109H3-40[29;40H[?25h[?25l([48C)[34;109H4-41[29;41H[?25h[?25l[34;109H5-42[29;42H[?25h[?25l[34;109H6-43[29;43H[?25h[?25l[34;109H7-44[29;44H[?25h[?25l[34;109H8-45[29;45H[?25h[?25l[34;109H9-46[29;46H[?25h[?25l[34;108H40-47[29;47H[?25h[?25l[34;109H1-48[29;48H[?25h[?25l[34;109H2-49[29;49H[?25h[?25l[34;109H3-50[29;50H[?25h[?25l[34;109H4-51[29;51H[?25h[?25l[34;109H5-52[29;52H[?25h[?25ln[106m()[m[34;109H6-53[29;53H[?25h[?25l[34;109H7-54[29;54H[?25h[?25l[34;109H8-55[29;55H[?25h[?25l()[34;109H9-56[29;56H[?25h[?25l[34;108H50-57[29;57H[?25h[?25l[34;109H1-58[29;58H[?25h[?25l[34;109H2-59[29;59H[?25h[?25l[34;109H3-60[29;60H[?25h[?25l[34;109H4-61[29;61H[?25h[?25l[34;109H5-62[29;62H[?25h[?25l[34;109H6-63[29;63H[?25h[?25l[34;109H7-64[29;64H[?25h[?25l[34;109H8-65[29;65H[?25h[?25l[34;109H9-66[29;66H[?25h[?25ld[106m()[m[34;108H60-67[29;67H[?25h[?25l[34;109H1-68[29;68H[?25h[?25l[34;109H2-69[29;69H[?25h[?25l()[34;109H3-70[29;70H[?25h[?25l[34;109H4-71[29;71H[?25h[?25l[34;109H5-72[29;72H[?25h[?25l[34;109H6-73[29;73H[?25h[?25l[34;109H7-74[29;74H[?25h[?25l[34;109H8-75[29;75H[?25h[?25l[34;109H9-76[29;76H[?25h[?25l[34;108H70-77[29;77H[?25h[?25l[34;109H1-78[29;78H[?25h[?25l[34;109H2-79[29;79H[?25h[?25l[34;109H3-80[29;80H[?25h[?25l[34;109H4-81[29;81H[?25h[?25l[34;109H5-82[29;82H[?25h[?25l[34;109H6-83[29;83H[?25h[?25l[34;109H7-84[29;84H[?25h[?25l[34;109H8-85[29;85H[?25h[?25l[34;109H9-86[29;86H[?25h[?25l[34;108H80-87[29;87H[?25h[?25l[29;39H[106m([48C)[m[34;109H1-88[29;88H[?25h[?25l[29;39H([48C)[34;109H2-89[29;89H[?25h[?25l[34;109H3-90[29;90H[?25h[?25l;[29;90H[K[29;39H[106m([48C)[m[34;109H2-89[29;89H[?25h[?25l[29;39H([48C)[34;109H3-90[29;90H[?25h[?25l[34;106H1,47-54[30;54H[?25h[34;1H[K[30;53H[?25l[34;95H^[[30;53H[34;95H  [30;54H[34;105H71,46-53      Bot[30;53H[?25h[?25l[34;95H:[30;53H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1807C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:70:25:[m[K [01;31m[Kerror: [m[Kexpected initializer before â€˜[01m[Kit[m[Kâ€™
   70 |  vector<string>iterator [01;31m[Kit[m[K=find(column7.begin(),column7.end(),"Scorsese, Martin");
      |                         [01;31m[K^~[m[K
[01m[KTasks.cpp:71:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kit[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kint[m[Kâ€™?
   71 |  cout<< *[01;31m[Kit[m[K<<"     "<< column7.begin() <<endl;
      |          [01;31m[K^~[m[K
      |          [32m[Kint[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:10:42 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1807C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m( string y:column7){[24;32H[K[25;5H    [34m//      cout <<y<<endl;[m[25;32H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<< column7.begin() <<endl;[30;54H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H71,46-53      Bot[30;53H[?25h[?25l[34;95H~@k[30;53H[34;95H   [30;52H[34;109H5-52[30;52H[?25h[?25l[34;95H~@k[30;52H[34;95H   [30;51H[34;109H4-51[30;51H[?25h[?25l[34;95H~@k[30;51H[34;95H   [29;51H[34;106H0[29;51H[?25h[?25l[34;95H~@k[29;51H[34;95H   [29;50H[34;109H3-50[29;50H[?25h[?25l[34;95H~@k[29;50H[34;95H   [29;49H[34;109H2-49[29;49H[?25h[?25l[34;95H~@k[29;49H[34;95H   [29;48H[34;109H1-48[29;48H[?25h[?25l[34;95H~@k[29;48H[34;95H   [29;47H[34;109H0-47[29;47H[?25h[?25l[34;95H~@k[29;47H[34;95H   [29;46H[34;108H39-46[29;46H[?25h[?25l[34;95H~@k[29;46H[34;95H   [29;45H[34;109H8-45[29;45H[?25h[?25l[34;95H~@k[29;45H[34;95H   [29;44H[34;109H7-44[29;44H[?25h[?25l[34;95H~@k[29;44H[34;95H   [29;43H[34;109H6-43[29;43H[?25h[?25l[34;95H~@k[29;43H[34;95H   [29;42H[34;109H5-42[29;42H[?25h[?25l[34;95H~@k[29;42H[34;95H   [29;41H[34;109H4-41[29;41H[?25h[?25l[34;95H~@k[29;41H[34;95H   [29;40H[34;109H3-40[29;40H[?25h[?25l[34;95H~@k[29;40H[34;95H   [29;39H[106m([48C)[m[34;109H2-39[29;39H[?25h[?25l[34;95H~@k[29;39H[34;95H   [29;38Hd([48C)[34;109H1-38[29;38H[?25h[?25l[34;95H~@k[29;38H[34;95H   [29;37H[34;109H0-37[29;37H[?25h[?25l[34;95H~@k[29;37H[34;95H   [29;36H[34;108H29-36[29;36H[?25h[?25l[34;95H~@k[29;36H[34;95H   [29;35H[34;109H8-35[29;35H[?25h[?25l[34;95H~@k[29;35H[34;95H   [29;34H[34;109H7-34[29;34H[?25h[?25l[34;95H~@k[29;34H[34;95H   [29;33H[34;109H6-33[29;33H[?25h[?25l[34;95H~@k[29;33H[34;95H   [29;32H[34;109H5-32[29;32H[?25h[?25l[34;95H~@k[29;32H[34;95H   [29;31H[34;109H4-31[29;31H[?25h[?25l[34;95H~@k[29;31H[34;95H   [29;30H[34;109H3-30[29;30H[?25h[?25l[34;95H~@k[29;30H[34;95H   [29;29H[34;109H2-29[29;29H[?25h[?25l[34;95H~@k[29;29H[34;95H   [29;28H[34;109H1-28[29;28H[?25h[?25l[34;95H~@k[29;28H[34;95H   [29;27H[34;109H0-27[29;27H[?25h[?25l[34;95H~@k[29;27H[34;95H   [29;26H[34;108H19-26[29;26H[?25h[?25l[34;95H~@k[29;26H[34;95H   [29;25H[34;109H8-25[29;25H[?25h[?25l[34;95H~@k[29;25H[34;95H   [29;24H[34;109H7-24[29;24H[?25h[?25l[34;95H~@k[29;24H[34;95H   [29;23H[34;109H6-23[29;23H[?25h[?25l[34;95H:[29;23H[34;1H[K[34;1H:[?2004h[?25h:[?25l[34;2H[K[34;2H[?25h [?25l[29;23H[34;105H70,16-23      Bot[29;23H[?25h[?25l[34;95Hi[29;23H[34;95H [29;23H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H70,16-23      Bot[29;23H[?25h[?25l:iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[34;109H7-24[29;24H[?25h[?25l:iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[34;109H8-25[29;25H[?25h[34;1H[K[29;24H[?25l[34;95H^[[29;24H[34;95H  [29;25H[34;105H70,17-24      Bot[29;24H[?25h[?25l[34;95H:[29;24H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1809C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:71:21:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator<<[m[Kâ€™ (operand types are â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ and â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™})
   71 |  [32m[Kcout<< *it<<"     "[m[K[01;31m[K<<[m[K [34m[Kcolumn7.begin()[m[K <<endl;
      |  [32m[K~~~~~~~~~~~~~~~~~~~[m[K[01;31m[K^~[m[K [34m[K~~~~~~~~~~~~~~~[m[K
      |            [32m[K|[m[K                        [34m[K|[m[K
      |            [32m[Kstd::basic_ostream<char>[m[K [34m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator {aka __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >}[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:108:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  108 |       [01;36m[Koperator[m[K<<(__ostream_type& (*__pf)(__ostream_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:108:36:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ostream<char>& (*)(std::basic_ostream<char>&)[m[Kâ€™}
  108 |       operator<<([01;36m[K__ostream_type& (*__pf)(__ostream_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>][m[Kâ€™
  117 |       [01;36m[Koperator[m[K<<(__ios_type& (*__pf)(__ios_type&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:117:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&)[m[Kâ€™ {aka â€˜[01m[Kstd::basic_ios<char>& (*)(std::basic_ios<char>&)[m[Kâ€™}
  117 |       operator<<([01;36m[K__ios_type& (*__pf)(__ios_type&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  127 |       [01;36m[Koperator[m[K<<(ios_base& (*__pf) (ios_base&))
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:127:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::ios_base& (*)(std::ios_base&)[m[Kâ€™
  127 |       operator<<([01;36m[Kios_base& (*__pf) (ios_base&)[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  166 |       [01;36m[Koperator[m[K<<(long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:166:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong int[m[Kâ€™
  166 |       operator<<([01;36m[Klong __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:170:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  170 |       [01;36m[Koperator[m[K<<(unsigned long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:170:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong unsigned int[m[Kâ€™
  170 |       operator<<([01;36m[Kunsigned long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:174:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  174 |       [01;36m[Koperator[m[K<<(bool __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:174:23:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kbool[m[Kâ€™
  174 |       operator<<([01;36m[Kbool __n[m[K)
      |                  [01;36m[K~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:91:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
   91 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:92:22:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort int[m[Kâ€™
   92 |     operator<<([01;36m[Kshort __n[m[K)
      |                [01;36m[K~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:181:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  181 |       [01;36m[Koperator[m[K<<(unsigned short __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:181:33:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kshort unsigned int[m[Kâ€™
  181 |       operator<<([01;36m[Kunsigned short __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:105:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>][m[Kâ€™
  105 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:106:20:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™
  106 |     operator<<([01;36m[Kint __n[m[K)
      |                [01;36m[K~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:192:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  192 |       [01;36m[Koperator[m[K<<(unsigned int __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:192:31:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kunsigned int[m[Kâ€™
  192 |       operator<<([01;36m[Kunsigned int __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:201:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  201 |       [01;36m[Koperator[m[K<<(long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:201:28:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long int[m[Kâ€™
  201 |       operator<<([01;36m[Klong long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:205:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  205 |       [01;36m[Koperator[m[K<<(unsigned long long __n)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:205:37:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong long unsigned int[m[Kâ€™
  205 |       operator<<([01;36m[Kunsigned long long __n[m[K)
      |                  [01;36m[K~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:220:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  220 |       [01;36m[Koperator[m[K<<(double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:220:25:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kdouble[m[Kâ€™
  220 |       operator<<([01;36m[Kdouble __f[m[K)
      |                  [01;36m[K~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:224:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  224 |       [01;36m[Koperator[m[K<<(float __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:224:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kfloat[m[Kâ€™
  224 |       operator<<([01;36m[Kfloat __f[m[K)
      |                  [01;36m[K~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:232:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  232 |       [01;36m[Koperator[m[K<<(long double __f)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:232:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Klong double[m[Kâ€™
  232 |       operator<<([01;36m[Klong double __f[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/ostream:245:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>][m[Kâ€™
  245 |       [01;36m[Koperator[m[K<<(const void* __p)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:245:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kconst void*[m[Kâ€™
  245 |       operator<<([01;36m[Kconst void* __p[m[K)
      |                  [01;36m[K~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:119:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>][m[Kâ€™
  119 |     [01;36m[Kbasic_ostream<_CharT, _Traits>[m[K::
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:120:34:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} to â€˜[01m[Kstd::basic_ostream<char>::__streambuf_type*[m[Kâ€™ {aka â€˜[01m[Kstd::basic_streambuf<char>*[m[Kâ€™}
  120 |     operator<<([01;36m[K__streambuf_type* __sbin[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~~~^~~~~~[m[K
In file included from [01m[K/usr/include/c++/9/regex:62[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:110[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/regex.h:1553:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ch_type, class _Ch_traits, class _Bi_iter> std::basic_ostream<_CharT, _Traits>& std::__cxx11::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::sub_match<_Bi_iter>&)[m[Kâ€™
 1553 |     [01;36m[Koperator[m[K<<(basic_ostream<_Ch_type, _Ch_traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/regex.h:1553:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__cxx11::sub_match<_Bi_iter>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/string:55[m[K,
                 from [01m[K/usr/include/c++/9/bits/locale_classes.h:40[m[K,
                 from [01m[K/usr/include/c++/9/bits/ios_base.h:41[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)[m[Kâ€™
 6419 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/basic_string.h:6419:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<_CharT, _Traits, _Alloc>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/bits/ios_base.h:46[m[K,
                 from [01m[K/usr/include/c++/9/ios:42[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)[m[Kâ€™
  217 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/system_error:217:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst std::error_code&[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)[m[Kâ€™
  506 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:506:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[K_CharT[m[Kâ€™ (â€˜[01m[Kchar[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™)
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)[m[Kâ€™
  511 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:511:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)[m[Kâ€™
  517 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:517:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kchar[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)[m[Kâ€™
  523 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, signed char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:523:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Ksigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)[m[Kâ€™
  528 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:528:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kunsigned char[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)[m[Kâ€™
  548 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:548:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst _CharT*[m[Kâ€™ and â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/ostream:702[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)[m[Kâ€™
  321 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/ostream.tcc:321:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)[m[Kâ€™
  565 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:565:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)[m[Kâ€™
  578 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:578:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst signed char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)[m[Kâ€™
  583 |     [01;36m[Koperator[m[K<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:583:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst unsigned char*[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&)[m[Kâ€™
  691 |     [01;36m[Koperator[m[K<<(_Ostream&& __os, const _Tp& __x)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/9/ostream: In substitution of â€˜[01m[Ktemplate<class _Ostream, class _Tp> typename std::enable_if<std::__and_<std::__not_<std::is_lvalue_reference<_Tp> >, std::__is_convertible_to_basic_ostream<_Ostream>, std::__is_insertable<typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type, const _Tp&, void> >::value, typename std::__is_convertible_to_basic_ostream<_Tp>::__ostream_type>::type std::operator<<(_Ostream&&, const _Tp&) [with _Ostream = std::basic_ostream<char>&; _Tp = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >][m[Kâ€™:
[01m[KTasks.cpp:71:38:[m[K   required from here
[01m[K/usr/include/c++/9/ostream:691:5:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, std::basic_ostream<char>&>[m[Kâ€™
In file included from [01m[K/usr/include/c++/9/ccomplex:39[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/complex:552:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::complex<_Tp>&)[m[Kâ€™
  552 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, const complex<_Tp>& __x)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/complex:552:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::complex<_Tp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:66[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bitset:1538:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, long unsigned int _Nb> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::bitset<_Nb>&)[m[Kâ€™
 1538 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bitset:1538:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::bitset<_Nb>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:79:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Resetiosflags)[m[Kâ€™
   79 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Resetiosflags __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:79:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Resetiosflags[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:109:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setiosflags)[m[Kâ€™
  109 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setiosflags __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:109:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Setiosflags[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:143:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setbase)[m[Kâ€™
  143 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setbase __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:143:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Setbase[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:178:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>)[m[Kâ€™
  178 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setfill<_CharT> __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:178:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::_Setfill<_CharT>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:208:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision)[m[Kâ€™
  208 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setprecision __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:208:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Setprecision[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:238:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw)[m[Kâ€™
  238 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Setw __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:238:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::_Setw[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:311:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits, class _MoneyT> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_money<_MoneyT>)[m[Kâ€™
  311 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Put_money<_MoneyT> __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:311:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::_Put_money<_MoneyT>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:72[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/iomanip:363:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_time<_CharT>)[m[Kâ€™
  363 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __os, _Put_time<_CharT> __f)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/iomanip:363:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™ is not derived from â€˜[01m[Kstd::_Put_time<_CharT>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/memory:81[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:82[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/shared_ptr.h:66:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Ch, class _Tr, class _Tp, __gnu_cxx::_Lock_policy _Lp> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__shared_ptr<_Tp, _Lp>&)[m[Kâ€™
   66 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_Ch, _Tr>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/shared_ptr.h:66:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::__shared_ptr<_Tp, _Lp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom1, class _Dom2> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Expr, std::_Expr, _Dom1, _Dom2>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::_Expr<_Dom2, typename _Dom2::value_type>&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Expr, std::_Constant, _Dom, typename _Dom::value_type>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const typename _Dom::value_type&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Constant, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const typename _Dom::value_type&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Expr, std::_ValArray, _Dom, typename _Dom::value_type>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const std::_Expr<_Dom1, typename _Dom1::value_type>&, const std::valarray<typename _Dom::value_type>&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/valarray:603[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Dom> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_ValArray, std::_Expr, typename _Dom::value_type, _Dom>, typename std::__fun<std::__shift_left, typename _Dom1::value_type>::result_type> std::operator<<(const std::valarray<typename _Dom::value_type>&, const std::_Expr<_Dom1, typename _Dom1::value_type>&)[m[Kâ€™
  413 |     [01;36m[K_DEFINE_EXPR_BINARY_OPERATOR[m[K(<<, __shift_left)
      |     [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/valarray_after.h:413:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::_Expr<_Dom1, typename _Dom1::value_type>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_ValArray, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__shift_left, _Tp>::result_type> std::operator<<(const std::valarray<_Tp>&, const std::valarray<_Tp>&)[m[Kâ€™
 1193 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(<<, __shift_left)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::valarray<_Tp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_ValArray, std::_Constant, _Tp, _Tp>, typename std::__fun<std::__shift_left, _Tp>::result_type> std::operator<<(const std::valarray<_Tp>&, const typename std::valarray<_Tp>::value_type&)[m[Kâ€™
 1193 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(<<, __shift_left)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::basic_ostream<char>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::valarray<_Tp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:95[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::_Expr<std::__detail::_BinClos<std::__shift_left, std::_Constant, std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__shift_left, _Tp>::result_type> std::operator<<(const typename std::valarray<_Tp>::value_type&, const std::valarray<_Tp>&)[m[Kâ€™
 1193 | [01;36m[K_DEFINE_BINARY_OPERATOR[m[K(<<, __shift_left)
      | [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/valarray:1193:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::valarray<_Tp>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/future:39[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:105[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/thread:322:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::thread::id)[m[Kâ€™
  322 |     [01;36m[Koperator[m[K<<(basic_ostream<_CharT, _Traits>& __out, thread::id __id)
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/thread:322:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kstd::thread::id[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/random:49[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.h:1298:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RandomNumberEngine, long unsigned int __w, class _UIntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::independent_bits_engine<_RandomNumberEngine, __w, _UIntType>&)[m[Kâ€™
 1298 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.h:1298:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::independent_bits_engine<_RandomNumberEngine, __w, _UIntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:877:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::uniform_int_distribution<_IntType>&)[m[Kâ€™
  877 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:877:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::uniform_int_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:936:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::uniform_real_distribution<_IntType>&)[m[Kâ€™
  936 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:936:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::uniform_real_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2133:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::cauchy_distribution<_RealType>&)[m[Kâ€™
 2133 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2133:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::cauchy_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:998:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::bernoulli_distribution&)[m[Kâ€™
  998 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:998:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kcolumn7.std::vector<std::__cxx11::basic_string<char> >::begin()[m[Kâ€™ (type â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™}) to type â€˜[01m[Kconst std::bernoulli_distribution&[m[Kâ€™
   71 |  cout<< *it<<"     "<< [01;36m[Kcolumn7.begin()[m[K <<endl;
      |                        [01;36m[K~~~~~~~~~~~~~^~[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1080:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::geometric_distribution<_IntType>&)[m[Kâ€™
 1080 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1080:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::geometric_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1737:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::exponential_distribution<_RealType>&)[m[Kâ€™
 1737 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1737:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::exponential_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2532:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::weibull_distribution<_RealType>&)[m[Kâ€™
 2532 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2532:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::weibull_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2608:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::extreme_value_distribution<_RealType>&)[m[Kâ€™
 2608 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2608:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::extreme_value_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:154:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::linear_congruential_engine<_UIntType, __a, __c, __m>&)[m[Kâ€™
  154 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:154:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::linear_congruential_engine<_UIntType, __a, __c, __m>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:476:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _UIntType1, long unsigned int __w1, long unsigned int __n1, long unsigned int __m1, long unsigned int __r1, _UIntType1 __a1, long unsigned int __u1, _UIntType1 __d1, long unsigned int __s1, _UIntType1 __b1, long unsigned int __t1, _UIntType1 __c1, long unsigned int __l1, _UIntType1 __f1, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>&)[m[Kâ€™
  476 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:476:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:632:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _UIntType, long unsigned int __w, long unsigned int __s, long unsigned int __r, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::subtract_with_carry_engine<_UIntType, __w, __s, __r>&)[m[Kâ€™
  632 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:632:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::subtract_with_carry_engine<_UIntType, __w, __s, __r>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:702:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RandomNumberEngine, long unsigned int __p, long unsigned int __r, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::discard_block_engine<_RandomNumberEngine, __p, __r>&)[m[Kâ€™
  702 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:702:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::discard_block_engine<_RandomNumberEngine, __p, __r>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:831:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RandomNumberEngine, long unsigned int __k, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::shuffle_order_engine<_RandomNumberEngine, __k>&)[m[Kâ€™
  831 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:831:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::shuffle_order_engine<_RandomNumberEngine, __k>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1195:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::negative_binomial_distribution<_IntType>&)[m[Kâ€™
 1195 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1195:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::negative_binomial_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1406:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::poisson_distribution<_IntType>&)[m[Kâ€™
 1406 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1406:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::poisson_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1673:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::binomial_distribution<_IntType>&)[m[Kâ€™
 1673 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1673:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::binomial_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1904:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType1, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::normal_distribution<_RealType>&)[m[Kâ€™
 1904 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1904:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::normal_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:1973:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::lognormal_distribution<_RealType>&)[m[Kâ€™
 1973 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:1973:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::lognormal_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2046:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::chi_squared_distribution<_RealType>&)[m[Kâ€™
 2046 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2046:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::chi_squared_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2210:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::fisher_f_distribution<_RealType>&)[m[Kâ€™
 2210 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2210:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::fisher_f_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2285:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::student_t_distribution<_RealType>&)[m[Kâ€™
 2285 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2285:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::student_t_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2454:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType1, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::gamma_distribution<_RealType>&)[m[Kâ€™
 2454 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2454:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::gamma_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2745:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _IntType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::discrete_distribution<_IntType>&)[m[Kâ€™
 2745 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2745:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::discrete_distribution<_IntType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:2969:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::piecewise_constant_distribution<_RealType>&)[m[Kâ€™
 2969 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:2969:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::piecewise_constant_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/9/random:51[m[K,
                 from [01m[K/usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:108[m[K,
                 from [01m[KTasks.cpp:10[m[K:
[01m[K/usr/include/c++/9/bits/random.tcc:3177:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _RealType, class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::piecewise_linear_distribution<_RealType>&)[m[Kâ€™
 3177 |     [01;36m[Koperator[m[K<<(std::basic_ostream<_CharT, _Traits>& __os,
      |     [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/random.tcc:3177:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[KTasks.cpp:71:38:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::iterator[m[Kâ€™ {aka â€˜[01m[K__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™} is not derived from â€˜[01m[Kconst std::piecewise_linear_distribution<_RealType>[m[Kâ€™
   71 |  cout<< *it<<"     "<< column7.begin([01;36m[K)[m[K <<endl;
      |                                      [01;36m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:11:30 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1809C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m( string y:column7){[24;32H[K[25;5H    [34m//      cout <<y<<endl;[m[25;32H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<< column7.begin() <<endl;[30;54H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H70,17-24      Bot[29;24H[?25h[?25l[34;95H~@k[29;24H[34;95H   [30;24H[34;106H1[30;24H[?25h[?25l[34;95H~@k[30;24H[34;95H   [30;25H[34;109H8-25[30;25H[?25h[?25l[34;95Hi[30;25H[34;95H [30;25H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H71,18-25      Bot[30;25H[?25h[?25l[34;109H9-26[30;26H[?25h[?25l[34;108H20-27[30;27H[?25h[?25l[34;109H1-28[30;28H[?25h[?25l[34;109H2-29[30;29H[?25h[?25l[34;109H3-30[30;30H[?25h[?25l[34;109H4-31[30;31H[?25h[?25l[34;109H5-32[30;32H[?25h[?25l[34;109H6-33[30;33H[?25h[?25l[34;109H7-34[30;34H[?25h[?25l[34;109H8-35[30;35H[?25h[?25l[34;109H9-36[30;36H[?25h[?25l[34;108H30-37[30;37H[?25h[?25l[34;109H1-38[30;38H[?25h[?25l[34;109H2-39[30;39H[?25h[?25l[34;109H3-40[30;40H[?25h[?25l[34;109H4-41[30;41H[?25h[?25l[34;109H5-42[30;42H[?25h[?25l[34;109H6-43[30;43H[?25h[?25ln[106m()[m[34;109H7-44[30;44H[?25h[?25l[34;109H8-45[30;45H[?25h[?25l[34;109H9-46[30;46H[?25h[?25l()[34;108H40-47[30;47H[?25h[?25l<<endl;[30;53H[K[30;44H[106m()[m[34;108H39-46[30;46H[?25h[?25l[106m<[m<endl;[30;52H[K[30;44H(<[34;109H8-45[30;45H[?25h[?25l<<endl;[30;51H[K[34;109H7-44[30;44H[?25h[?25l<<endl;[30;50H[K[34;109H6-43[30;43H[?25h[?25l<<endl;[30;49H[K[34;109H5-42[30;42H[?25h[?25l<<endl;[30;48H[K[34;109H4-41[30;41H[?25h[?25l<<endl;[30;47H[K[34;109H3-40[30;40H[?25h[?25l<<endl;[30;46H[K[34;109H2-39[30;39H[?25h[?25l<<endl;[30;45H[K[34;109H1-38[30;38H[?25h[?25l<<endl;[30;44H[K[34;109H0-37[30;37H[?25h[?25l<<endl;[30;43H[K[34;108H29-36[30;36H[?25h[?25l<<endl;[30;42H[K[34;109H8-35[30;35H[?25h[?25l<<endl;[30;41H[K[34;109H7-34[30;34H[?25h[?25l<<endl;[30;40H[K[34;109H6-33[30;33H[?25h[?25l<<endl;[30;39H[K[34;109H5-32[30;32H[?25h[?25l<<endl;[30;38H[K[34;109H4-31[30;31H[?25h[?25l<<endl;[30;37H[K[34;109H3-30[30;30H[?25h[?25l<endl;[30;36H[K[34;109H2-29[30;29H[?25h[?25l<endl;[30;35H[K[34;109H1-28[30;28H[?25h[34;1H[K[30;27H[?25l[34;95H^[[30;27H[34;95H  [30;28H[34;105H71,20-27      Bot[30;27H[?25h[?25l[34;95H:[30;27H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1790C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
3277857
Scorsese, Martin     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:12:04 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1790C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m( string y:column7){[24;32H[K[25;5H    [34m//      cout <<y<<endl;[m[25;32H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H71,20-27      Bot[30;27H[?25h[?25l[34;95H~@k[30;27H[34;95H   [30;28H[34;109H1-28[30;28H[?25h[?25l[34;95H~@k[30;28H[34;95H   [30;29H[34;109H2-29[30;29H[?25h[?25l[34;95H~@k[30;29H[34;95H   [30;30H[34;109H3-30[30;30H[?25h[?25l[34;95H~@k[30;30H[34;95H   [30;31H[34;109H4-31[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [30;32H[34;109H5-32[30;32H[?25h[?25l[34;95H~@k[30;32H[34;95H   [30;33H[34;109H6-33[30;33H[?25h[?25l[34;95H~@k[30;33H[34;95H   [30;34H[34;109H7-34[30;34H[?25h[?25l[34;95H~@k[30;34H[34;95H   [30;34H[?25h[?25l[34;95H~@k[30;34H[34;95H   [30;34H[?25h[?25l[34;95H~@k[30;34H[34;95H   [29;34H[34;106H0[29;34H[?25h[?25l[34;95H~@k[29;34H[34;95H   [28;23H[34;105H69,16-23[28;23H[?25h[?25l[34;95H~@k[28;23H[34;95H   [27;34H[34;106H8,27-34[27;34H[?25h[?25l[34;95H~@k[27;34H[34;95H   [26;9H[24;31H[106m{[26;9H}[m[34;106H7,2-9  [26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [26;8H[24;31H{[26;9H}[34;108H1-8[26;8H[?25h[?25l[34;95H~@k[26;8H[34;95H   [25;8H[34;106H6[25;8H[?25h[?25l[34;95H~@k[25;8H[34;95H   [24;8H[34;106H5[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [24;9H[34;108H2-9[24;9H[?25h[?25l[34;95H~@k[24;9H[34;95H   [24;10H[34;108H3-10[24;10H[?25h[?25l[34;95H~@k[24;10H[34;95H   [24;11H[34;108H4-11[24;11H[?25h[?25l[34;95H~@k[24;11H[34;95H   [24;12H[106m([17C)[m[34;108H5-12[24;12H[?25h[?25l[34;95H~@k[24;12H[34;95H   [24;13H([17C)[34;108H6-13[24;13H[?25h[?25l[34;95H~@k[24;13H[34;95H   [24;14H[34;108H7-14[24;14H[?25h[?25l[34;95H~@k[24;14H[34;95H   [24;15H[34;108H8-15[24;15H[?25h[?25l[34;95H~@k[24;15H[34;95H   [24;16H[34;108H9-16[24;16H[?25h[?25l[34;95H~@k[24;16H[34;95H   [24;17H[34;108H10-17[24;17H[?25h[?25l[34;95H~@k[24;17H[34;95H   [24;18H[34;109H1-18[24;18H[?25h[?25l[34;95H~@k[24;18H[34;95H   [24;19H[34;109H2-19[24;19H[?25h[?25l[34;95H~@k[24;19H[34;95H   [24;20H[34;109H3-20[24;20H[?25h[?25l[34;95H~@k[24;20H[34;95H   [24;21H[34;109H4-21[24;21H[?25h[?25l[34;95Hi[24;21H[34;95H [24;21H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H65,14-21      Bot[24;21H[?25h[?25l[34;109H5-22[24;22H[?25h[?25l:column7){[24;31H[K[34;109H4-21[24;21H[?25h[?25l:column7){[24;30H[K[34;109H3-20[24;20H[?25h[?25l:column7){[24;29H[K[34;109H2-19[24;19H[?25h[?25l:column7){[24;28H[K[34;109H1-18[24;18H[?25h[?25l:column7){[24;27H[K[34;109H0-17[24;17H[?25h[?25l:column7){[24;26H[K[34;108H9-16 [24;16H[?25h[?25l:column7){[24;25H[K[34;108H8-15[24;15H[?25h[?25l:column7){[24;24H[K[34;108H7-14[24;14H[?25h[?25l:column7){[24;23H[K[24;12H[106m([8C)[m[34;108H6-13[24;13H[?25h[?25li:column[106m7[m){[24;12H([8C7[34;108H7-14[24;14H[?25h[?25ln:column7){[34;108H8-15[24;15H[?25h[?25l[32mint[m:column7){[34;108H9-16[24;16H[?25h[?25l :column7){[34;108H10-17[24;17H[?25h[?25li:column7){[34;109H1-18[24;18H[?25h[?25l :column7){[34;109H2-19[24;19H[?25h[?25l:column7){[24;28H[K[34;109H1-18[24;18H[?25h[?25l=:column7){[34;109H2-19[24;19H[?25h[?25l[31m0[m:column7){[34;109H3-20[24;20H[?25h[?25l[34;109H4-21[24;21H[?25h[?25licolumn7){[34;109H5-22[24;22H[?25h[?25l<column7){[34;109H6-23[24;23H[?25h[?25l=column7){[34;109H7-24[24;24H[?25h[?25licolumn7){[34;109H8-25[24;25H[?25h[?25ltcolumn7){[34;109H9-26[24;26H[?25h[?25lcolumn7){[24;34H[K[34;109H8-25[24;25H[?25h[?25lcolumn7){[24;33H[K[34;109H7-24[24;24H[?25h[?25ltcolumn7){[34;109H8-25[24;25H[?25h[?25licolumn7){[34;109H9-26[24;26H[?25h[?25ltcolumn7){[34;108H20-27[24;27H[?25h[?25llcolumn7){[34;109H1-28[24;28H[?25h[?25lecolumn7){[34;109H2-29[24;29H[?25h[?25l.column7){[34;109H3-30[24;30H[?25h[?25lscolumn7){[34;109H4-31[24;31H[?25h[?25licolumn7){[34;109H5-32[24;32H[?25h[?25lzcolumn7){[34;109H6-33[24;33H[?25h[?25lecolumn7){[34;109H7-34[24;34H[?25h[?25l(column7){[24;34H[106m([7C)[m[34;109H8-35[24;35H[?25h[?25l)column[106m7[m){[24;35H[106m)[mcolumn7[34;109H9-36[24;36H[?25h[?25l;column7){[24;34H()[34;108H30-37[24;37H[?25h[?25l[34;109H1-38[24;38H[?25h[?25l[34;109H2-39[24;39H[?25h[?25l[34;109H3-40[24;40H[?25h[?25l[34;109H4-41[24;41H[?25h[?25l[34;109H5-42[24;42H[?25h[?25l[34;109H6-43[24;43H[?25h[?25l[24;12H[106m([31C)[m[34;109H7-44[24;44H[?25h[?25l)[106m{[m[24;45H[K[24;43H[106m)[m{[34;109H6-43[24;43H[?25h[?25l)[106m{[m[24;44H[K[24;42H[106m)[m{[34;109H5-42[24;42H[?25h[?25l)[106m{[m[24;43H[K[24;41H[106m)[m{[34;109H4-41[24;41H[?25h[?25l)[106m{[m[24;42H[K[24;40H[106m)[m{[34;109H3-40[24;40H[?25h[?25l)[106m{[m[24;41H[K[24;39H[106m)[m{[34;109H2-39[24;39H[?25h[?25l)[106m{[m[24;40H[K[24;38H[106m)[m{[34;109H1-38[24;38H[?25h[?25l)[106m{[m[24;39H[K[24;37H[106m)[m{[34;109H0-37[24;37H[?25h[?25l[106mi[m){i[106m)[m[34;109H1-38[24;38H[?25h[?25l[106m+[m){+[106m)[m[34;109H2-39[24;39H[?25h[?25l[106m+[m){+[106m)[m[34;109H3-40[24;40H[?25h[?25l[24;12H([27C)[34;106H6,20-32[25;32H[?25h[?25l[34;108H19-31[25;31H[?25h[?25l[34;109H8-30[25;30H[?25h[?25l[34;109H7-29[25;29H[?25h[?25l[34;109H6-28[25;28H[?25h[?25l[34;109H5-27[25;27H[?25h[?25l[34;109H4-26[25;26H[?25h[?25l[34;109H3-25[25;25H[?25h[?25l[34;109H2-24[25;24H[?25h[?25l[34;109H1-23[25;23H[?25h[?25l[34;109H0-22[25;22H[?25h[?25l[34;108H9-21 [25;21H[?25h[?25l[34;108H8-20[25;20H[?25h[?25l[34;108H7-19[25;19H[?25h[?25l[34;108H6-18[25;18H[?25h[?25l[34;108H5-17[25;17H[?25h[?25l[34;108H4-11[25;11H[?25h[?25l[34;108H3-10[25;10H[?25h[?25l[34;108H2-9 [25;9H[?25h[?25l[34;108H3-10[25;10H[?25h[?25l[34;108H4-11[25;11H[?25h[?25l/       cout <<y<<endl;[34;108H3-10[25;10H[?25h[?25l [34;108H2-9 [25;9H[?25h[?25l[34;108H3-17[25;17H[?25h[?25l[34;108H4-18[25;18H[?25h[?25l[34;108H5-19[25;19H[?25h[?25l[34;108H6-20[25;20H[?25h[?25l[34;108H7-21[25;21H[?25h[?25l[34;108H8-22[25;22H[?25h[?25l[34;108H9-23[25;23H[?25h[?25l[34;108H10-24[25;24H[?25h[?25l[34;109H1-25[25;25H[?25h[?25l<<endl;[25;31H[K[34;109H0-24[25;24H[?25h[?25lc<<endl;[34;109H1-25[25;25H[?25h[?25lo<<endl;[34;109H2-26[25;26H[?25h[?25ll<<endl;[34;109H3-27[25;27H[?25h[?25lu<<endl;[34;109H4-28[25;28H[?25h[?25lm<<endl;[34;109H5-29[25;29H[?25h[?25ln<<endl;[34;109H6-30[25;30H[?25h[?25l8<<endl;[34;109H7-31[25;31H[?25h[?25l[<<endl[97m[101m;[26;9H}[27;59H;[28;23H;[29;91H;[30;34H;

}[m[34;109H8-32[25;32H[?25h[?25l]<<endl;[26;9H}[27;59H;[28;23H;[29;91H;[30;34H;

}[25;31H[106m[][m[34;109H9-33[25;33H[?25h[?25l[34;109H8-32[25;32H[?25h[?25l[106mi[m]<<endl;[25;32Hi[106m][m[34;109H9-33[25;33H[?25h[?25l[34;108H20-34[25;34H[?25h[34;1H[K[25;33H[?25l[34;95H^[[25;33H[34;95H  [25;34H[34;105H66,19-33      Bot[25;33H[?25h[?25l[34;95H:[25;33H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1807C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:65:11:[m[K [01;31m[Kerror: [m[Kinitializer in range-based â€˜[01m[Kfor[m[Kâ€™ loop
   65 |  for(int i[01;31m[K=[m[K0:i<=title.size();i++){
      |           [01;31m[K^[m[K
[01m[KTasks.cpp:65:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ktitle[m[Kâ€™ was not declared in this scope
   65 |  for(int i=0:i<=[01;31m[Ktitle[m[K.size();i++){
      |                 [01;31m[K^~~~~[m[K
[01m[KTasks.cpp:65:29:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
   65 |  for[34m[K([m[Kint i=0:i<=title.size()[01;31m[K;[m[Ki++){
      |     [34m[K~[m[K                       [01;31m[K^[m[K
      |                             [32m[K)[m[K
[01m[KTasks.cpp:65:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ki[m[Kâ€™ was not declared in this scope
   65 |  for(int i=0:i<=title.size();[01;31m[Ki[m[K++){
      |                              [01;31m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:14:16 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1807C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m([32mint[m i=[31m0[m:i<=title.size();i++){[24;42H[K[25;5H            cout <<column8[106m[[mi[106m][m<<endl;[25;41H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H66,19-33      Bot[25;33H[?25h[?25l[34;95H~@k[25;33H[34;95H   [24;33H[25;31H[i][34;106H5,26[24;33H[?25h[?25l[34;95H~@k[24;33H[34;95H   [24;34H[106m()[m[34;109H7-34[24;34H[?25h[?25l[34;95H~@k[24;34H[34;95H   [23;34H[24;34H()[34;106H4[23;34H[?25h[?25l[34;95H~@k[23;34H[34;95H   [24;34H[106m()[m[34;106H5[24;34H[?25h[?25l[34;95H~@k[24;34H[34;95H   [25;34H[24;34H()[34;106H6,20[25;34H[?25h[?25l[34;95H~@k[25;34H[34;95H   [26;9H[24;41H[106m{[26;9H}[m[34;106H7,2-9  [26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [26;8H[24;41H{[26;9H}[34;108H1-8[26;8H[?25h[?25l[34;95H~@k[26;8H[34;95H   [25;8H[34;106H6[25;8H[?25h[?25l[34;95H~@k[25;8H[34;95H   [24;8H[34;106H5[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [24;9H[34;108H2-9[24;9H[?25h[?25l[34;95H~@k[24;9H[34;95H   [24;10H[34;108H3-10[24;10H[?25h[?25l[34;95H~@k[24;10H[34;95H   [24;11H[34;108H4-11[24;11H[?25h[?25l[34;95H~@k[24;11H[34;95H   [24;12H[106m([27C)[m[34;108H5-12[24;12H[?25h[?25l[34;95H~@k[24;12H[34;95H   [24;13H([27C)[34;108H6-13[24;13H[?25h[?25l[34;95H~@k[24;13H[34;95H   [24;14H[34;108H7-14[24;14H[?25h[?25l[34;95H~@k[24;14H[34;95H   [24;15H[34;108H8-15[24;15H[?25h[?25l[34;95H~@k[24;15H[34;95H   [24;16H[34;108H9-16[24;16H[?25h[?25l[34;95H~@k[24;16H[34;95H   [24;17H[34;108H10-17[24;17H[?25h[?25l[34;95H~@k[24;17H[34;95H   [24;18H[34;109H1-18[24;18H[?25h[?25l[34;95H~@k[24;18H[34;95H   [25;18H[34;106H6,4-18 [25;18H[?25h[?25l[34;95H~@k[25;18H[34;95H   [24;18H[34;106H5,11-18[24;18H[?25h[?25l[34;95H~@k[24;18H[34;95H   [23;18H[34;106H4[23;18H[?25h[?25l[34;95H^[[23;18H[34;95H  [23;18H[34;95H^[[23;18H[34;95H  [23;18H[?25h[?25l[34;95H:[23;18H[34;1H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1807C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:14:48 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1807C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m([32mint[m i=[31m0[m:i<=title.size();i++){[24;42H[K[25;5H            cout <<column8[i]<<endl;[25;41H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H64,11-18      Bot[23;18H[?25h[?25l[34;95H~@k[23;18H[34;95H   [22;1H[34;106H3,0-1  [22;1H[?25h[?25l[34;95H~@k[22;1H[34;95H   [21;17H[34;106H2,3-17[21;17H[?25h[?25l[34;95H~@k[21;17H[34;95H   [22;1H[34;106H3,0-1 [22;1H[?25h[?25l[34;95H~@k[22;1H[34;95H   [23;18H[34;106H4,11-18[23;18H[?25h[?25l[34;95H~@k[23;18H[34;95H   [24;18H[34;106H5[24;18H[?25h[?25l[34;95H~@k[24;18H[34;95H   [24;19H[34;109H2-19[24;19H[?25h[?25l[34;95H~@k[24;19H[34;95H   [24;20H[34;109H3-20[24;20H[?25h[?25l[34;95H~@k[24;20H[34;95H   [24;19H[34;109H2-19[24;19H[?25h[?25l[34;95H~@k[24;19H[34;95H   [24;20H[34;109H3-20[24;20H[?25h[?25l[34;95H~@k[24;20H[34;95H   [24;21H[34;109H4-21[24;21H[?25h[?25l[34;95H~@k[24;21H[34;95H   [24;22H[34;109H5-22[24;22H[?25h[?25l[34;95H~@k[24;22H[34;95H   [24;23H[34;109H6-23[24;23H[?25h[?25l[34;95H~@k[24;23H[34;95H   [24;24H[34;109H7-24[24;24H[?25h[?25l[34;95H~@k[24;24H[34;95H   [24;25H[34;109H8-25[24;25H[?25h[?25l[34;95H~@k[24;25H[34;95H   [24;26H[34;109H9-26[24;26H[?25h[?25l[34;95H~@k[24;26H[34;95H   [24;27H[34;108H20-27[24;27H[?25h[?25l[34;95H~@k[24;27H[34;95H   [24;28H[34;109H1-28[24;28H[?25h[?25l[34;95H~@k[24;28H[34;95H   [24;29H[34;109H2-29[24;29H[?25h[?25l[34;95H~@k[24;29H[34;95H   [24;28H[34;109H1-28[24;28H[?25h[?25l[34;95H~@k[24;28H[34;95H   [24;27H[34;109H0-27[24;27H[?25h[?25l[34;95H~@k[24;27H[34;95H   [24;26H[34;108H19-26[24;26H[?25h[?25l[34;95H~@k[24;26H[34;95H   [24;27H[34;108H20-27[24;27H[?25h[?25l[34;95Hi[24;27H[34;95H [24;27H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H65,20-27      Bot[24;27H[?25h[?25l[34;109H1-28[24;28H[?25h[?25l[34;109H2-29[24;29H[?25h[?25l.size();i++){[24;41H[K[34;109H1-28[24;28H[?25h[?25l.size();i++){[24;40H[K[34;109H0-27[24;27H[?25h[?25l.size();i++){[24;39H[K[34;108H19-26[24;26H[?25h[?25l.size();i++){[24;38H[K[34;109H8-25[24;25H[?25h[?25l.size();i++){[24;37H[K[34;109H7-24[24;24H[?25h[?25lc.size();i++){[34;109H8-25[24;25H[?25h[?25lo.size();i++){[34;109H9-26[24;26H[?25h[?25ll.size();i++){[34;108H20-27[24;27H[?25h[?25lu.size();i++){[34;109H1-28[24;28H[?25h[?25lm.size();i++){[34;109H2-29[24;29H[?25h[?25lu.size();i++){[34;109H3-30[24;30H[?25h[?25ln.size();i++){[34;109H4-31[24;31H[?25h[?25lq.size();i++){[34;109H5-32[24;32H[?25h[?25l.size();i++){[24;44H[K[34;109H4-31[24;31H[?25h[?25l3.size();i++){[34;109H5-32[24;32H[?25h[34;1H[K[24;31H[?25l[34;95H^[[24;31H[34;95H  [24;32H[34;105H65,24-31      Bot[24;31H[?25h[?25l[34;95H:[24;31H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1810C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:65:11:[m[K [01;31m[Kerror: [m[Kinitializer in range-based â€˜[01m[Kfor[m[Kâ€™ loop
   65 |  for(int i[01;31m[K=[m[K0:i<=columun3.size();i++){
      |           [01;31m[K^[m[K
[01m[KTasks.cpp:65:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumun3[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kcolumn3[m[Kâ€™?
   65 |  for(int i=0:i<=[01;31m[Kcolumun3[m[K.size();i++){
      |                 [01;31m[K^~~~~~~~[m[K
      |                 [32m[Kcolumn3[m[K
[01m[KTasks.cpp:65:32:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
   65 |  for[34m[K([m[Kint i=0:i<=columun3.size()[01;31m[K;[m[Ki++){
      |     [34m[K~[m[K                          [01;31m[K^[m[K
      |                                [32m[K)[m[K
[01m[KTasks.cpp:65:33:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ki[m[Kâ€™ was not declared in this scope
   65 |  for(int i=0:i<=columun3.size();[01;31m[Ki[m[K++){
      |                                 [01;31m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:15:35 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1810C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m([32mint[m i=[31m0[m:i<=columun3.size();i++){[24;45H[K[25;5H            cout <<column8[i]<<endl;[25;41H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H65,24-31      Bot[24;31H[?25h[?25l[34;95H~@k[24;31H[34;95H   [24;30H[34;109H3-30[24;30H[?25h[?25l[34;95H~@k[24;30H[34;95H   [24;29H[34;109H2-29[24;29H[?25h[?25l[34;95H~@k[24;29H[34;95H   [24;28H[34;109H1-28[24;28H[?25h[?25l[34;95H~@k[24;28H[34;95H   [24;29H[34;109H2-29[24;29H[?25h[?25l[34;95H~@k[24;29H[34;95H   [24;30H[34;109H3-30[24;30H[?25h[?25l[34;95H~@k[24;30H[34;95H   [24;29H[34;109H2-29[24;29H[?25h[?25l[34;95H^[[24;29H[34;95H  [24;29H[34;95H^[[24;29H[34;95H  [24;29H[?25h[?25l[34;95Hi[24;29H[34;95H [24;29H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H65,22-29      Bot[24;29H[?25h[?25l[34;109H3-30[24;30H[?25h[?25ln3.size();i++){[24;44H[K[34;109H2-29[24;29H[?25h[34;1H[K[24;28H[?25l[34;95H^[[24;28H[34;95H  [24;29H[34;105H65,21-28      Bot[24;28H[?25h[?25l[34;95H:[24;28H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1809C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:65:11:[m[K [01;31m[Kerror: [m[Kinitializer in range-based â€˜[01m[Kfor[m[Kâ€™ loop
   65 |  for(int i[01;31m[K=[m[K0:i<=column3.size();i++){
      |           [01;31m[K^[m[K
[01m[KTasks.cpp:65:31:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K)[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
   65 |  for[34m[K([m[Kint i=0:i<=column3.size()[01;31m[K;[m[Ki++){
      |     [34m[K~[m[K                         [01;31m[K^[m[K
      |                               [32m[K)[m[K
[01m[KTasks.cpp:65:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ki[m[Kâ€™ was not declared in this scope
   65 |  for(int i=0:i<=column3.size();[01;31m[Ki[m[K++){
      |                                [01;31m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:15:52 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1809C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m([32mint[m i=[31m0[m:i<=column3.size();i++){[24;45H[K[25;5H            cout <<column8[i]<<endl;[25;41H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H65,21-28      Bot[24;28H[?25h[?25l[34;95H~@k[24;28H[34;95H   [23;28H[106m()[m[34;106H4[23;28H[?25h[?25l[34;95H~@k[23;28H[34;95H   [22;1H[23;27H()[34;106H3,0-1  [22;1H[?25h[?25l[34;95H~@k[22;1H[34;95H   [21;17H[34;106H2,3-17[21;17H[?25h[?25l[34;95H~@k[21;17H[34;95H   [22;1H[34;106H3,0-1 [22;1H[?25h[?25l[34;95H~@k[22;1H[34;95H   [23;28H[106m()[m[34;106H4,21-28[23;28H[?25h[?25l[34;95H~@k[23;28H[34;95H   [24;28H[23;27H()[34;106H5[24;28H[?25h[?25l[34;95H~@k[24;28H[34;95H   [24;27H[34;109H0-27[24;27H[?25h[?25l[34;95H~@k[24;27H[34;95H   [24;26H[34;108H19-26[24;26H[?25h[?25l[34;95H~@k[24;26H[34;95H   [24;25H[34;109H8-25[24;25H[?25h[?25l[34;95H~@k[24;25H[34;95H   [24;24H[34;109H7-24[24;24H[?25h[?25l[34;95Hi[24;24H[34;95H [24;24H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H65,17-24      Bot[24;24H[?25h[?25l[34;109H6-23[24;23H[?25h[?25l[34;109H5-22[24;22H[?25h[?25l[34;109H4-21[24;21H[?25h[?25l0i<=column3.size();i++){[24;43H[K[34;109H3-20[24;20H[?25h[?25l[31m0[m;i<=column3.size();i++){[34;109H4-21[24;21H[?25h[34;1H[K[24;20H[?25l[34;95H^[[24;20H[34;95H  [24;21H[34;105H65,13-20      Bot[24;20H[?25h[?25l[34;95H:[24;20H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 74L, 1809C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-88
-87
-87
-87
-87
-87
-87
-87
-87
-87
-87
-87
-87
-87
-87
-86
-86
-86
-86
-86
-86
-86
-86
-86
-86
-86
-86
-86
-85
-85
-85
-85
-85
-85
-85
-85
-85
-85
-85
-85
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-84
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-83
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-82
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-81
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-80
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-79
-78
-78
-78
-78
-78
-78
-78
-78
-78
-78
-78
-78
-78
-78
-78
-78
-77
-77
-77
-77
-77
-77
-77
-77
-77
-77
-77
-77
-77
-77
-77
-77
-76
-76
-76
-76
-76
-76
-76
-76
-76
-76
-76
-76
-76
-76
-76
-76
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-75
-74
-74
-74
-74
-74
-74
-74
-74
-74
-74
-74
-74
-74
-74
-74
-74
-74
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-73
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-72
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-71
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-70
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-69
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-68
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-67
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-66
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-65
-64
-64
-64
-64
-64
-64
-64
-64
-64
-64
-64
-64
-64
-64
-64
-64
-63
-63
-63
-63
-63
-63
-63
-63
-63
-63
-63
-63
-63
-63
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-62
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-61
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-60
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-59
-58
-58
-58
-58
-58
-58
-58
-58
-58
-58
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-57
-56
-56
-56
-56
-56
-56
-56
-56
-56
-56
-55
-55
-55
-55
-55
-55
-55
-55
-55
-55
-55
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-54
-53
-53
-53
-53
-53
-53
-53
-53
-53
-53
-53
-53
-53
-53
-53
-52
-52
-52
-52
-52
-52
-52
-52
-52
-52
-52
-52
-52
-52
-52
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-51
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-50
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-49
-48
-48
-48
-48
-48
-48
-48
-48
-48
-48
-48
-48
-48
-48
-48
-48
-47
-47
-47
-47
-47
-47
-47
-47
-47
-47
-47
-47
-47
-47
-46
-46
-46
-46
-46
-46
-46
-46
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-45
-44
-44
-44
-44
-44
-44
-44
-44
-44
-44
-44
-44
-44
-44
-44
-44
-44
-43
-43
-43
-43
-43
-43
-43
-43
-43
-43
-43
-43
-43
-42
-42
-42
-42
-42
-42
-42
-42
-42
-42
-42
-42
-42
-42
-42
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-41
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-40
-39
-39
-39
-39
-39
-39
-39
-39
-39
-39
-39
-39
-39
-39
-39
-39
-38
-38
-38
-38
-38
-38
-38
-38
-38
-38
-37
-37
-37
-37
-37
-37
-37
-37
-37
-37
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-36
-35
-35
-35
-35
-35
-35
-35
-35
-35
-35
-35
-35
-35
-35
-35
-35
-34
-34
-34
-34
-34
-34
-34
-34
-34
-34
-34
-34
-34
-34
-34
-33
-33
-33
-33
-33
-33
-33
-33
-33
-33
-33
-33
-33
-33
-33
-33
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-32
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-31
-30
-30
-30
-30
-30
-30
-30
-30
-30
-30
-30
-30
-30
-30
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-29
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-28
-27
-27
-27
-27
-27
-27
-27
-27
-27
-27
-27
-27
-27
-27
-27
-27
-27
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-26
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-25
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-24
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-23
-22
-22
-22
-22
-22
-22
-22
-22
-22
-22
-22
-22
-22
-22
-21
-21
-21
-21
-21
-21
-21
-21
-21
-21
-21
-21
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-20
-19
-19
-19
-19
-19
-19
-19
-19
-19
-19
-19
-19
-19
-19
-19
-18
-18
-18
-18
-18
-18
-18
-18
-18
-18
-18
-18
-17
-17
-17
-17
-17
-17
-17
-17
-17
-17
-17
-17
-17
-17
-17
-17
-16
-16
-16
-16
-16
-16
-16
-16
-16
-16
-16
-16
-16
-16
-15
-15
-15
-15
-15
-15
-15
-15
-15
-15
-15
-15
-14
-14
-14
-14
-14
-14
-14
-14
-14
-14
-14
-14
-14
-14
-14
-13
-13
-13
-13
-13
-13
-13
-13
-13
-13
-13
-13
-13
-12
-12
-12
-12
-12
-12
-12
-12
-12
-12
-12
-12
-12
-12
-12
-12
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-11
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-10
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-9
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-8
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-7
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-6
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-5
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-4
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-3
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-2
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
-1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
3277857
Scorsese, Martin     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ Wq[K[Kg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:16:08 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 74L, 1809C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;17H}[2;25H[38;5;130melse[m{column2.push_back([31m0[m);}[4;25Hgetline(infile, title,[31m';'[m);[5;25Hcolumn3.push_back(title);[6;25Hgetline(infile, subject,[31m';'[m);[7;25Hcolumn4.push_back(subject);[8;25Hgetline(infile, actor,[31m';'[m);[9;25Hcolumn5.push_back(actor);[10;25Hgetline(infile, actress,[31m';'[m);[11;25Hcolumn6.push_back(actress);[12;25Hgetline(infile, director,[31m';'[m);
               [9Ccolumn7.push_back(director);
                        getline(infile,popularity,[31m';'[m);[15;11H              [38;5;130mif[m(!popularity.empty()){[15;49H[K[16;10H               column8.push_back(-[31m1[m*stoi(popularity));}[17;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[18;10H               getline(infile, awards,[31m';'[m);[19;9H                getline(infile, image,[35m'\n'[m);
                        column10.push_back(image);[21;14H   }[21;18H[K[22;7H[K[23;9Hsort(column8.begin(), column8.end());
        [38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[24;45H[K[25;5H            cout <<column8[i]<<endl;[25;41H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H65,13-20      Bot[24;20H[?25h[?25l[34;95H~@k[24;20H[34;95H   [23;20H[34;106H4[23;20H[?25h[?25l[34;95H~@k[23;20H[34;95H   [24;20H[34;106H5[24;20H[?25h[?25l[34;95H~@k[24;20H[34;95H   [25;20H[34;106H6,6-20 [25;20H[?25h[?25l[34;95H~@k[25;20H[34;95H   [25;21H[34;108H7-21[25;21H[?25h[?25l[34;95H~@k[25;21H[34;95H   [25;22H[34;108H8-22[25;22H[?25h[?25l[34;95H~@k[25;22H[34;95H   [25;23H[34;108H9-23[25;23H[?25h[?25l[34;95H~@k[25;23H[34;95H   [25;24H[34;108H10-24[25;24H[?25h[?25l[34;95H-[25;24H[34;95H [24;9H[34;106H5,2-9  [24;9H[?25h[?25l[34;95H1[24;9H[?25h[?25l[34;96H*[24;9H[34;1H/\<for\> [34;10H[K[34;1H[31msearch hit BOTTOM, continuing at TOP[24;9H[m[34;105H65,2-9[8CBot[34;105H[K[34;105H65,2-9[8CBot[24;9H[?25h[?25l[34;95Hi[24;9H[34;95H [24;9H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H65,2-9[8CBot[24;9H[?25h[?25l[34;106H6[25;9H[?25h[?25l[34;108H3-17[25;17H[?25h[?25l[34;108H4-18[25;18H[?25h[?25l[34;108H5-19[25;19H[?25h[?25l[34;108H6-20[25;20H[?25h[?25l[34;108H7-21[25;21H[?25h[?25l[34;108H8-22[25;22H[?25h[?25l[34;108H9-23[25;23H[?25h[?25l[34;108H10-24[25;24H[?25h[?25l-column8[i]<<endl;[34;109H1-25[25;25H[?25h[?25l1column8[i]<<endl;[34;109H2-26[25;26H[?25h[?25l[31m1[m*column8[i]<<endl;[34;109H3-27[25;27H[?25h[?25l[34;106H5,20[24;27H[?25h[?25l[23;27H[106m()[m[34;106H4[23;27H[?25h[?25l[34;109H1-28[23;28H[?25h[?25l[34;109H2-29[23;29H[?25h[?25l()[34;109H3-30[23;30H[?25h[?25l[34;109H4-31[23;31H[?25h[?25l[34;109H5-32[23;32H[?25h[?25l[34;109H6-33[23;33H[?25h[?25l[34;109H7-34[23;34H[?25h[?25l[34;109H8-35[23;35H[?25h[?25l[34;109H9-36[23;36H[?25h[?25l[34;108H30-37[23;37H[?25h[?25l[34;109H1-38[23;38H[?25h[?25l[34;109H2-39[23;39H[?25h[?25l[34;109H3-40[23;40H[?25h[?25l[34;109H4-41[23;41H[?25h[?25ld[106m()[m[34;109H5-42[23;42H[?25h[?25l[34;109H6-43[23;43H[?25h[?25l[23;13H[106m([m[28C()[106m)[m[34;109H7-44[23;44H[?25h[?25l[34;109H8-45[23;45H[?25h[?25l[23;13H([30C)[34;109H9-46[23;46H[?25h[?25l[24;33r[24;1H[L[1;34r[34;105H[K[34;105H65,2-9[8C97%[24;9H[?25h[?25lv[34;108H3-10[24;10H[?25h[?25le[34;108H4-11[24;11H[?25h[?25lc[34;108H5-12[24;12H[?25h[?25lt[34;108H6-13[24;13H[?25h[?25lo[34;108H7-14[24;14H[?25h[?25lr[34;108H8-15[24;15H[?25h[?25l[34;106H6[25;15H[?25h[?25l[34;106H7,2-9 [26;9H[?25h[?25l[34;106H6,8-15[25;15H[?25h[?25l[34;106H5[24;15H[?25h[?25l[34;108H9-16[24;16H[?25h[?25l[34;108H8-15[24;15H[?25h[?25l,[34;108H9-16[24;16H[?25h[?25l.[34;108H10-17[24;17H[?25h[?25l[24;16H[K[34;108H9-16 [24;16H[?25h[?25l[24;15H[K[34;108H8-15[24;15H[?25h[?25l<[34;108H9-16[24;16H[?25h[?25l.[34;108H10-17[24;17H[?25h[?25l[24;16H[K[34;108H9-16 [24;16H[?25h[?25l>[34;108H10-17[24;17H[?25h[?25l[34;108H9-16 [24;16H[?25h[?25ls>[34;108H10-17[24;17H[?25h[?25lt>[34;109H1-18[24;18H[?25h[?25lr>[34;109H2-19[24;19H[?25h[?25li>[34;109H3-20[24;20H[?25h[?25ln>[34;109H4-21[24;21H[?25h[?25lg>[34;109H5-22[24;22H[?25h[?25l[34;109H6-23[24;23H[?25h[?25l[34;109H7-24[24;24H[?25h[?25la[34;109H8-25[24;25H[?25h[?25lc[34;109H9-26[24;26H[?25h[?25lt[34;108H20-27[24;27H[?25h[?25li[34;109H1-28[24;28H[?25h[?25lo[34;109H2-29[24;29H[?25h[?25ln[34;109H3-30[24;30H[?25h[?25l,[34;109H4-31[24;31H[?25h[?25l[34;109H5-32[24;32H[?25h[?25lc[34;109H6-33[24;33H[?25h[?25lo[34;109H7-34[24;34H[?25h[?25lm[34;109H8-35[24;35H[?25h[?25le[34;109H9-36[24;36H[?25h[?25ld[34;108H30-37[24;37H[?25h[?25ly[34;109H1-38[24;38H[?25h[?25l;[34;109H2-39[24;39H[?25h[?25l[34;106H6[25;39H[?25h[?25l[34;106H7,25[26;39H[?25h[?25l[34;109H6-40[26;40H[?25h[?25l[34;109H7-41[26;41H[?25h[?25l[34;109H8-42[26;42H[?25h[?25l[34;109H9-43[26;43H[?25h[?25l[34;108H30-44[26;44H[?25h[?25l[27;33r[27;1H[L[1;34r[34;105H[K[34;105H68,3-17[7C95%[27;17H[?25h[?25li[34;108H4-18[27;18H[?25h[?25l[38;5;130mif[m[34;108H5-19[27;19H[?25h[?25l([34;108H6-20[27;20H[?25h[?25l)[106m()[m[34;108H7-21[27;21H[?25h[?25l[34;108H6-20[27;20H[?25h[?25l[106mc[m)c[106m)[m[34;108H7-21[27;21H[?25h[?25l[106mo[m)o[106m)[m[34;108H8-22[27;22H[?25h[?25l[106ml[m)l[106m)[m[34;108H9-23[27;23H[?25h[?25l[106mu[m)u[106m)[m[34;108H10-24[27;24H[?25h[?25l[106mm[m)m[106m)[m[34;109H1-25[27;25H[?25h[?25l[106mn[m)n[106m)[m[34;109H2-26[27;26H[?25h[?25l)[27;26H[K[27;25H[106m)[m[34;109H1-25[27;25H[?25h[?25l)[27;25H[K[27;24H[106m)[m[34;109H0-24[27;24H[?25h[?25l[106mm[m)m[106m)[m[34;109H1-25[27;25H[?25h[?25l[106mn[m)n[106m)[m[34;109H2-26[27;26H[?25h[?25l)[27;26H[K[27;25H[106m)[m[34;109H1-25[27;25H[?25h[?25l)[27;25H[K[27;24H[106m)[m[34;109H0-24[27;24H[?25h[?25l)[27;24H[K[27;23H[106m)[m[34;108H9-23 [27;23H[?25h[?25l)[27;23H[K[27;22H[106m)[m[34;108H8-22[27;22H[?25h[?25l)[27;22H[K[27;21H[106m)[m[34;108H7-21[27;21H[?25h[?25l)[27;21H[K[27;20H[106m)[m[34;108H6-20[27;20H[?25h[?25l[97m[106m)[m[27;20H[K[27;19H[97m[101m)[m[34;108H5-19[27;19H[?25h[?25li[97m[101m)[m[27;19H[K[34;108H4-18[27;18H[?25h[?25l[97m[101m)[m[27;18H[K[34;108H3-17[27;17H[?25h[?25l[34;108H4-18[27;18H[?25h[?25l[27;17H[K[34;108H3-17[27;17H[?25h[?25l[34;106H7[26;17H[?25h[?25l[34;108H4-18[26;18H[?25h[?25l[34;108H5-19[26;19H[?25h[?25l[34;108H6-20[26;20H[?25h[?25l[34;108H7-21[26;21H[?25h[?25l[34;108H8-22[26;22H[?25h[?25l[34;108H9-23[26;23H[?25h[?25l[34;108H10-24[26;24H[?25h[?25l[34;109H1-25[26;25H[?25h[?25l[34;109H2-26[26;26H[?25h[?25l[34;109H3-27[26;27H[?25h[?25l[34;109H4-28[26;28H[?25h[?25l[34;109H5-29[26;29H[?25h[?25l[34;109H6-30[26;30H[?25h[?25l[34;109H7-31[26;31H[?25h[?25l[34;109H8-32[26;32H[?25h[?25l[34;109H9-33[26;33H[?25h[?25l8[106m[[mi[106m][m[34;108H20-34[26;34H[?25h[?25l[34;109H1-35[26;35H[?25h[?25l[34;109H2-36[26;36H[?25h[?25l[34;109H3-37[26;37H[?25h[?25l[i][34;109H4-38[26;38H[?25h[?25l[34;109H5-39[26;39H[?25h[?25l[31m"endl;[m[34;109H6-40[26;40H[?25h[?25l[31m"[mendl;[34;109H7-41[26;41H[?25h[?25l[34;109H6-40[26;40H[?25h[?25l[31m "[mendl;[34;109H7-41[26;41H[?25h[?25l[34;109H8-42[26;42H[?25h[?25l<endl;[34;109H9-43[26;43H[?25h[?25l<endl;[34;108H30-44[26;44H[?25h[?25lcendl;[34;109H1-45[26;45H[?25h[?25loendl;[34;109H2-46[26;46H[?25h[?25llendl;[34;109H3-47[26;47H[?25h[?25luendl;[34;109H4-48[26;48H[?25h[?25lmendl;[34;109H5-49[26;49H[?25h[?25lnendl;[34;109H6-50[26;50H[?25h[?25l4endl;[34;109H7-51[26;51H[?25h[?25l.endl;[34;109H8-52[26;52H[?25h[?25lendl;[26;56H[K[34;109H7-51[26;51H[?25h[?25l[endl[97m[101m;[28;9H}[29;59H;[30;23H;[31;91H;[32;34H;[m[34;109H8-52[26;52H[?25h[?25l]endl;[28;9H}[29;59H;[30;23H;[31;91H;[32;34H;[26;51H[106m[][m[34;109H9-53[26;53H[?25h[?25l[34;109H8-52[26;52H[?25h[?25l[106mi[m]endl;[26;52Hi[106m][m[34;109H9-53[26;53H[?25h[?25l[34;108H40-54[26;54H[?25h[?25l[i][34;109H1-55[26;55H[?25h[?25l[34;109H2-56[26;56H[?25h[?25l[34;109H1-55[26;55H[?25h[?25l[106m[[mi[106m][m[34;109H0-54[26;54H[?25h[?25l<endl;[26;51H[i][34;109H1-55[26;55H[?25h[?25l<endl;[34;109H2-56[26;56H[?25h[34;1H[K[26;55H[?25l[34;95H^[[26;55H[34;95H  [26;56H[34;105H67,41-55      95%[26;55H[?25h[?25l[34;95H:[26;55H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 76L, 1864C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
88 Comedy
88 Comedy
88 Horror
88 Action
88 Drama
88 Action
88 Action
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Mystery
88 Comedy
88 Drama
88 Comedy
88 Action
88 Science Fiction
88 Action
88 Drama
87 Drama
87 Drama
87 Horror
87 Mystery
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Action
86 Comedy
86 Action
86 Drama
86 Comedy
86 Comedy
86 Drama
86 Mystery
86 Drama
86 Music
86 Comedy
86 Comedy
86 Comedy
86 Mystery
85 Music
85 Mystery
85 Drama
85 Mystery
85 Action
85 Drama
85 Mystery
85 War
85 Drama
85 Horror
85 Drama
85 Drama
84 Comedy
84 Comedy
84 Comedy
84 Comedy
84 Action
84 Action
84 Drama
84 Drama
84 Action
84 Mystery
84 Mystery
84 Mystery
84 War
84 Action
84 Action
84 Horror
84 Action
84 Horror
84 Drama
84 Drama
84 Science Fiction
83 Horror
83 Drama
83 Drama
83 Comedy
83 Drama
83 Comedy
83 Comedy
83 Action
83 Westerns
83 Drama
83 Comedy
83 Drama
83 Comedy
83 Comedy
83 Comedy
83 War
83 Drama
83 Drama
83 Drama
83 Drama
82 Action
82 Science Fiction
82 Drama
82 Comedy
82 Action
82 Comedy
82 Action
82 Drama
82 Action
82 Drama
82 Mystery
82 Drama
82 Comedy
82 Horror
82 Drama
82 Drama
82 Mystery
82 Drama
82 Comedy
82 Action
82 Mystery
81 Drama
81 Comedy
81 Drama
81 Comedy
81 Drama
81 Mystery
81 Drama
81 Action
81 Comedy
81 Drama
81 Action
81 Drama
81 Comedy
81 Drama
81 Comedy
81 Drama
81 Drama
81 Drama
81 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Mystery
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Comedy
80 Comedy
80 Drama
80 Action
79 Action
79 Mystery
79 Comedy
79 Drama
79 Comedy
79 Drama
79 Action
79 Drama
79 Western
79 Drama
79 Drama
79 Comedy
79 Horror
79 Drama
79 Drama
79 Drama
79 Action
79 Horror
79 
79 Drama
78 Drama
78 Western
78 Drama
78 Horror
78 Drama
78 Drama
78 Comedy
78 Comedy
78 Comedy
78 Comedy
78 Action
78 War
78 Action
78 Drama
78 Drama
78 Action
77 Drama
77 War
77 Drama
77 Drama
77 Drama
77 Comedy
77 Drama
77 Drama
77 Mystery
77 Science Fiction
77 Drama
77 Action
77 Horror
77 Comedy
77 Drama
77 War
76 Short
76 Comedy
76 Drama
76 Mystery
76 Comedy
76 Drama
76 Western
76 Comedy
76 Science Fiction
76 Action
76 Drama
76 Horror
76 Drama
76 War
76 Drama
76 Horror
75 Drama
75 Mystery
75 Comedy
75 Action
75 Mystery
75 Comedy
75 Comedy
75 Comedy
75 Horror
75 Comedy
75 Action
75 Comedy
75 Action
75 Comedy
75 Mystery
75 Comedy
75 Comedy
75 Action
75 Drama
75 Comedy
75 Drama
75 Comedy
75 Drama
75 Drama
75 Drama
75 Comedy
75 Western
75 Western
74 Action
74 Comedy
74 Drama
74 Comedy
74 Drama
74 Drama
74 Comedy
74 Drama
74 Comedy
74 Drama
74 Comedy
74 Comedy
74 Drama
74 Western
74 Comedy
74 Drama
74 Comedy
73 Adventure
73 Drama
73 Science Fiction
73 Horror
73 Horror
73 Music
73 Comedy
73 Comedy
73 Comedy
73 Comedy
73 Drama
73 Drama
73 Music
73 Comedy
73 Adventure
73 Comedy
73 Mystery
73 Drama
73 Drama
72 Western
72 War
72 Western
72 Mystery
72 Drama
72 Drama
72 Drama
72 Horror
72 Comedy
72 Horror
72 Drama
72 Mystery
72 Science Fiction
72 Mystery
72 Drama
72 Drama
72 Action
72 Drama
72 Drama
72 Drama
72 Drama
72 Action
71 Action
71 Action
71 Comedy
71 Drama
71 Drama
71 Mystery
71 Action
71 War
71 Drama
71 Drama
71 Drama
71 Drama
71 Action
71 Drama
71 Science Fiction
71 Action
71 Comedy
71 Drama
71 Drama
71 Comedy
71 Comedy
70 Drama
70 Drama
70 Drama
70 Mystery
70 Comedy
70 Mystery
70 Drama
70 Drama
70 Western
70 Western
70 Western
70 Comedy
70 Comedy
70 Drama
70 Comedy
70 Drama
70 Drama
70 Drama
70 Drama
69 Drama
69 Comedy
69 Drama
69 Drama
69 Comedy
69 Horror
69 Western
69 Comedy
69 Horror
69 Action
69 Comedy
69 Mystery
69 Drama
69 Comedy
69 Action
69 Action
69 Comedy
69 Music
69 Mystery
69 Drama
68 Drama
68 Drama
68 Comedy
68 Comedy
68 Comedy
68 Comedy
68 Action
68 Drama
68 Comedy
68 Comedy
68 Drama
68 Science Fiction
68 Drama
68 Action
68 Comedy
68 Drama
68 Drama
68 Drama
68 Drama
68 Drama
68 Drama
68 Comedy
68 Science Fiction
68 Science Fiction
67 Science Fiction
67 Drama
67 Action
67 Western
67 Western
67 Comedy
67 Drama
67 Drama
67 Mystery
67 Drama
67 Comedy
67 Comedy
67 Drama
67 Drama
67 Drama
67 Action
67 Mystery
67 Mystery
66 Mystery
66 Comedy
66 Mystery
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
65 Comedy
65 Comedy
65 Drama
65 Comedy
65 Action
65 Drama
65 Drama
65 Drama
65 Comedy
65 Drama
65 Western
65 Action
65 Drama
65 Drama
65 Drama
65 Comedy
65 Comedy
65 Drama
65 Drama
64 Drama
64 Science Fiction
64 Horror
64 Western
64 Comedy
64 Crime
64 Drama
64 Drama
64 Comedy
64 Mystery
64 Horror
64 Comedy
64 Action
64 Action
64 Action
64 Comedy
63 Drama
63 Comedy
63 Comedy
63 Drama
63 Horror
63 Drama
63 Comedy
63 Comedy
63 Action
63 Drama
63 Drama
63 Drama
63 Western
63 Comedy
62 Drama
62 Drama
62 Drama
62 Drama
62 Horror
62 Mystery
62 Science Fiction
62 Action
62 Action
62 Comedy
62 Drama
62 Comedy
62 Comedy
62 Drama
62 Comedy
62 Drama
62 Comedy
62 Comedy
62 Comedy
62 Comedy
62 Drama
62 Comedy
62 Mystery
62 Drama
62 Drama
62 Drama
62 Drama
62 Mystery
61 Drama
61 Drama
61 Drama
61 Comedy
61 Drama
61 Mystery
61 Comedy
61 Mystery
61 Drama
61 Music
61 Drama
61 Action
61 Drama
61 Drama
61 Comedy
61 Drama
61 Western
61 Drama
61 Comedy
60 Western
60 Drama
60 Comedy
60 Drama
60 Drama
60 Drama
60 Comedy
60 Comedy
60 Comedy
60 Drama
60 Drama
60 Comedy
60 Drama
60 Drama
60 Drama
60 Drama
60 Drama
60 Horror
60 Mystery
60 Action
59 Comedy
59 Comedy
59 Music
59 Comedy
59 Western
59 Drama
59 Drama
59 Drama
59 Drama
59 Comedy
59 Action
59 Comedy
59 Comedy
59 Drama
59 Drama
59 Science Fiction
59 Action
59 Drama
58 Drama
58 Comedy
58 Horror
58 Comedy
58 Drama
58 Drama
58 Comedy
58 Drama
58 Comedy
58 Comedy
57 Drama
57 Comedy
57 Mystery
57 Comedy
57 Comedy
57 Drama
57 Mystery
57 Comedy
57 Comedy
57 Comedy
57 Action
57 Action
57 Drama
57 Comedy
57 Comedy
57 Action
57 Drama
57 Comedy
56 Comedy
56 Comedy
56 Comedy
56 Comedy
56 Mystery
56 Action
56 Action
56 Drama
56 Drama
56 Comedy
55 Comedy
55 Drama
55 Comedy
55 Drama
55 Drama
55 Drama
55 Comedy
55 Comedy
55 Comedy
55 Comedy
55 Drama
54 Mystery
54 Drama
54 Drama
54 Comedy
54 Action
54 Mystery
54 Mystery
54 Drama
54 Action
54 Horror
54 Action
54 Comedy
54 Drama
54 Action
54 Action
54 Comedy
54 Mystery
54 Action
54 Comedy
54 Action
54 Drama
54 Comedy
54 Comedy
54 Action
53 Drama
53 Drama
53 Drama
53 Drama
53 Western
53 Comedy
53 Comedy
53 Mystery
53 Drama
53 Drama
53 Horror
53 Action
53 Comedy
53 War
53 Comedy
52 Drama
52 Action
52 Comedy
52 Drama
52 Drama
52 Comedy
52 Music
52 Comedy
52 Drama
52 Drama
52 Drama
52 Science Fiction
52 Action
52 Drama
52 Romance
51 Mystery
51 Mystery
51 Western
51 Comedy
51 Music
51 Action
51 Horror
51 Action
51 Mystery
51 Drama
51 Comedy
51 Drama
51 Drama
51 Drama
51 Action
51 Drama
51 Westerns
51 Action
51 Drama
50 Mystery
50 Drama
50 Comedy
50 Drama
50 Comedy
50 Drama
50 Comedy
50 Action
50 Action
50 Horror
50 Drama
50 Drama
50 Drama
50 Comedy
50 Action
50 Action
50 Drama
50 Drama
50 Drama
50 Drama
50 Drama
49 Drama
49 Drama
49 Action
49 Drama
49 Drama
49 Music
49 Action
49 Drama
49 Action
49 Comedy
49 Action
49 Drama
49 Horror
49 Drama
49 Comedy
49 Drama
49 Drama
49 Comedy
49 Action
49 Comedy
49 Drama
48 Comedy
48 Comedy
48 Comedy
48 Western
48 Drama
48 Drama
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Comedy
48 Drama
47 Drama
47 Drama
47 Action
47 Drama
47 War
47 Horror
47 Mystery
47 Drama
47 Drama
47 War
47 Comedy
47 Drama
47 Comedy
47 Action
46 Drama
46 Drama
46 Drama
46 Comedy
46 Comedy
46 Comedy
46 Mystery
46 Action
45 Drama
45 Comedy
45 Comedy
45 Action
45 Western
45 Drama
45 Drama
45 Action
45 Drama
45 Drama
45 Drama
45 Drama
45 Comedy
45 Fantasy
45 Action
45 Drama
45 Mystery
45 Drama
45 Comedy
45 Comedy
45 Drama
44 Drama
44 Comedy
44 Drama
44 Drama
44 Comedy
44 Comedy
44 Drama
44 Drama
44 Action
44 Comedy
44 War
44 Drama
44 Western
44 Western
44 Action
44 Comedy
44 Science Fiction
43 Drama
43 Comedy
43 Drama
43 Drama
43 Horror
43 Comedy
43 Music
43 Action
43 Music
43 Comedy
43 Comedy
43 Comedy
43 Action
42 Comedy
42 Comedy
42 Comedy
42 Science Fiction
42 Drama
42 Drama
42 Comedy
42 Drama
42 Drama
42 Western
42 Drama
42 Mystery
42 Comedy
42 Drama
42 Drama
41 Drama
41 Action
41 Drama
41 Drama
41 Drama
41 Mystery
41 Drama
41 Drama
41 War
41 Horror
41 Drama
41 Action
41 Drama
41 Drama
41 Drama
41 Western
41 Comedy
41 Science Fiction
41 Action
40 Action
40 Action
40 Comedy
40 Action
40 Drama
40 Drama
40 Drama
40 Comedy
40 Mystery
40 Western
40 Western
40 Western
40 Drama
40 Western
40 Drama
40 Drama
40 Action
40 Drama
40 Drama
39 Western
39 Western
39 Drama
39 Drama
39 Drama
39 Horror
39 Horror
39 Action
39 Drama
39 Comedy
39 Drama
39 Drama
39 Drama
39 Drama
39 Comedy
39 Action
38 Action
38 Music
38 Drama
38 Drama
38 Comedy
38 Comedy
38 Drama
38 Comedy
38 Comedy
38 Comedy
37 Comedy
37 
37 Comedy
37 Music
37 Comedy
37 Adventure
37 Drama
37 Comedy
37 Drama
37 Mystery
36 Action
36 Drama
36 Drama
36 Drama
36 Drama
36 Horror
36 Comedy
36 Drama
36 Mystery
36 Action
36 Comedy
36 Mystery
36 Mystery
36 Mystery
36 Comedy
36 Comedy
36 Comedy
36 Comedy
36 Comedy
36 Drama
35 Comedy
35 Comedy
35 Drama
35 Drama
35 Action
35 Drama
35 Drama
35 Comedy
35 Drama
35 Drama
35 Drama
35 Action
35 Science Fiction
35 Comedy
35 Comedy
35 Comedy
34 Music
34 Drama
34 Drama
34 Drama
34 Comedy
34 Comedy
34 Drama
34 Drama
34 Drama
34 Drama
34 Mystery
34 Action
34 Drama
34 Drama
34 Western
33 Comedy
33 Comedy
33 Comedy
33 Drama
33 Action
33 Western
33 Music
33 Mystery
33 Comedy
33 Mystery
33 Mystery
33 Western
33 Action
33 Drama
33 Western
33 Action
32 Action
32 Mystery
32 Comedy
32 Comedy
32 Drama
32 Drama
32 Drama
32 Drama
32 Comedy
32 Drama
32 Horror
32 Action
32 Western
32 Mystery
32 Drama
32 Action
32 Western
32 Comedy
32 Science Fiction
32 Action
31 Comedy
31 Drama
31 Comedy
31 Comedy
31 Mystery
31 Comedy
31 Drama
31 Drama
31 Mystery
31 Drama
31 Drama
31 Action
31 Drama
31 Drama
31 Drama
31 Comedy
31 Science Fiction
31 Drama
30 Drama
30 Music
30 Drama
30 Drama
30 Comedy
30 Comedy
30 Comedy
30 Comedy
30 Action
30 Drama
30 Drama
30 Drama
30 Drama
30 Drama
29 Comedy
29 Action
29 Comedy
29 Action
29 Drama
29 Comedy
29 Drama
29 Drama
29 Drama
29 Drama
29 Drama
29 Mystery
29 Drama
29 Comedy
29 Drama
29 Drama
29 Comedy
29 Drama
29 Comedy
29 Drama
29 Drama
28 Comedy
28 Comedy
28 Drama
28 Comedy
28 Drama
28 Comedy
28 Horror
28 Western
28 Drama
28 Comedy
28 Action
28 Comedy
28 Action
28 Drama
28 Action
28 Action
28 Action
28 Drama
28 Action
28 Science Fiction
28 Comedy
28 Comedy
27 Science Fiction
27 Western
27 Mystery
27 Action
27 Comedy
27 Drama
27 Drama
27 Drama
27 Drama
27 Mystery
27 Comedy
27 Drama
27 Drama
27 Comedy
27 Drama
27 Drama
27 Drama
26 Drama
26 Drama
26 Drama
26 Comedy
26 Drama
26 Drama
26 Music
26 Drama
26 Music
26 Music
26 Drama
26 Drama
26 Drama
26 Drama
26 Action
26 Drama
26 Drama
26 Drama
26 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Comedy
25 Drama
25 Music
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Comedy
25 Drama
25 Drama
25 Drama
25 Western
25 Western
25 Music
24 Comedy
24 Action
24 Western
24 Music
24 Comedy
24 Western
24 Drama
24 Action
24 Comedy
24 Drama
24 Drama
24 Horror
24 Comedy
24 Drama
24 Drama
24 Drama
24 Drama
24 Comedy
24 Mystery
24 Action
23 Drama
23 Drama
23 Western
23 Drama
23 Western
23 Drama
23 War
23 Comedy
23 Comedy
23 Drama
23 Action
23 Action
23 Comedy
23 War
23 Drama
23 Comedy
23 Comedy
23 Science Fiction
23 Drama
23 Drama
23 Drama
22 Drama
22 Drama
22 Drama
22 War
22 Drama
22 Action
22 Drama
22 Drama
22 Drama
22 Mystery
22 Comedy
22 Drama
22 Horror
22 Science Fiction
21 Mystery
21 Adventure
21 Mystery
21 Comedy
21 Comedy
21 Science Fiction
21 Science Fiction
21 Science Fiction
21 Science Fiction
21 Comedy
21 Comedy
21 Drama
20 Action
20 Action
20 Mystery
20 Comedy
20 Action
20 Western
20 Drama
20 Western
20 Mystery
20 Drama
20 Music
20 Drama
20 Drama
20 Science Fiction
20 Comedy
20 Action
20 Action
20 Comedy
20 Comedy
20 Drama
19 Horror
19 Comedy
19 Drama
19 Comedy
19 Music
19 Comedy
19 Comedy
19 Drama
19 Western
19 Horror
19 Drama
19 Drama
19 Mystery
19 Comedy
19 Action
18 Drama
18 Drama
18 Horror
18 Western
18 Drama
18 Westerns
18 Comedy
18 Comedy
18 Western
18 Action
18 Drama
18 Music
17 Comedy
17 Comedy
17 Comedy
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Mystery
17 Drama
17 Action
17 Drama
16 Mystery
16 Drama
16 Drama
16 Science Fiction
16 Action
16 Western
16 Drama
16 Comedy
16 Drama
16 Drama
16 Mystery
16 War
16 Drama
16 Action
15 Horror
15 Drama
15 Drama
15 Comedy
15 Drama
15 Drama
15 Drama
15 Drama
15 Action
15 Comedy
15 Western
15 Comedy
14 Drama
14 Comedy
14 Action
14 Drama
14 Action
14 Action
14 Drama
14 Drama
14 Horror
14 Horror
14 Horror
14 Drama
14 Comedy
14 Comedy
14 Drama
13 Comedy
13 Drama
13 Action
13 Drama
13 Music
13 Western
13 Action
13 Action
13 Comedy
13 Comedy
13 Western
13 War
13 Drama
12 Western
12 Western
12 Western
12 Western
12 Western
12 Western
12 Western
12 Comedy
12 Comedy
12 Drama
12 Action
12 Drama
12 Comedy
12 Comedy
12 Comedy
12 Drama
11 Drama
11 Drama
11 Action
11 Western
11 Action
11 Western
11 Western
11 Drama
11 Science Fiction
11 Mystery
11 Mystery
11 Mystery
11 Mystery
11 Horror
11 Drama
11 Comedy
11 Drama
11 Drama
11 War
11 Mystery
10 Drama
10 Comedy
10 Comedy
10 Drama
10 Action
10 Comedy
10 Comedy
10 Action
10 Western
10 Drama
10 War
10 Action
10 Mystery
10 War
10 Drama
10 Science Fiction
10 War
10 Drama
9 Drama
9 Drama
9 Drama
9 Drama
9 Drama
9 Mystery
9 Drama
9 Drama
9 Action
9 Drama
9 Drama
9 Action
9 Action
9 Science Fiction
9 Mystery
9 Drama
9 Drama
9 Drama
9 Drama
9 Drama
8 Drama
8 Drama
8 Comedy
8 Westerns
8 War
8 Drama
8 Action
8 Comedy
8 Drama
8 Music
8 Comedy
8 Action
8 Action
8 War
8 War
8 Drama
8 Horror
8 Comedy
8 Drama
8 Comedy
8 Action
8 Drama
8 Action
8 Western
8 Comedy
8 Action
8 Western
8 Drama
8 Drama
8 Drama
8 Action
8 Comedy
8 Comedy
8 Comedy
8 Comedy
8 Western
8 Drama
8 Drama
8 Comedy
8 Action
8 Mystery
8 Mystery
8 Drama
8 Horror
8 Drama
8 Comedy
8 Drama
8 Drama
8 Action
8 Western
7 Drama
7 Comedy
7 Drama
7 Action
7 Drama
7 Drama
7 Action
7 Action
7 Comedy
7 Horror
7 Drama
7 Action
7 Drama
7 Comedy
7 Western
7 Comedy
7 Action
7 Music
7 Action
7 Comedy
7 Science Fiction
7 Western
7 Drama
7 War
7 Drama
7 Drama
7 Drama
7 Comedy
6 Drama
6 Comedy
6 Western
6 Western
6 Horror
6 Drama
6 Drama
6 Drama
6 War
6 Action
6 Mystery
6 Drama
6 Drama
6 Drama
6 Science Fiction
6 Music
6 Western
6 Comedy
6 Drama
6 Music
6 Drama
6 Western
6 Western
6 Western
6 Action
6 Western
6 Western
6 Western
6 Action
6 Western
6 Western
6 Western
6 Comedy
6 Drama
6 Drama
6 Drama
6 Action
6 Drama
6 Comedy
6 Drama
6 Drama
6 War
6 Drama
6 Drama
6 Drama
6 Drama
6 Comedy
6 Action
5 Western
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Drama
5 Action
5 Mystery
5 Comedy
5 Comedy
5 Mystery
5 Drama
5 Comedy
5 War
5 Westerns
5 Action
5 Action
5 Westerns
5 Western
5 Mystery
4 Drama
4 Western
4 Mystery
4 Action
4 Drama
4 Western
4 Drama
4 Comedy
4 Western
4 Drama
4 Western
4 Mystery
4 Drama
4 Drama
4 Drama
4 Horror
4 Drama
4 Horror
4 Drama
4 Action
3 Mystery
3 Drama
3 Action
3 Comedy
3 Mystery
3 Music
3 Comedy
3 Music
3 Comedy
3 Comedy
3 Comedy
3 Action
3 Action
3 Mystery
3 Comedy
3 Action
3 Comedy
3 Comedy
3 Horror
3 Mystery
3 Western
3 Action
3 Drama
3 Comedy
3 Mystery
3 Music
3 Comedy
3 Comedy
3 Western
2 Drama
2 War
2 Action
2 Comedy
2 Comedy
2 Comedy
2 Comedy
2 Comedy
2 Action
2 Comedy
2 Comedy
2 Horror
2 Science Fiction
2 Action
2 Music
2 Drama
2 Action
2 Drama
2 Western
2 Drama
2 Drama
1 Drama
1 Comedy
1 Western
1 Western
1 Western
1 Western
1 Western
1 Western
1 Action
1 War
1 War
1 War
1 Western
1 Western
1 Western
1 Western
1 Western
1 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Action
0 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Action
0 Action
0 Drama
0 Comedy
0 Comedy
0 
0 
3277857
Scorsese, Martin     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ [Ag++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:19:25 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 76L, 1864C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;25Hgetline(infile, title,[31m';'[m);[3;25Hcolumn3.push_back(title);[4;25Hgetline(infile, subject,[31m';'[m);[5;25Hcolumn4.push_back(subject);[6;25Hgetline(infile, actor,[31m';'[m);[7;25Hcolumn5.push_back(actor);[8;25Hgetline(infile, actress,[31m';'[m);[9;25Hcolumn6.push_back(actress);[10;25Hgetline(infile, director,[31m';'[m);[11;25Hcolumn7.push_back(director);[12;25Hgetline(infile,popularity,[31m';'[m);
               [9C[38;5;130mif[m(!popularity.empty()){
                        column8.push_back(-[31m1[m*stoi(popularity));}[15;11H              [38;5;130melse[m{column8.push_back([31m0[m);}[15;52H[K[16;10H               getline(infile, awards,[31m';'[m);[16;53H[K[17;11H              getline(infile, image,[35m'\n'[m);[18;10H               column10.push_back(image);[19;9H        }[19;18H[K[20;1H[K[21;9Hsort(column8.begin(), column8.end());[22;7H  vector<string> action, comedy;[23;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){
                cout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[24;61H[K[25;5H            [25;17H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H67,41-55      Bot[24;55H[?25h[?25l[34;95H~@k[24;55H[34;95H   [24;56H[34;109H2-56[24;56H[?25h[?25l[34;95H~@k[24;56H[34;95H   [24;57H[34;109H3-57[24;57H[?25h[?25l[34;95H~@k[24;57H[34;95H   [24;58H[34;109H4-58[24;58H[?25h[?25l[34;95H~@k[24;58H[34;95H   [24;59H[34;109H5-59[24;59H[?25h[?25l[34;95H~@k[24;59H[34;95H   [24;60H[34;109H6-60[24;60H[?25h[?25l[34;95H~@k[24;60H[34;95H   [24;60H[?25h[?25l[34;95H~@k[24;60H[34;95H   [24;60H[?25h[?25l[34;95Hi[24;60H[34;95H [24;60H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H67,46-60      Bot[24;60H[?25h[?25l[34;109H7-61[24;61H[?25h[?25l[25;33r[25;1H[L[1;34r[34;105H[K[34;105H68,3-17[7C97%[25;17H[?25h[?25li[34;108H4-18[25;18H[?25h[?25l[38;5;130mif[m[34;108H5-19[25;19H[?25h[?25l[34;108H6-20[25;20H[?25h[?25l[34;108H5-19[25;19H[?25h[?25l([34;108H6-20[25;20H[?25h[?25l)[106m()[m[34;108H7-21[25;21H[?25h[?25l[34;108H6-20[25;20H[?25h[?25l[106mc[m)c[106m)[m[34;108H7-21[25;21H[?25h[?25l[106mo[m)o[106m)[m[34;108H8-22[25;22H[?25h[?25l[106ml[m)l[106m)[m[34;108H9-23[25;23H[?25h[?25l[106mu[m)u[106m)[m[34;108H10-24[25;24H[?25h[?25l[106mm[m)m[106m)[m[34;109H1-25[25;25H[?25h[?25l[106mn[m)n[106m)[m[34;109H2-26[25;26H[?25h[?25l[106m4[m)4[106m)[m[34;109H3-27[25;27H[?25h[?25l[106m[[m[97m[101m)[27;9H}[28;59H;[29;23H;[30;91H;[31;34H;

}[m[25;27H[[97m[106m)[m[34;109H4-28[25;28H[?25h[?25l[106m][m)[27;9H}[28;59H;[29;23H;[30;91H;[31;34H;

}[25;28H][106m)[m[34;109H5-29[25;29H[?25h[?25l[25;19H([7C[106m[][m)[34;109H4-28[25;28H[?25h[?25l[106mi[m])i[106m][m[34;109H5-29[25;29H[?25h[?25l[25;19H[106m([m[7C[i][106m)[m[34;109H6-30[25;30H[?25h[?25l[106m=[m)=[106m)[m[34;109H7-31[25;31H[?25h[?25l[106m=[m)=[106m)[m[34;109H8-32[25;32H[?25h[?25l[106mA[m)A[106m)[m[34;109H9-33[25;33H[?25h[?25l[106mc[m)c[106m)[m[34;108H20-34[25;34H[?25h[?25l[106mt[m)t[106m)[m[34;109H1-35[25;35H[?25h[?25l[106mi[m)i[106m)[m[34;109H2-36[25;36H[?25h[?25l[106mo[m)o[106m)[m[34;109H3-37[25;37H[?25h[?25l[106mn[m)n[106m)[m[34;109H4-38[25;38H[?25h[?25l[25;19H([18C)[34;109H3-37[25;37H[?25h[?25l[34;109H2-36[25;36H[?25h[?25l[34;109H1-35[25;35H[?25h[?25l[34;109H0-34[25;34H[?25h[?25l[34;108H19-33[25;33H[?25h[?25lction)[25;38H[K[34;109H8-32[25;32H[?25h[?25l[31m"ction)
                
        }
        int x= accumulate(column1.begin(),column1.end(),0);
        cout <<x<<endl;
        vector<string>::iterator it=find(column7.begin(),column7.end(),[m[1CScorsese, Martin[1C[31m);
        cout<< *it<<[m[1C     [1C[31m<<endl;
        
}[m[34;109H9-33[25;33H[?25h[?25l[31mAction)[m[34;108H20-34[25;34H[?25h[?25l[34;109H1-35[25;35H[?25h[?25l[34;109H2-36[25;36H[?25h[?25l[34;109H3-37[25;37H[?25h[?25l[34;109H4-38[25;38H[?25h[?25l[25;19H[106m([m[19C[31m[106m)[m[34;109H5-39[25;39H[?25h[?25l[31m[106m"[m)
                
        }
        [32mint[m x= accumulate(column1.begin(),column1.end(),[1C);
        cout <<x<<endl;
        vector<string>::iterator it=find(column7.begin(),column7.end(),[1C[31mScorsese, Martin[m[1C);
        cout<< *it<<[1C[31m     [m[1C<<endl;
        
}[25;39H[31m"[m[106m)[m[34;109H6-40[25;40H[?25h[?25l[34;109H7-41[25;41H[?25h[?25l{[25;19H([20C)[106m{[27;9H}[m[34;109H8-42[25;42H[?25h[?25l}[106m}[m[27;9H}[34;109H9-43[25;43H[?25h[?25l[34;109H8-42[25;42H[?25h[?25l[26;33r[26;1H[L[1;34r[25;42H[K[26;17H}[34;105H[K[34;105H69,3-17[7C95%[26;17H[106m}[?25h[?25l[27;33r[m[27;1H[L[1;34r[26;17H[K[27;17H}[34;105H[K[34;105H70,3-17[7C93%[27;17H[106m}[?25h[?25l[m[25;41H{[27;17H}[34;105H69[26;17H[?25h[?25l[34;108H4-25[26;25H[?25h[?25la[34;108H5-26[26;26H[?25h[?25lc[34;108H6-27[26;27H[?25h[?25lt[34;108H7-28[26;28H[?25h[?25li[34;108H8-29[26;29H[?25h[?25lo[34;108H9-30[26;30H[?25h[?25ln[34;108H10-31[26;31H[?25h[?25l.[34;109H1-32[26;32H[?25h[?25lp[34;109H2-33[26;33H[?25h[?25lu[34;109H3-34[26;34H[?25h[?25ls[34;109H4-35[26;35H[?25h[?25lh[34;109H5-36[26;36H[?25h[?25l_[34;109H6-37[26;37H[?25h[?25lb[34;109H7-38[26;38H[?25h[?25la[34;109H8-39[26;39H[?25h[?25lc[34;109H9-40[26;40H[?25h[?25lk[34;108H20-41[26;41H[?25h[?25l([34;109H1-42[26;42H[?25h[?25l)[106m()[m[34;109H2-43[26;43H[?25h[?25l[34;109H1-42[26;42H[?25h[?25l[106mc[m)c[106m)[m[34;109H2-43[26;43H[?25h[?25l[106mo[m)o[106m)[m[34;109H3-44[26;44H[?25h[?25l[106ml[m)l[106m)[m[34;109H4-45[26;45H[?25h[?25l[106mu[m)u[106m)[m[34;109H5-46[26;46H[?25h[?25l[106mm[m)m[106m)[m[34;109H6-47[26;47H[?25h[?25l[106mn[m)n[106m)[m[34;109H7-48[26;48H[?25h[?25l[25;41H[106m{[m[26;41H(column)[27;17H[106m}[m[34;106H8,28-42[25;42H[?25h[?25l{[27;17H}[34;106H7,34-48[24;48H[?25h[?25l[23;43H[106m{[29;9H}[m[34;106H6,37-44[23;44H[?25h[?25l{[29;9H}[34;106H5,32-39[22;39H[?25h[?25l[34;106H4,39-46[21;46H[?25h[?25l[34;106H3,1    [20;1H[?25h[?25l[34;106H2,4-18[19;18H[?25h[?25l[34;106H1,27-48[18;48H[?25h[?25l[34;106H0[17;48H[?25h[?25l[34;105H59[16;48H[?25h[?25l[15;47H[106m([1C)[m[34;106H8[15;48H[?25h[?25l([1C)[34;106H7[14;48H[?25h[?25l[13;48H[106m{[14;64H}[m[34;106H6[13;48H[?25h[?25l{[14;64H}[34;106H5[12;48H[?25h[?25l[34;106H4[11;48H[?25h[?25l[34;106H3[10;48H[?25h[?25l[34;106H2[9;48H[?25h[?25l[34;106H1[8;48H[?25h[?25l[7;42H[106m([mactor[106m)[m[34;106H0[7;48H[?25h[?25l(actor)[34;105H49[6;48H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H48,27-48      91%[6;48H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17H}[34;105H[K[34;105H47,27-48      89%[6;48H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H46,27-48      86%[6;42H[106m([mtitle[106m)[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H45,27-48      84%[7;42H(title)[6;48H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H44,4-25[7C82%[6;25H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H43,27-48      80%[6;47H[106m([1C)[?25h[?25l[m([1C)[34;106H4,4-25 [7;25H[?25h[?25l[34;106H5,27-48[8;48H[?25h[?25l[34;106H4,4-25 [7;25H[?25h[?25l[6;47H[106m([1C)[m[34;106H3,27-48[6;48H[?25h[?25l([1C)[34;106H4,4-25 [7;25H[?25h[?25l[34;106H5,27-48[8;48H[?25h[?25l[9;42H[106m([mtitle[106m)[m[34;106H6[9;48H[?25h[?25l(title)[34;106H7[10;48H[?25h[?25l[34;106H8[11;48H[?25h[?25l[34;106H9[12;48H[?25h[?25l[13;42H[106m([mactor[106m)[m[34;105H50[13;48H[?25h[?25l(actor)[34;106H1[14;48H[?25h[?25l[34;106H2[15;48H[?25h[?25l[34;106H3[16;48H[?25h[?25l[34;106H4[17;48H[?25h[?25l[34;106H5[18;48H[?25h[?25l[19;48H[106m{[20;64H}[m[34;106H6[19;48H[?25h[?25l{[20;64H}[34;106H7[20;48H[?25h[?25l[21;47H[106m([1C)[m[34;106H8[21;48H[?25h[?25l([1C)[34;106H9[22;48H[?25h[?25l[34;105H60[23;48H[?25h[?25l[34;106H1[24;48H[?25h[?25l[34;106H2,4-18 [25;18H[?25h[?25l[34;106H3,1   [26;1H[?25h[?25l[34;106H4,39-46[27;46H[?25h[?25l[34;106H5,32-39[28;39H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H66,37-44      82%[28;44H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H67,34-48      84%[28;48H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[34;105H[K[34;105H68,28-42      86%[28;41H[106m{[30;17H}[28;42H[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9Hcout <<x<<endl;[34;105H[K[34;105H69,27-48      89%[27;41H{[28;41H[106m([mcolumn[106m)[m[29;17H}[28;48H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hvector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[34;105H[K[34;105H70,4-18[7C91%[26;41H[106m{[m[27;41H(column)[28;17H[106m}[?25h[?25l[1;33r[m[33;1H
[1;34r[33;9Hcout<< *it<<[31m"     "[m<<endl;[34;105H[K[34;105H71,3-17[7C93%[25;41H{[27;17H}[28;17H[?25h[?25l[25;41H[106m{[27;17H}[m[34;106H0,4-18[27;18H[?25h[?25l[25;41H{[26;41H[106m([mcolumn[106m)[m[27;17H}[34;105H69,27-48[26;48H[?25h[?25l[106m1[m)1[106m)[m[34;109H8-49[26;49H[?25h[?25l[106m[[m[97m[101m)[27;17H}[29;9H}[30;59H;[31;23H;[32;91H;[33;34H;[m[26;49H[[97m[106m)[m[34;109H9-50[26;50H[?25h[?25l[106m][m)[27;17H}[29;9H}[30;59H;[31;23H;[32;91H;[33;34H;[26;50H][106m)[m[34;108H30-51[26;51H[?25h[?25l[26;41H([7C[106m[][m)[34;108H29-50[26;50H[?25h[?25l[106mi[m])i[106m][m[34;108H30-51[26;51H[?25h[?25l[26;41H[106m([m[7C[i][106m)[m[34;109H1-52[26;52H[?25h[?25l[34;109H2-53[26;53H[?25h[?25l;[26;41H([10C)[34;109H3-54[26;54H[?25h[?25l[25;41H[106m{[27;17H}[m[34;105H70,4-18 [27;18H[?25h[?25l[34;108H3-17[27;17H[?25h[34;1H[K[27;16H[?25l[34;95H^[[27;16H[34;95H  [27;17H[25;41H{[27;17H}[34;105H70,2-16[7C93%[27;16H[?25h[?25l[34;95H~@k[27;16H[34;95H   [26;16H[34;105H69[26;16H[?25h[?25l[34;95Hy[26;16H[?25h[?25l[34;96H~@k[26;16H[34;95H    [26;16H[?25h[?25l[34;95H~@k[26;16H[34;95H   [27;16H[34;105H70[27;16H[?25h[?25l[34;95H~@k[27;16H[34;95H   [27;17H[25;41H[106m{[27;17H}[m[34;108H3-17[27;17H[?25h[?25l[34;95H~@k[27;17H[34;95H   [27;17H[?25h[?25l[34;95H^M[27;17H[34;95H  [28;16H[25;41H{[27;17H}[34;106H1,2-16[28;16H[?25h[?25l[34;95Hi[28;16H[34;95H [28;9H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H71,2-9[8C93%[28;9H[?25h[?25lp[34;108H3-10[28;10H[?25h[34;1H[K[28;9H[?25l[34;95H^[[28;9H[34;95H  [28;10H[34;105H71,2-9[8C93%[28;9H[?25h[?25l[34;95Hp[28;9H[34;95H [28;25H[1;33r[33;1H
[1;34r[28;33r[28;1H[2L[1;34r[28;25Haction.push_back(column1[i]);[29;17H}[34;105H[K[34;105H72,4-25[7C91%[28;25H[?25h[?25l[34;95H~@k[28;25H[34;95H   [27;16H[34;106H1,3-16[27;16H[?25h[?25l[34;95Hi[27;16H[34;95H [27;10H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H71,3-10[7C91%[27;10H[?25h[?25lf[34;108H4-11[27;11H[?25h[?25l [34;108H3-10[27;10H[?25h[?25l [34;108H2-9 [27;9H[?25h[?25l[34;108H3-17[27;17H[?25h[?25li[34;108H4-18[27;18H[?25h[?25l[38;5;130mif[m[34;108H5-19[27;19H[?25h[?25l([34;108H6-20[27;20H[?25h[?25l)[106m()[m[34;108H7-21[27;21H[?25h[?25l[34;108H6-20[27;20H[?25h[?25l[106mc[m)c[106m)[m[34;108H7-21[27;21H[?25h[?25l[106mo[m)o[106m)[m[34;108H8-22[27;22H[?25h[?25l[106ml[m)l[106m)[m[34;108H9-23[27;23H[?25h[?25l[106mu[m)u[106m)[m[34;108H10-24[27;24H[?25h[?25l[106mm[m)m[106m)[m[34;109H1-25[27;25H[?25h[?25l[106mm[m)m[106m)[m[34;109H2-26[27;26H[?25h[?25l)[106m       [27;25H)[m       [34;109H1-25[27;25H[?25h[?25l[106mn[m)n[106m)[m[34;109H2-26[27;26H[?25h[?25l[106m4[m)4[106m)[m[34;109H3-27[27;27H[?25h[?25l[106m[[m[97m[101m)[28;53H;[29;17H}[30;9H}[31;59H;[32;23H;[33;91H;[m[27;27H[[97m[106m)[m[34;109H4-28[27;28H[?25h[?25l[106m][m)[28;53H;[29;17H}[30;9H}[31;59H;[32;23H;[33;91H;[27;28H][106m)[m[34;109H5-29[27;29H[?25h[?25l[27;19H([7C[106m[][m)[34;109H4-28[27;28H[?25h[?25l[106mi[m])i[106m][m[34;109H5-29[27;29H[?25h[?25l[27;19H[106m([m[7C[i][106m)[m[34;109H6-30[27;30H[?25h[?25l[106m=[m)=[106m)[m[34;109H7-31[27;31H[?25h[?25l[106m=[m)=[106m)[m[34;109H8-32[27;32H[?25h[?25l[31m[106m"[m[31m)       
                        action.push_back(column1[i]);
                }
        }
        int x= accumulate(column1.begin(),column1.end(),0);
        cout <<x<<endl;
        vector<string>::iterator it=find(column7.begin(),column7.end(),[m[1CScorsese, Martin[1C[31m);[27;32H"[m[31m[106m)[m[34;109H9-33[27;33H[?25h[?25l[31m[106m"[m)      
                        action.push_back(column1[i]);
                }
        }
        [32mint[m x= accumulate(column1.begin(),column1.end(),[1C);
        cout <<x<<endl;
        vector<string>::iterator it=find(column7.begin(),column7.end(),[1C[31mScorsese, Martin[m[1C);[27;33H[31m"[m[106m)[m[34;108H20-34[27;34H[?25h[?25l[27;19H([14C)[34;108H19-33[27;33H[?25h[?25l[31mC"[m)[34;108H20-34[27;34H[?25h[?25l[31mo"[m)[34;109H1-35[27;35H[?25h[?25l[31mm"[m)[34;109H2-36[27;36H[?25h[?25l[31me"[m)[34;109H3-37[27;37H[?25h[?25l[31md"[m)[34;109H4-38[27;38H[?25h[?25l[31my"[m)[34;109H5-39[27;39H[?25h[?25l[27;19H[106m([20C)[m[34;109H6-40[27;40H[?25h[?25l[34;109H7-41[27;41H[?25h[?25l{[27;19H([20C)[106m{[29;17H}[m[34;109H8-42[27;42H[?25h[?25l{[28;41H[106m([10C)[m[29;17H}[34;106H2,21[28;42H[?25h[?25l[34;109H0-41[28;41H[?25h[?25l([10C)[34;108H19-40[28;40H[?25h[?25l[34;109H8-39[28;39H[?25h[?25l[34;109H7-38[28;38H[?25h[?25l[34;109H6-37[28;37H[?25h[?25l[34;109H5-36[28;36H[?25h[?25l[34;109H4-35[28;35H[?25h[?25l[34;109H3-34[28;34H[?25h[?25l[34;109H2-33[28;33H[?25h[?25l[34;109H1-32[28;32H[?25h[?25l[34;109H0-31[28;31H[?25h[?25l[34;108H9-30 [28;30H[?25h[?25l[34;108H10-31[28;31H[?25h[?25l.push_back(column1[i]);[28;53H[K[34;108H9-30 [28;30H[?25h[?25l.push_back(column1[i]);[28;52H[K[34;108H8-29[28;29H[?25h[?25l.push_back(column1[i]);[28;51H[K[34;108H7-28[28;28H[?25h[?25l.push_back(column1[i]);[28;50H[K[34;108H6-27[28;27H[?25h[?25l.push_back(column1[i]);[28;49H[K[34;108H5-26[28;26H[?25h[?25l.push_back(column1[i]);[28;48H[K[34;108H4-25[28;25H[?25h[?25lc.push_back(column1[i]);[34;108H5-26[28;26H[?25h[?25lo.push_back(column1[i]);[34;108H6-27[28;27H[?25h[?25lm.push_back(column1[i]);[34;108H7-28[28;28H[?25h[?25le.push_back(column1[i]);[34;108H8-29[28;29H[?25h[?25ld.push_back(column1[i]);[34;108H9-30[28;30H[?25h[?25ly.push_back(column1[i]);[34;108H10-31[28;31H[?25h[34;1H[K[28;30H[?25l[34;95H^[[28;30H[34;95H  [28;31H[34;105H72,9-30[7C91%[28;30H[?25h[?25l[34;95H:[28;30H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?25h[?25l[34;1H[K[28;30H[34;105H72,9-30[7C91%[28;30H[?25h[?25l[34;95Hi[28;30H[34;95H [28;30H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H72,9-30[7C91%[28;30H[?25h[?25l[27;27H[106m[[mi[106m][m[34;106H1,16-30[27;30H[?25h[?25l[i][34;106H2,9-30 [28;30H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hcout<< *it<<[31m"     "[m<<endl;[34;105H[K[34;105H73,4-18[7C93%[26;41H[106m{[28;17H}[?25h[?25l[1;33r[m[33;1H
[1;34r[34;105H[K[34;105H74,3-10[7C95%[20;43H[106m{[m[25;41H{[27;17H}[28;9H[106m}[?25h[?25l[1;33r[m[33;1H
[1;34r[28;33r[28;1H[L[1;34r[34;105H[K[34;105H75,2-9[8C95%[19;43H{[27;9H}[28;9H[?25h[?25ls[34;108H3-10[28;10H[?25h[?25lo[34;108H4-11[28;11H[?25h[?25lr[34;108H5-12[28;12H[?25h[?25lt[34;108H6-13[28;13H[?25h[?25l([34;108H7-14[28;14H[?25h[?25l)[106m()[m[34;108H8-15[28;15H[?25h[?25l[34;108H7-14[28;14H[?25h[?25l[106ma[m)a[106m)[m[34;108H8-15[28;15H[?25h[?25l[106mc[m)c[106m)[m[34;108H9-16[28;16H[?25h[?25l[106mt[m)t[106m)[m[34;108H10-17[28;17H[?25h[?25l[106mi[m)i[106m)[m[34;109H1-18[28;18H[?25h[?25l[106mo[m)o[106m)[m[34;109H2-19[28;19H[?25h[?25l[106mn[m)n[106m)[m[34;109H3-20[28;20H[?25h[?25l[106m.[m).[106m)[m[34;109H4-21[28;21H[?25h[?25l[106mb[m)b[106m)[m[34;109H5-22[28;22H[?25h[?25l[106me[m)e[106m)[m[34;109H6-23[28;23H[?25h[?25l[106mg[m)g[106m)[m[34;109H7-24[28;24H[?25h[?25l[106mi[m)i[106m)[m[34;109H8-25[28;25H[?25h[?25l[106mn[m)n[106m)[m[34;109H9-26[28;26H[?25h[?25l[106m([m)[28;13H([13C[106m)[m[34;108H20-27[28;27H[?25h[?25l[1C)[28;13H[106m([m[12C()[106m)[m[34;109H1-28[28;28H[?25h[?25l[106m,[m),[106m)[m[34;109H2-29[28;29H[?25h[?25l[106ma[m)a[106m)[m[34;109H3-30[28;30H[?25h[?25l[106mc[m)c[106m)[m[34;109H4-31[28;31H[?25h[?25l[106mt[m)t[106m)[m[34;109H5-32[28;32H[?25h[?25l[106mi[m)i[106m)[m[34;109H6-33[28;33H[?25h[?25l[106mo[m)o[106m)[m[34;109H7-34[28;34H[?25h[?25l[106mn[m)n[106m)[m[34;109H8-35[28;35H[?25h[?25l[106m.[m).[106m)[m[34;109H9-36[28;36H[?25h[?25l[106me[m)e[106m)[m[34;108H30-37[28;37H[?25h[?25l[106mn[m)n[106m)[m[34;109H1-38[28;38H[?25h[?25l[106md[m)d[106m)[m[34;109H2-39[28;39H[?25h[?25l[106m([m)[28;13H([26C[106m)[m[34;109H3-40[28;40H[?25h[?25l[1C)[28;13H[106m([m[25C()[106m)[m[34;109H4-41[28;41H[?25h[?25l[34;109H5-42[28;42H[?25h[?25l;[28;13H([27C)[34;109H6-43[28;43H[?25h[?25l[1;33r[33;1H
[1;34r[28;33r[28;1H[L[1;34r[34;105H[K[34;105H76,2-9[8C96%[28;9H[?25h[?25ls[34;108H3-10[28;10H[?25h[?25lo[34;108H4-11[28;11H[?25h[?25lr[34;108H5-12[28;12H[?25h[?25lt[34;108H6-13[28;13H[?25h[?25l([34;108H7-14[28;14H[?25h[?25l)[106m()[m[34;108H8-15[28;15H[?25h[?25l[34;108H7-14[28;14H[?25h[?25l[106mc[m)c[106m)[m[34;108H8-15[28;15H[?25h[?25l[106mo[m)o[106m)[m[34;108H9-16[28;16H[?25h[?25l[106mm[m)m[106m)[m[34;108H10-17[28;17H[?25h[?25l[106me[m)e[106m)[m[34;109H1-18[28;18H[?25h[?25l[106md[m)d[106m)[m[34;109H2-19[28;19H[?25h[?25l[106my[m)y[106m)[m[34;109H3-20[28;20H[?25h[?25l[106m.[m).[106m)[m[34;109H4-21[28;21H[?25h[?25l[106mb[m)b[106m)[m[34;109H5-22[28;22H[?25h[?25l[106me[m)e[106m)[m[34;109H6-23[28;23H[?25h[?25l[106mg[m)g[106m)[m[34;109H7-24[28;24H[?25h[?25l[106mi[m)i[106m)[m[34;109H8-25[28;25H[?25h[?25l[106mn[m)n[106m)[m[34;109H9-26[28;26H[?25h[?25l[106m([m)[28;13H([13C[106m)[m[34;108H20-27[28;27H[?25h[?25l[1C)[28;13H[106m([m[12C()[106m)[m[34;109H1-28[28;28H[?25h[?25l[106m,[m),[106m)[m[34;109H2-29[28;29H[?25h[?25l[106mc[m)c[106m)[m[34;109H3-30[28;30H[?25h[?25l[106mo[m)o[106m)[m[34;109H4-31[28;31H[?25h[?25l[106mm[m)m[106m)[m[34;109H5-32[28;32H[?25h[?25l[106me[m)e[106m)[m[34;109H6-33[28;33H[?25h[?25l[106md[m)d[106m)[m[34;109H7-34[28;34H[?25h[?25l[106my[m)y[106m)[m[34;109H8-35[28;35H[?25h[?25l[106m.[m).[106m)[m[34;109H9-36[28;36H[?25h[?25l[106me[m)e[106m)[m[34;108H30-37[28;37H[?25h[?25l[106mn[m)n[106m)[m[34;109H1-38[28;38H[?25h[?25l[106md[m)d[106m)[m[34;109H2-39[28;39H[?25h[?25l[106m([m)[28;13H([26C[106m)[m[34;109H3-40[28;40H[?25h[?25l[1C)[28;13H[106m([m[25C()[106m)[m[34;109H4-41[28;41H[?25h[?25l[34;109H5-42[28;42H[?25h[?25l;[28;13H([27C)[34;109H6-43[28;43H[?25h[34;1H[K[28;42H[?25l[34;95H^[[28;42H[34;95H  [28;43H[34;105H76,35-42      96%[28;42H[?25h[?25l[34;95H~@k[28;42H[34;95H   [28;42H[?25h[?25l[34;95H~@k[28;42H[34;95H   [28;42H[?25h[?25l[34;95H~@k[28;42H[34;95H   [28;42H[?25h[?25l[34;95H~@k[28;42H[34;95H   [28;42H[?25h[?25l[34;95Hi[28;42H[34;95H [28;42H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H76,35-42      96%[28;42H[?25h[?25l[34;109H6-43[28;43H[?25h[?25l[1;33r[33;1H
[1;34r[28;33r[28;1H[L[1;34r[34;105H[K[34;105H77,2-9[8C96%[28;9H[?25h[?25li[34;108H3-10[28;10H[?25h[?25l[38;5;130mif[m[34;108H4-11[28;11H[?25h[?25l[34;108H5-12[28;12H[?25h[?25l[34;108H4-11[28;11H[?25h[?25l([34;108H5-12[28;12H[?25h[?25l)[106m()[m[34;108H6-13[28;13H[?25h[?25l[34;108H5-12[28;12H[?25h[?25l[106me[m)e[106m)[m[34;108H6-13[28;13H[?25h[?25l[106mq[m)q[106m)[m[34;108H7-14[28;14H[?25h[?25l[106mu[m)u[106m)[m[34;108H8-15[28;15H[?25h[?25l[106ma[m)a[106m)[m[34;108H9-16[28;16H[?25h[?25l[106ml[m)l[106m)[m[34;108H10-17[28;17H[?25h[?25l[106m([m)[28;11H([6C[106m)[m[34;109H1-18[28;18H[?25h[?25l[1C)[28;11H[106m([mequal()[106m)[m[34;109H2-19[28;19H[?25h[?25l[28;11H(equal[106m()[m)[34;109H1-18[28;18H[?25h[?25l[106mc[m))c[106m)[m[34;109H2-19[28;19H[?25h[?25l[106mo[m))o[106m)[m[34;109H3-20[28;20H[?25h[?25l[106mm[m))m[106m)[m[34;109H4-21[28;21H[?25h[?25l[106me[m))e[106m)[m[34;109H5-22[28;22H[?25h[?25l[106md[m))d[106m)[m[34;109H6-23[28;23H[?25h[?25l[106my[m))y[106m)[m[34;109H7-24[28;24H[?25h[?25l[106m.[m)).[106m)[m[34;109H8-25[28;25H[?25h[?25l[106mb[m))b[106m)[m[34;109H9-26[28;26H[?25h[?25l[106me[m))e[106m)[m[34;108H20-27[28;27H[?25h[?25l[106mg[m))g[106m)[m[34;109H1-28[28;28H[?25h[?25l[106mi[m))i[106m)[m[34;109H2-29[28;29H[?25h[?25l[106mn[m))n[106m)[m[34;109H3-30[28;30H[?25h[?25l[106m([m))[28;17H([13C[106m)[m[34;109H4-31[28;31H[?25h[?25l[2C)[28;17H[106m([m[12C()[106m)[m[34;109H5-32[28;32H[?25h[?25l[106m,[m)),[106m)[m[34;109H6-33[28;33H[?25h[?25l[106mc[m))c[106m)[m[34;109H7-34[28;34H[?25h[?25l[106mo[m))o[106m)[m[34;109H8-35[28;35H[?25h[?25l[106mm[m))m[106m)[m[34;109H9-36[28;36H[?25h[?25l[106me[m))e[106m)[m[34;108H30-37[28;37H[?25h[?25l[106md[m))d[106m)[m[34;109H1-38[28;38H[?25h[?25l[106my[m))y[106m)[m[34;109H2-39[28;39H[?25h[?25l[106m.[m)).[106m)[m[34;109H3-40[28;40H[?25h[?25l[106me[m))e[106m)[m[34;109H4-41[28;41H[?25h[?25l[106mn[m))n[106m)[m[34;109H5-42[28;42H[?25h[?25l[106md[m))d[106m)[m[34;109H6-43[28;43H[?25h[?25l[106m([m))[28;17H([26C[106m)[m[34;109H7-44[28;44H[?25h[?25l[2C)[28;17H[106m([m[25C()[106m)[m[34;109H8-45[28;45H[?25h[?25l[106m,[m)),[106m)[m[34;109H9-46[28;46H[?25h[?25l[106m [m)) [106m)[m[34;108H40-47[28;47H[?25h[?25l[106ma[m))a[106m)[m[34;109H1-48[28;48H[?25h[?25l[106mc[m))c[106m)[m[34;109H2-49[28;49H[?25h[?25l[106mt[m))t[106m)[m[34;109H3-50[28;50H[?25h[?25l[106mi[m))i[106m)[m[34;109H4-51[28;51H[?25h[?25l[106mo[m))o[106m)[m[34;109H5-52[28;52H[?25h[?25l[106mn[m))n[106m)[m[34;109H6-53[28;53H[?25h[?25l[28;11H[106m([mequal([35C)[106m)[m[34;109H7-54[28;54H[?25h[?25l[34;109H8-55[28;55H[?25h[?25l{[28;11H([42C)[34;109H9-56[28;56H[?25h[?25l}[106m{}[m[34;108H50-57[28;57H[?25h[?25l[34;108H49-56[28;56H[?25h[?25l[1;33r[33;1H
[1;34r[28;33r[28;1H[L[1;34r[27;56H[K[28;9H}[34;105H[K[34;105H78,2-9[8C96%[28;9H[106m}[?25h[?25l[1;33r[m[33;1H
[1;34r[28;33r[28;1H[L[1;34r[27;9H[K[28;9H}[34;105H[K[34;105H79,2-9[8C96%[28;9H[106m}[?25h[?25l[m[26;55H{[28;9H}[34;106H8[27;9H[?25h[?25l[34;108H3-17[27;17H[?25h[?25lc[34;108H4-18[27;18H[?25h[?25lo[34;108H5-19[27;19H[?25h[?25lu[34;108H6-20[27;20H[?25h[?25lt[34;108H7-21[27;21H[?25h[?25l<[34;108H8-22[27;22H[?25h[?25l<[34;108H9-23[27;23H[?25h[?25l[34;108H10-24[27;24H[?25h[?25l[31m"[m[34;109H1-25[27;25H[?25h[?25l[31m"[m[34;109H2-26[27;26H[?25h[?25l[34;109H1-25[27;25H[?25h[?25l[31m "[m[34;109H2-26[27;26H[?25h[?25l[34;109H1-25[27;25H[?25h[?25l[34;109H2-26[27;26H[?25h[?25l[31m"[m[27;26H[K[34;109H1-25[27;25H[?25h[?25l[31mT"[m[34;109H2-26[27;26H[?25h[?25l[31mH"[m[34;109H3-27[27;27H[?25h[?25l[31me"[m[34;109H4-28[27;28H[?25h[?25l[31m"[m[27;28H[K[34;109H3-27[27;27H[?25h[?25l[31m"[m[27;27H[K[34;109H2-26[27;26H[?25h[?25l[31mh"[m[34;109H3-27[27;27H[?25h[?25l[31me"[m[34;109H4-28[27;28H[?25h[?25l[31m "[m[34;109H5-29[27;29H[?25h[?25l[31mt"[m[34;109H6-30[27;30H[?25h[?25l[31mw"[m[34;109H7-31[27;31H[?25h[?25l[31mo"[m[34;109H8-32[27;32H[?25h[?25l[31m "[m[34;109H9-33[27;33H[?25h[?25l[31ml"[m[34;108H20-34[27;34H[?25h[?25l[31ms"[m[34;109H1-35[27;35H[?25h[?25l[31mo"[m[34;109H2-36[27;36H[?25h[?25l[31m"[m[27;36H[K[34;109H1-35[27;35H[?25h[?25l[31m"[m[27;35H[K[34;109H0-34[27;34H[?25h[?25l[31mi"[m[34;109H1-35[27;35H[?25h[?25l[31ms"[m[34;109H2-36[27;36H[?25h[?25l[31mt"[m[34;109H3-37[27;37H[?25h[?25l[31ms"[m[34;109H4-38[27;38H[?25h[?25l[31m "[m[34;109H5-39[27;39H[?25h[?25l[31ma"[m[34;109H6-40[27;40H[?25h[?25l[31mr"[m[34;109H7-41[27;41H[?25h[?25l[31me"[m[34;109H8-42[27;42H[?25h[?25l[31m "[m[34;109H9-43[27;43H[?25h[?25l[31me"[m[34;108H30-44[27;44H[?25h[?25l[31mq"[m[34;109H1-45[27;45H[?25h[?25l[31mu"[m[34;109H2-46[27;46H[?25h[?25l[31ma"[m[34;109H3-47[27;47H[?25h[?25l[31ml"[m[34;109H4-48[27;48H[?25h[?25l[34;109H3-47[27;47H[?25h[?25l[34;109H2-46[27;46H[?25h[?25l[34;109H1-45[27;45H[?25h[?25l[34;109H0-44[27;44H[?25h[?25l[34;108H29-43[27;43H[?25h[?25l[34;109H8-42[27;42H[?25h[?25l[34;109H7-41[27;41H[?25h[?25l[34;109H6-40[27;40H[?25h[?25l[34;109H5-39[27;39H[?25h[?25l[31mAare equal"[m[34;109H6-40[27;40H[?25h[?25l[31mcare equal"[m[34;109H7-41[27;41H[?25h[?25l[31mtare equal"[m[34;109H8-42[27;42H[?25h[?25l[31miare equal"[m[34;109H9-43[27;43H[?25h[?25l[31moare equal"[m[34;108H30-44[27;44H[?25h[?25l[31mnare equal"[m[34;109H1-45[27;45H[?25h[?25l[31m are equal"[m[34;109H2-46[27;46H[?25h[?25l[1C[31mare equal"[m[34;109H3-47[27;47H[?25h[?25l[31mnare equal"[m[34;109H4-48[27;48H[?25h[?25l[31mdare equal"[m[34;109H5-49[27;49H[?25h[?25l[31m are equal"[m[34;109H6-50[27;50H[?25h[?25l[31mCare equal"[m[34;109H7-51[27;51H[?25h[?25l[31moare equal"[m[34;109H8-52[27;52H[?25h[?25l[31mmare equal"[m[34;109H9-53[27;53H[?25h[?25l[31meare equal"[m[34;108H40-54[27;54H[?25h[?25l[31mdare equal"[m[34;109H1-55[27;55H[?25h[?25l[31myare equal"[m[34;109H2-56[27;56H[?25h[?25l[31m are equal"[m[34;109H3-57[27;57H[?25h[?25l[34;109H4-58[27;58H[?25h[?25l[34;109H5-59[27;59H[?25h[?25l[34;109H6-60[27;60H[?25h[?25l[34;109H7-61[27;61H[?25h[?25l[34;109H8-62[27;62H[?25h[?25l[34;109H9-63[27;63H[?25h[?25l[34;108H50-64[27;64H[?25h[?25l[34;109H1-65[27;65H[?25h[?25l[34;109H2-66[27;66H[?25h[?25l[34;109H3-67[27;67H[?25h[?25l;[34;109H4-68[27;68H[?25h[?25l<[34;109H5-69[27;69H[?25h[?25l<[34;109H6-70[27;70H[?25h[?25le[34;109H7-71[27;71H[?25h[?25ln[34;109H8-72[27;72H[?25h[?25ld[34;109H9-73[27;73H[?25h[?25ll[34;108H60-74[27;74H[?25h[?25l[34;108H59-73[27;73H[?25h[?25l[34;109H8-72[27;72H[?25h[?25l[34;109H7-71[27;71H[?25h[?25l[34;109H6-70[27;70H[?25h[?25l[34;109H5-69[27;69H[?25h[?25l[34;109H4-68[27;68H[?25h[?25l<<endl[27;73H[K[34;109H3-67[27;67H[?25h[?25l[34;109H4-68[27;68H[?25h[?25l[34;109H5-69[27;69H[?25h[?25l[34;109H6-70[27;70H[?25h[?25l[34;109H7-71[27;71H[?25h[?25l[34;109H8-72[27;72H[?25h[?25l[34;109H9-73[27;73H[?25h[?25l;[34;108H60-74[27;74H[?25h[?25l[28;33r[28;1H[L[1;34r[34;105H[K[34;105H79,3-17[7C94%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[28;33r[28;1H[L[1;34r[34;105H[K[34;105H80,3-17[7C94%[28;17H[?25h[?25l[34;108H2-9 [28;9H[?25h[?25l[34;108H1  [28;1H[?25h[?25l[27;33r[33;1H
[1;34r[34;105H[K[34;105H79,1[10C96%[27;1H[?25h[?25l[34;108H2-9[27;9H[?25h[?25le[34;108H3-10[27;10H[?25h[?25ll[34;108H4-11[27;11H[?25h[?25ls[34;108H5-12[27;12H[?25h[?25l[38;5;130melse[m[34;108H6-13[27;13H[?25h[?25l{[106m{[28;9H}[m[34;108H7-14[27;14H[?25h[?25l}[106m}[m[28;9H}[34;108H8-15[27;15H[?25h[?25l[34;108H7-14[27;14H[?25h[?25l[28;33r[28;1H[L[1;34r[27;14H[K[28;9H}[34;105H[K[34;105H80,2-9[8C94%[28;9H[106m}[?25h[?25l[1;33r[m[33;1H
[1;34r[28;33r[28;1H[L[1;34r[27;9H[K[28;9H}[34;105H[K[34;105H81,2-9[8C94%[28;9H[106m}[?25h[?25l[m[26;13H{[28;9H}[34;106H0[27;9H[?25h[?25l[34;108H3-17[27;17H[?25h[?25lc[34;108H4-18[27;18H[?25h[?25lo[34;108H5-19[27;19H[?25h[?25li[34;108H6-20[27;20H[?25h[?25lt[34;108H7-21[27;21H[?25h[?25l[27;20H[K[34;108H6-20[27;20H[?25h[?25l[27;19H[K[34;108H5-19[27;19H[?25h[?25lu[34;108H6-20[27;20H[?25h[?25lt[34;108H7-21[27;21H[?25h[?25l<[34;108H8-22[27;22H[?25h[?25l<[34;108H9-23[27;23H[?25h[?25l[31m"[m[34;108H10-24[27;24H[?25h[?25l[31m"[m[34;109H1-25[27;25H[?25h[?25l[34;109H0-24[27;24H[?25h[?25l[31m "[m[34;109H1-25[27;25H[?25h[?25l[31m"[m[27;25H[K[34;109H0-24[27;24H[?25h[?25l[31mT"[m[34;109H1-25[27;25H[?25h[?25l[31mh"[m[34;109H2-26[27;26H[?25h[?25l[31me"[m[34;109H3-27[27;27H[?25h[?25l[31m "[m[34;109H4-28[27;28H[?25h[?25l[31mt"[m[34;109H5-29[27;29H[?25h[?25l[31mw"[m[34;109H6-30[27;30H[?25h[?25l[31mo"[m[34;109H7-31[27;31H[?25h[?25l[31m "[m[34;109H8-32[27;32H[?25h[?25l[31ml"[m[34;109H9-33[27;33H[?25h[?25l[31mo"[m[34;108H20-34[27;34H[?25h[?25l[31m"[m[27;34H[K[34;108H19-33[27;33H[?25h[?25l[31mi"[m[34;108H20-34[27;34H[?25h[?25l[31ms"[m[34;109H1-35[27;35H[?25h[?25l[31mt"[m[34;109H2-36[27;36H[?25h[?25l[31ms"[m[34;109H3-37[27;37H[?25h[?25l[31m "[m[34;109H4-38[27;38H[?25h[?25l[31ma"[m[34;109H5-39[27;39H[?25h[?25l[31m"[m[27;39H[K[34;109H4-38[27;38H[?25h[?25l[31m"[m[27;38H[K[34;109H3-37[27;37H[?25h[?25l[31mA"[m[34;109H4-38[27;38H[?25h[?25l[31mc"[m[34;109H5-39[27;39H[?25h[?25l[31m"[m[27;39H[K[34;109H4-38[27;38H[?25h[?25l[31m"[m[27;38H[K[34;109H3-37[27;37H[?25h[?25l[31m "[m[34;109H4-38[27;38H[?25h[?25l[31mA"[m[34;109H5-39[27;39H[?25h[?25l[31mc"[m[34;109H6-40[27;40H[?25h[?25l[31mt"[m[34;109H7-41[27;41H[?25h[?25l[31mi"[m[34;109H8-42[27;42H[?25h[?25l[31mo"[m[34;109H9-43[27;43H[?25h[?25l[31mn"[m[34;108H30-44[27;44H[?25h[?25l[31m "[m[34;109H1-45[27;45H[?25h[?25l[31ma"[m[34;109H2-46[27;46H[?25h[?25l[31mn"[m[34;109H3-47[27;47H[?25h[?25l[31mf"[m[34;109H4-48[27;48H[?25h[?25l[31m "[m[34;109H5-49[27;49H[?25h[?25l[31mC"[m[34;109H6-50[27;50H[?25h[?25l[31mo"[m[34;109H7-51[27;51H[?25h[?25l[31m"[m[27;51H[K[34;109H6-50[27;50H[?25h[?25l[31m"[m[27;50H[K[34;109H5-49[27;49H[?25h[?25l[31m"[m[27;49H[K[34;109H4-48[27;48H[?25h[?25l[31m"[m[27;48H[K[34;109H3-47[27;47H[?25h[?25l[31mf"[m[34;109H4-48[27;48H[?25h[?25l[31m"[m[27;48H[K[34;109H3-47[27;47H[?25h[?25l[31md"[m[34;109H4-48[27;48H[?25h[?25l[31m "[m[34;109H5-49[27;49H[?25h[?25l[31mC"[m[34;109H6-50[27;50H[?25h[?25l[31mO"[m[34;109H7-51[27;51H[?25h[?25l[31mm"[m[34;109H8-52[27;52H[?25h[?25l[31me"[m[34;109H9-53[27;53H[?25h[?25l[31md"[m[34;108H40-54[27;54H[?25h[?25l[31m"[m[27;54H[K[34;108H39-53[27;53H[?25h[?25l[31m"[m[27;53H[K[34;109H8-52[27;52H[?25h[?25l[31m"[m[27;52H[K[34;109H7-51[27;51H[?25h[?25l[31m"[m[27;51H[K[34;109H6-50[27;50H[?25h[?25l[31mo"[m[34;109H7-51[27;51H[?25h[?25l[31mm"[m[34;109H8-52[27;52H[?25h[?25l[31me"[m[34;109H9-53[27;53H[?25h[?25l[31md"[m[34;108H40-54[27;54H[?25h[?25l[31my"[m[34;109H1-55[27;55H[?25h[?25l[31m "[m[34;109H2-56[27;56H[?25h[?25l[31ma"[m[34;109H3-57[27;57H[?25h[?25l[31mr"[m[34;109H4-58[27;58H[?25h[?25l[31me"[m[34;109H5-59[27;59H[?25h[?25l[31m "[m[34;109H6-60[27;60H[?25h[?25l[31mn"[m[34;109H7-61[27;61H[?25h[?25l[31mo"[m[34;109H8-62[27;62H[?25h[?25l[31mt"[m[34;109H9-63[27;63H[?25h[?25l[31m "[m[34;108H50-64[27;64H[?25h[?25l[31mE"[m[34;109H1-65[27;65H[?25h[?25l[31mq"[m[34;109H2-66[27;66H[?25h[?25l[31mu"[m[34;109H3-67[27;67H[?25h[?25l[31ma"[m[34;109H4-68[27;68H[?25h[?25l[31ml"[m[34;109H5-69[27;69H[?25h[?25l[34;109H4-68[27;68H[?25h[?25l[34;109H3-67[27;67H[?25h[?25l[34;109H2-66[27;66H[?25h[?25l[34;109H1-65[27;65H[?25h[?25l[34;109H0-64[27;64H[?25h[?25l[34;109H1-65[27;65H[?25h[?25l[31mqual"[m[27;69H[K[34;109H0-64[27;64H[?25h[?25l[31mequal"[m[34;109H1-65[27;65H[?25h[?25l[34;109H2-66[27;66H[?25h[?25l[34;109H3-67[27;67H[?25h[?25l[34;109H4-68[27;68H[?25h[?25l[34;109H5-69[27;69H[?25h[?25l[34;109H6-70[27;70H[?25h[?25l<[34;109H7-71[27;71H[?25h[?25l<[34;109H8-72[27;72H[?25h[?25l[34;109H9-73[27;73H[?25h[?25le[34;108H60-74[27;74H[?25h[?25l[27;73H[K[34;108H59-73[27;73H[?25h[?25l[34;109H8-72[27;72H[?25h[?25le[34;109H9-73[27;73H[?25h[?25ln[34;108H60-74[27;74H[?25h[?25ld[34;109H1-75[27;75H[?25h[?25ll[34;109H2-76[27;76H[?25h[?25l;[34;109H3-77[27;77H[?25h[34;1H[K[27;76H[?25l[34;95H^[[27;76H[34;95H  [27;77H[34;105H80,62-76      94%[27;76H[?25h[?25l[34;95H:[27;76H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 89L, 2249C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:69:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::push_back(__gnu_cxx::__alloc_traits<std::allocator<int>, int>::value_type&)[m[Kâ€™
   69 |    action.push_back(column1[i][01;31m[K)[m[K;
      |                               [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>][m[Kâ€™
 1184 |       [01;36m[Kpush_back[m[K(const value_type& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K__gnu_cxx::__alloc_traits<std::allocator<int>, int>::value_type[m[Kâ€™ {aka â€˜[01m[Kint[m[Kâ€™} to â€˜[01m[Kconst value_type&[m[Kâ€™ {aka â€˜[01m[Kconst std::__cxx11::basic_string<char>&[m[Kâ€™}
 1184 |       push_back([01;36m[Kconst value_type& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>][m[Kâ€™
 1200 |       [01;36m[Kpush_back[m[K(value_type&& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K__gnu_cxx::__alloc_traits<std::allocator<int>, int>::value_type[m[Kâ€™ {aka â€˜[01m[Kint[m[Kâ€™} to â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::value_type&&[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>&&[m[Kâ€™}
 1200 |       push_back([01;36m[Kvalue_type&& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[KTasks.cpp:72:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::push_back(__gnu_cxx::__alloc_traits<std::allocator<int>, int>::value_type&)[m[Kâ€™
   72 |    comedy.push_back(column1[i][01;31m[K)[m[K;
      |                               [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/vector:67[m[K,
                 from [01m[KTasks.cpp:6[m[K:
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>][m[Kâ€™
 1184 |       [01;36m[Kpush_back[m[K(const value_type& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1184:35:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K__gnu_cxx::__alloc_traits<std::allocator<int>, int>::value_type[m[Kâ€™ {aka â€˜[01m[Kint[m[Kâ€™} to â€˜[01m[Kconst value_type&[m[Kâ€™ {aka â€˜[01m[Kconst std::__cxx11::basic_string<char>&[m[Kâ€™}
 1184 |       push_back([01;36m[Kconst value_type& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>][m[Kâ€™
 1200 |       [01;36m[Kpush_back[m[K(value_type&& __x)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_vector.h:1200:30:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[K__gnu_cxx::__alloc_traits<std::allocator<int>, int>::value_type[m[Kâ€™ {aka â€˜[01m[Kint[m[Kâ€™} to â€˜[01m[Kstd::vector<std::__cxx11::basic_string<char> >::value_type&&[m[Kâ€™ {aka â€˜[01m[Kstd::__cxx11::basic_string<char>&&[m[Kâ€™}
 1200 |       push_back([01;36m[Kvalue_type&& __x[m[K)
      |                 [01;36m[K~~~~~~~~~~~~~^~~[m[K
[01m[KTasks.cpp:79:2:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ before â€˜[01m[Kelse[m[Kâ€™
   79 |  [01;31m[Kelse[m[K{
      |  [01;31m[K^~~~[m[K
[01m[KTasks.cpp:77:48:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K{[m[Kâ€™
   77 |  if(equal(comedy.begin(),comedy.end(), action))[01;36m[K{[m[K
      |                                                [01;36m[K^[m[K
[01m[KTasks.cpp:[m[K At global scope:
[01m[KTasks.cpp:83:20:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn1[m[Kâ€™ was not declared in this scope
   83 |  int x= accumulate([01;31m[Kcolumn1[m[K.begin(),column1.end(),0);
      |                    [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:83:36:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn1[m[Kâ€™ was not declared in this scope
   83 |  int x= accumulate(column1.begin(),[01;31m[Kcolumn1[m[K.end(),0);
      |                                    [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:84:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcout[m[Kâ€™ does not name a type
   84 |  [01;31m[Kcout[m[K <<x<<endl;
      |  [01;31m[K^~~~[m[K
[01m[KTasks.cpp:85:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn7[m[Kâ€™ was not declared in this scope
   85 |  vector<string>::iterator it=find([01;31m[Kcolumn7[m[K.begin(),column7.end(),"Scorsese, Martin");
      |                                   [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:85:51:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn7[m[Kâ€™ was not declared in this scope
   85 |  vector<string>::iterator it=find(column7.begin(),[01;31m[Kcolumn7[m[K.end(),"Scorsese, Martin");
      |                                                   [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:86:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcout[m[Kâ€™ does not name a type
   86 |  [01;31m[Kcout[m[K<< *it<<"     "<<endl;
      |  [01;31m[K^~~~[m[K
[01m[KTasks.cpp:88:1:[m[K [01;31m[Kerror: [m[Kexpected declaration before â€˜[01m[K}[m[Kâ€™ token
   88 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/bits/char_traits.h:39[m[K,
                 from [01m[K/usr/include/c++/9/ios:40[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
/usr/include/c++/9/bits/stl_algobase.h: In instantiation of â€˜[01m[Kbool std::__equal_aux(_II1, _II1, _II2) [with _II1 = std::__cxx11::basic_string<char>*; _II2 = std::vector<std::__cxx11::basic_string<char> >][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/stl_algobase.h:1069:30:[m[K   required from â€˜[01m[Kbool std::equal(_II1, _II1, _II2) [with _II1 = __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >; _II2 = std::vector<std::__cxx11::basic_string<char> >][m[Kâ€™
[01m[KTasks.cpp:77:46:[m[K   required from here
[01m[K/usr/include/c++/9/bits/stl_algobase.h:844:58:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™
  844 |       typedef typename iterator_traits<_II2>::value_type [01;31m[K_ValueType2[m[K;
      |                                                          [01;31m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_algobase.h:849:9:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<std::__cxx11::basic_string<char> > >[m[Kâ€™
  845 |       const bool __simple = [01;31m[K((__is_integer<_ValueType1>::__value[m[K
      |                             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  846 | [01;31m[K         || __is_pointer<_ValueType1>::__value)[m[K
      |          [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  847 | [01;31m[K        && __is_pointer<_II1>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  848 | [01;31m[K        && __is_pointer<_II2>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  849 | [01;31m[K        && __are_same<_ValueType1, _ValueType2>::__value)[m[K;
      |         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ [A[K[Kg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:26:57 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 89L, 2249C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[2;25H[38;5;130melse[m{column8.push_back([31m0[m);}[3;25Hgetline(infile, awards,[31m';'[m);[4;25Hgetline(infile, image,[35m'\n'[m);[5;25Hcolumn10.push_back(image);[6;17H}[8;9Hsort(column8.begin(), column8.end());[9;9Hvector<string> action, comedy;[10;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[11;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[12;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){
               [9Caction.push_back(column1[i]);
                }[14;19H[K[15;11H      [38;5;130mif[m(column4[i]==[31m"Comedy"[m){       [15;49H[K[16;10H               comedy.push_back(column1[i]);[16;54H[K[17;11H      }[17;18H[K[18;9H}[18;10H[K[19;9Hsort(action.begin(),action.end());
        sort(comedy.begin(),comedy.end());[21;9H[38;5;130mif[m(equal(comedy.begin(),comedy.end(), action)){[22;7H          cout<< [31m"The two lists Action and Comedy are equal"[m<<endl;[23;9H[38;5;130melse[m{
                cout<<[31m"The two lists Action and Comedy are not equal"[m<<endl;
        }[25;10H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H80,62-76      Bot[24;76H[?25h[?25l[34;95H~@k[24;76H[34;95H   [23;13H[106m{[25;9H}[m[34;105H79,6-13 [23;13H[?25h[?25l[34;95H~@k[23;13H[34;95H   [22;73H[23;13H{[25;9H}[34;106H8,59-73[22;73H[?25h[?25l[34;95H~@k[22;73H[34;95H   [21;55H[106m{[26;9H}[m[34;106H7,48-55[21;55H[?25h[?25l[34;95H~@k[21;55H[34;95H   [20;42H[21;55H{[26;9H}[34;106H6,35-42[20;42H[?25h[?25l[34;95H~@k[20;42H[34;95H   [19;42H[34;106H5[19;42H[?25h[?25l[34;95H~@k[19;42H[34;95H   [18;9H[10;43H[106m{[18;9H}[m[34;106H4,2-9  [18;9H[?25h[?25l[34;95H~@k[18;9H[34;95H   [17;17H[10;43H{[15;41H[106m{[17;17H}[m[18;9H}[34;106H3,3-17[17;17H[?25h[?25l[34;95H~@k[17;17H[34;95H   [16;53H[15;41H{[17;17H}[34;106H2,32-53[16;53H[?25h[?25l[34;95H~@k[16;53H[34;95H   [15;48H[34;106H1,28-48[15;48H[?25h[?25l[34;95H~@k[15;48H[34;95H   [14;17H[12;41H[106m{[14;17H}[m[34;106H0,3-17 [14;17H[?25h[?25l[34;95H~@k[14;17H[34;95H   [13;53H[12;41H{[14;17H}[34;105H69,32-53[13;53H[?25h[?25l[34;95H~@k[13;53H[34;95H   [12;41H[106m{[14;17H}[m[34;106H8,27-41[12;41H[?25h[?25l[34;95H~@k[12;41H[34;95H   [11;60H[12;41H{[14;17H}[34;106H7,46-60[11;60H[?25h[?25l[34;95H~@k[11;60H[34;95H   [10;43H[106m{[18;9H}[m[34;106H6,36-43[10;43H[?25h[?25l[34;95H~@k[10;43H[34;95H   [9;38H[10;43H{[18;9H}[34;106H5,31-38[9;38H[?25h[?25l[34;95H~@k[9;38H[34;95H   [8;45H[34;106H4,38-45[8;45H[?25h[?25l[34;95Hi[8;45H[34;95H [8;45H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H64,38-45      Bot[8;45H[?25h[?25l[8;13H[106m([30C)[m[34;109H7-44[8;44H[?25h[?25l[8;13H([28C[106m()[m)[34;109H6-43[8;43H[?25h[?25l[34;109H5-42[8;42H[?25h[?25l()[34;109H4-41[8;41H[?25h[?25l[34;109H3-40[8;40H[?25h[?25l[34;109H2-39[8;39H[?25h[?25l[34;109H1-38[8;38H[?25h[?25l[34;109H0-37[8;37H[?25h[?25l[34;108H29-36[8;36H[?25h[?25l[34;109H8-35[8;35H[?25h[?25l[34;109H7-34[8;34H[?25h[?25l[34;109H6-33[8;33H[?25h[?25l[34;109H5-32[8;32H[?25h[?25l[34;109H4-31[8;31H[?25h[?25l[34;109H3-30[8;30H[?25h[?25l[106m()[m[34;109H2-29[8;29H[?25h[?25l[34;109H1-28[8;28H[?25h[?25l[34;109H0-27[8;27H[?25h[?25l()[34;108H19-26[8;26H[?25h[?25l[34;109H8-25[8;25H[?25h[?25l[34;109H7-24[8;24H[?25h[?25l[34;109H6-23[8;23H[?25h[?25l[34;106H3,1    [7;1H[?25h[?25l[34;106H4,16-23[8;23H[?25h[?25l[34;106H5[9;23H[?25h[?25l[34;109H5-22[9;22H[?25h[?25l> action, comedy;[9;38H[K[34;109H4-21[9;21H[?25h[?25l> action, comedy;[9;37H[K[34;109H3-20[9;20H[?25h[?25l> action, comedy;[9;36H[K[34;109H2-19[9;19H[?25h[?25l> action, comedy;[9;35H[K[34;109H1-18[9;18H[?25h[?25l> action, comedy;[9;34H[K[34;109H0-17[9;17H[?25h[?25l> action, comedy;[9;33H[K[34;108H9-16 [9;16H[?25h[?25li> action, comedy;[34;108H10-17[9;17H[?25h[?25ln> action, comedy;[34;109H1-18[9;18H[?25h[?25l[32mint[m> action, comedy;[34;109H2-19[9;19H[?25h[34;1H[K[9;18H[?25l[34;95H^[[9;18H[34;95H  [9;19H[34;105H65,11-18      Bot[9;18H[?25h[?25l[34;95H:[9;18H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 89L, 2246C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:79:2:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ before â€˜[01m[Kelse[m[Kâ€™
   79 |  [01;31m[Kelse[m[K{
      |  [01;31m[K^~~~[m[K
[01m[KTasks.cpp:77:48:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K{[m[Kâ€™
   77 |  if(equal(comedy.begin(),comedy.end(), action))[01;36m[K{[m[K
      |                                                [01;36m[K^[m[K
[01m[KTasks.cpp:[m[K At global scope:
[01m[KTasks.cpp:83:20:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn1[m[Kâ€™ was not declared in this scope
   83 |  int x= accumulate([01;31m[Kcolumn1[m[K.begin(),column1.end(),0);
      |                    [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:83:36:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn1[m[Kâ€™ was not declared in this scope
   83 |  int x= accumulate(column1.begin(),[01;31m[Kcolumn1[m[K.end(),0);
      |                                    [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:84:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcout[m[Kâ€™ does not name a type
   84 |  [01;31m[Kcout[m[K <<x<<endl;
      |  [01;31m[K^~~~[m[K
[01m[KTasks.cpp:85:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn7[m[Kâ€™ was not declared in this scope
   85 |  vector<string>::iterator it=find([01;31m[Kcolumn7[m[K.begin(),column7.end(),"Scorsese, Martin");
      |                                   [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:85:51:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn7[m[Kâ€™ was not declared in this scope
   85 |  vector<string>::iterator it=find(column7.begin(),[01;31m[Kcolumn7[m[K.end(),"Scorsese, Martin");
      |                                                   [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:86:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcout[m[Kâ€™ does not name a type
   86 |  [01;31m[Kcout[m[K<< *it<<"     "<<endl;
      |  [01;31m[K^~~~[m[K
[01m[KTasks.cpp:88:1:[m[K [01;31m[Kerror: [m[Kexpected declaration before â€˜[01m[K}[m[Kâ€™ token
   88 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/bits/char_traits.h:39[m[K,
                 from [01m[K/usr/include/c++/9/ios:40[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
/usr/include/c++/9/bits/stl_algobase.h: In instantiation of â€˜[01m[Kbool std::__equal_aux(_II1, _II1, _II2) [with _II1 = int*; _II2 = std::vector<int>][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/stl_algobase.h:1069:30:[m[K   required from â€˜[01m[Kbool std::equal(_II1, _II1, _II2) [with _II1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; _II2 = std::vector<int>][m[Kâ€™
[01m[KTasks.cpp:77:46:[m[K   required from here
[01m[K/usr/include/c++/9/bits/stl_algobase.h:844:58:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  844 |       typedef typename iterator_traits<_II2>::value_type [01;31m[K_ValueType2[m[K;
      |                                                          [01;31m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_algobase.h:849:9:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  845 |       const bool __simple = [01;31m[K((__is_integer<_ValueType1>::__value[m[K
      |                             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  846 | [01;31m[K         || __is_pointer<_ValueType1>::__value)[m[K
      |          [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  847 | [01;31m[K        && __is_pointer<_II1>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  848 | [01;31m[K        && __is_pointer<_II2>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  849 | [01;31m[K        && __are_same<_ValueType1, _ValueType2>::__value)[m[K;
      |         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:27:49 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 89L, 2246C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25Hgetline(infile, actor,[31m';'[m);[2;25Hcolumn5.push_back(actor);[3;25Hgetline(infile, actress,[31m';'[m);[4;25Hcolumn6.push_back(actress);[5;25Hgetline(infile, director,[31m';'[m);[6;25Hcolumn7.push_back(director);[7;25Hgetline(infile,popularity,[31m';'[m);[8;25H[38;5;130mif[m(!popularity.empty()){[9;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[10;25H[38;5;130melse[m{column8.push_back([31m0[m);}[11;25Hgetline(infile, awards,[31m';'[m);[12;25Hgetline(infile, image,[35m'\n'[m);
               [9Ccolumn10.push_back(image);
                }[14;19H[K[15;11H[K[16;9Hsort(column8.begin(), column8.end());[16;46H[K[17;9Hvector<[32mint[m> action, comedy;[18;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[18;44H[K[19;9H        cout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;
                [38;5;130mif[m(column4[i]==[31m"Action"[m){[21;14H           action.push_back(column1[i]);[22;7H          }[22;18H[K[23;17H[38;5;130mif[m(column4[i]==[31m"Comedy"[m){
                        comedy.push_back(column1[i]);[24;55H[K[25;5H            }[25;18H[K[26;5H    }[26;10H[K[27;1H        sort(action.begin(),action.end());
        sort(comedy.begin(),comedy.end());[28;44H[K[29;5H    [38;5;130mif[m(equal(comedy.begin(),comedy.end(), action)){
                cout<< [31m"The two lists Action and Comedy are equal"[m<<endl;
        [38;5;130melse[m{[31;14H[K[32;17Hcout<<[31m"The two lists Action and Comedy are not equal"[m<<endl;
        }[33;10H[K[34;105H65,11-18      85%[17;18H[?25h[?25l[34;95H~@k[17;18H[34;95H   [18;18H[34;106H6[18;18H[?25h[?25l[34;95H~@k[18;18H[34;95H   [19;18H[34;106H7,4-18 [19;18H[?25h[?25l[34;95H~@k[19;18H[34;95H   [20;18H[34;106H8[20;18H[?25h[?25l[34;95H~@k[20;18H[34;95H   [21;24H[34;106H9,3-24[21;24H[?25h[?25l[34;95H~@k[21;24H[34;95H   [22;17H[20;41H[106m{[22;17H}[m[34;105H70,3-17[22;17H[?25h[?25l[34;95H~@k[22;17H[34;95H   [23;18H[20;41H{[22;17H}[34;106H1,4-18[23;18H[?25h[?25l[34;95H~@k[23;18H[34;95H   [24;24H[34;106H2,3-24[24;24H[?25h[?25l[34;95H~@k[24;24H[34;95H   [25;17H[23;41H[106m{[25;17H}[m[34;106H3,3-17[25;17H[?25h[?25l[34;95H~@k[25;17H[34;95H   [26;9H[18;43H[106m{[m[23;41H{[25;17H}[26;9H[106m}[m[34;106H4,2-9 [26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [27;18H[18;43H{[26;9H}[34;106H5,11-18[27;18H[?25h[?25l[34;95H~@k[27;18H[34;95H   [28;18H[34;106H6[28;18H[?25h[?25l[34;95H~@k[28;18H[34;95H   [28;18H[1;33r[33;1H
[1;34r[33;9H}[34;1H[K[34;105H77,11-18      87%[28;18H[?25h[?25l[34;95H~@k[28;18H[34;95H   [28;18H[1;33r[33;1H
[1;34r[33;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[34;105H[K[34;105H78,4-18[7C89%[28;18H[?25h[?25l[34;95H~@k[28;18H[34;95H   [28;19H[34;108H5-19[28;19H[?25h[?25l[34;95H~@k[28;19H[34;95H   [28;20H[34;108H6-20[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;21H[34;108H7-21[28;21H[?25h[?25l[34;95H~@k[28;21H[34;95H   [28;20H[34;108H6-20[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;13H[1;33r[33;1H
[1;34r[28;13H[106m{[30;9H}[m[33;9Hcout <<x<<endl;[34;105H[K[34;105H79,6-13[7C91%[28;13H[?25h[?25l[34;95H~@k[28;13H[34;95H   [28;12H[1C{[30;9H}[34;108H5-12[28;12H[?25h[?25l[34;95H~@k[28;12H[34;95H   [28;11H[34;108H4-11[28;11H[?25h[?25l[34;95H~@k[28;11H[34;95H   [28;10H[34;108H3-10[28;10H[?25h[?25l[34;95H~@k[28;10H[34;95H   [28;9H[34;108H2-9 [28;9H[?25h[?25l[34;95H^M[28;9H[34;95H  [28;17H[1;33r[33;1H
[1;34r[33;9Hvector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[34;105H[K[34;105H80,3-17[7C92%[28;17H[?25h[?25l[34;95Hi[28;17H[34;95H [28;17H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H80,3-17[7C92%[28;17H[?25h[?25l[27;13H[106m{[29;9H}[m[34;105H79,7-14[27;14H[?25h[?25l{[29;9H}[34;106H8,3-17[26;17H[?25h[?25l[34;108H2-9 [26;9H[?25h[?25l[34;108H1  [26;1H[?25h[?25l[34;106H9[27;1H[?25h[?25l[28;33r[28;1H[L[1;34r[27;9H[K[28;17H[38;5;130melse[m{[34;105H[K[34;105H80,2-9[8C91%[28;9H[?25h[?25l[34;105H79,1  [27;1H[?25h[?25l[8C}[25;55H[106m{[27;9H}[m[34;108H3-10[27;10H[?25h[?25l[25;55H{[27;9H}[34;105H80,2-9 [28;9H[?25h[?25l[38;5;130melse[m{[28;17H[K[34;108H1  [28;1H[?25h[34;1H[K[28;1H[?25l[34;95H^[[28;1H[34;95H  [28;1H[34;105H80,1-8[8C91%[28;8H[?25h[?25l[34;95H:[28;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 90L, 2249C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:84:20:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn1[m[Kâ€™ was not declared in this scope
   84 |  int x= accumulate([01;31m[Kcolumn1[m[K.begin(),column1.end(),0);
      |                    [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:84:36:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn1[m[Kâ€™ was not declared in this scope
   84 |  int x= accumulate(column1.begin(),[01;31m[Kcolumn1[m[K.end(),0);
      |                                    [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:85:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcout[m[Kâ€™ does not name a type
   85 |  [01;31m[Kcout[m[K <<x<<endl;
      |  [01;31m[K^~~~[m[K
[01m[KTasks.cpp:86:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn7[m[Kâ€™ was not declared in this scope
   86 |  vector<string>::iterator it=find([01;31m[Kcolumn7[m[K.begin(),column7.end(),"Scorsese, Martin");
      |                                   [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:86:51:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcolumn7[m[Kâ€™ was not declared in this scope
   86 |  vector<string>::iterator it=find(column7.begin(),[01;31m[Kcolumn7[m[K.end(),"Scorsese, Martin");
      |                                                   [01;31m[K^~~~~~~[m[K
[01m[KTasks.cpp:87:2:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcout[m[Kâ€™ does not name a type
   87 |  [01;31m[Kcout[m[K<< *it<<"     "<<endl;
      |  [01;31m[K^~~~[m[K
[01m[KTasks.cpp:89:1:[m[K [01;31m[Kerror: [m[Kexpected declaration before â€˜[01m[K}[m[Kâ€™ token
   89 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/9/bits/char_traits.h:39[m[K,
                 from [01m[K/usr/include/c++/9/ios:40[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
/usr/include/c++/9/bits/stl_algobase.h: In instantiation of â€˜[01m[Kbool std::__equal_aux(_II1, _II1, _II2) [with _II1 = int*; _II2 = std::vector<int>][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/stl_algobase.h:1069:30:[m[K   required from â€˜[01m[Kbool std::equal(_II1, _II1, _II2) [with _II1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; _II2 = std::vector<int>][m[Kâ€™
[01m[KTasks.cpp:77:46:[m[K   required from here
[01m[K/usr/include/c++/9/bits/stl_algobase.h:844:58:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  844 |       typedef typename iterator_traits<_II2>::value_type [01;31m[K_ValueType2[m[K;
      |                                                          [01;31m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_algobase.h:849:9:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  845 |       const bool __simple = [01;31m[K((__is_integer<_ValueType1>::__value[m[K
      |                             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  846 | [01;31m[K         || __is_pointer<_ValueType1>::__value)[m[K
      |          [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  847 | [01;31m[K        && __is_pointer<_II1>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  848 | [01;31m[K        && __is_pointer<_II2>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  849 | [01;31m[K        && __are_same<_ValueType1, _ValueType2>::__value)[m[K;
      |         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:28:37 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 90L, 2249C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130melse[m{column8.push_back([31m0[m);}[2;25Hgetline(infile, awards,[31m';'[m);[3;25Hgetline(infile, image,[35m'\n'[m);[4;25Hcolumn10.push_back(image);[5;17H}[7;9Hsort(column8.begin(), column8.end());[8;9Hvector<[32mint[m> action, comedy;[9;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[10;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[11;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[12;25Haction.push_back(column1[i]);
                }
                [38;5;130mif[m(column4[i]==[31m"Comedy"[m){     [15;11H              comedy.push_back(column1[i]);[15;55H[K[16;10H       }[16;18H[K[17;9H}[17;11H[K[18;9Hsort(action.begin(),action.end());[18;43H[K[19;9Hsort(comedy.begin(),comedy.end());
        [38;5;130mif[m(equal(comedy.begin(),comedy.end(), action)){[21;14H   cout<< [31m"The two lists Action and Comedy are equal"[m<<endl;[22;7H  }[22;10H[K[23;9H[38;5;130melse[m{
                cout<<[31m"The two lists Action and Comedy are not equal"[m<<endl;
        }[25;10H[K[26;5H    }[26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H80,1-8[8CBot[23;8H[?25h[?25l[34;95H~@k[23;8H[34;95H   [24;8H[34;106H1[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [25;8H[34;106H2[25;8H[?25h[?25l[34;95H~@k[25;8H[34;95H   [25;9H[23;13H[106m{[25;9H}[m[34;108H2-9[25;9H[?25h[?25l[34;95H~@k[25;9H[34;95H   [26;9H[23;13H{[25;9H}[34;106H3[26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [27;9H[34;106H4[27;9H[?25h[?25l[34;95H~@k[27;9H[34;95H   [26;9H[34;106H3[26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [26;9H[?25h[?25l[34;95H~@k[26;9H[34;95H   [26;9H[?25h[?25l[34;95Hi[26;9H[34;95H [26;9H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H83,2-9[8CBot[26;9H[?25h[?25l[34;108H3-10[26;10H[?25h[?25l[26;9H[K[34;108H2-9 [26;9H[?25h[34;1H[K[26;8H[?25l[34;95H^[[26;8H[34;95H  [26;9H[34;105H83,1-8[8CBot[26;8H[?25h[?25l[34;95H:[26;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 90L, 2248C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
In file included from [01m[K/usr/include/c++/9/bits/char_traits.h:39[m[K,
                 from [01m[K/usr/include/c++/9/ios:40[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
/usr/include/c++/9/bits/stl_algobase.h: In instantiation of â€˜[01m[Kbool std::__equal_aux(_II1, _II1, _II2) [with _II1 = int*; _II2 = std::vector<int>][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/stl_algobase.h:1069:30:[m[K   required from â€˜[01m[Kbool std::equal(_II1, _II1, _II2) [with _II1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; _II2 = std::vector<int>][m[Kâ€™
[01m[KTasks.cpp:77:46:[m[K   required from here
[01m[K/usr/include/c++/9/bits/stl_algobase.h:844:58:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  844 |       typedef typename iterator_traits<_II2>::value_type [01;31m[K_ValueType2[m[K;
      |                                                          [01;31m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_algobase.h:849:9:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  845 |       const bool __simple = [01;31m[K((__is_integer<_ValueType1>::__value[m[K
      |                             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  846 | [01;31m[K         || __is_pointer<_ValueType1>::__value)[m[K
      |          [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  847 | [01;31m[K        && __is_pointer<_II1>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  848 | [01;31m[K        && __is_pointer<_II2>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  849 | [01;31m[K        && __are_same<_ValueType1, _ValueType2>::__value)[m[K;
      |         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:29:09 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 90L, 2248C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130melse[m{column8.push_back([31m0[m);}[2;25Hgetline(infile, awards,[31m';'[m);[3;25Hgetline(infile, image,[35m'\n'[m);[4;25Hcolumn10.push_back(image);[5;17H}[7;9Hsort(column8.begin(), column8.end());[8;9Hvector<[32mint[m> action, comedy;[9;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[10;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[11;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[12;25Haction.push_back(column1[i]);
                }
                [38;5;130mif[m(column4[i]==[31m"Comedy"[m){     [15;11H              comedy.push_back(column1[i]);[15;55H[K[16;10H       }[16;18H[K[17;9H}[17;11H[K[18;9Hsort(action.begin(),action.end());[18;43H[K[19;9Hsort(comedy.begin(),comedy.end());
        [38;5;130mif[m(equal(comedy.begin(),comedy.end(), action)){[21;14H   cout<< [31m"The two lists Action and Comedy are equal"[m<<endl;[22;7H  }[22;10H[K[23;9H[38;5;130melse[m{
                cout<<[31m"The two lists Action and Comedy are not equal"[m<<endl;
        }[25;10H[K[26;5H    [26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H83,1-8[8CBot[26;8H[?25h[?25l[34;95H~@k[26;8H[34;95H   [27;8H[34;106H4[27;8H[?25h[?25l[34;95H~@k[27;8H[34;95H   [26;8H[34;106H3[26;8H[?25h[?25l[34;95H~@k[26;8H[34;95H   [25;8H[34;106H2[25;8H[?25h[?25l[34;95H~@k[25;8H[34;95H   [24;8H[34;106H1[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [23;8H[34;106H0[23;8H[?25h[?25l[34;95H~@k[23;8H[34;95H   [22;8H[34;105H79[22;8H[?25h[?25l[34;95H~@k[22;8H[34;95H   [21;8H[34;106H8[21;8H[?25h[?25l[34;95H~@k[21;8H[34;95H   [20;8H[34;106H7[20;8H[?25h[?25l[34;95H~@k[20;8H[34;95H   [19;8H[34;106H6[19;8H[?25h[?25l[34;95H~@k[19;8H[34;95H   [18;8H[34;106H5[18;8H[?25h[?25l[34;95H~@k[18;8H[34;95H   [17;8H[34;106H4[17;8H[?25h[?25l[34;95H~@k[17;8H[34;95H   [16;8H[34;106H3[16;8H[?25h[?25l[34;95H~@k[16;8H[34;95H   [15;8H[34;106H2[15;8H[?25h[?25l[34;95H~@k[15;8H[34;95H   [14;8H[34;106H1[14;8H[?25h[?25l[34;95H~@k[14;8H[34;95H   [13;8H[34;106H0[13;8H[?25h[?25l[34;95H~@k[13;8H[34;95H   [12;8H[34;105H69[12;8H[?25h[?25l[34;95H~@k[12;8H[34;95H   [11;8H[34;106H8[11;8H[?25h[?25l[34;95H~@k[11;8H[34;95H   [10;8H[34;106H7[10;8H[?25h[?25l[34;95H~@k[10;8H[34;95H   [9;8H[34;106H6[9;8H[?25h[?25l[34;95H~@k[9;8H[34;95H   [8;8H[34;106H5[8;8H[?25h[?25l[34;95H~@k[8;8H[34;95H   [7;8H[34;106H4[7;8H[?25h[?25l[34;95H~@k[7;8H[34;95H   [6;1H[34;106H3,0-1[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[34;1H[K[34;105H62,1-8[8C98%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m(!popularity.empty()){[34;105H[K[34;105H61,1-8[8C96%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H60,1-8[8C94%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hcolumn7.push_back(director);[34;105H[K[34;105H59,1-8[8C92%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H58,1-8[8C91%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hcolumn6.push_back(actress);[34;105H[K[34;105H57,1-8[8C89%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H56,1-8[8C87%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hcolumn5.push_back(actor);[34;105H[K[34;105H55,1-8[8C85%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H54,1-8[8C84%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hcolumn4.push_back(subject);[34;105H[K[34;105H53,1-8[8C82%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H52,1-8[8C80%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hcolumn3.push_back(title);[34;105H[K[34;105H51,1-8[8C78%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, title,[31m';'[m);[34;105H[K[34;105H50,1-8[8C77%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H49,1-8[8C75%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H48,1-8[8C73%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;17H}[34;105H[K[34;105H47,1-8[8C71%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H46,1-8[8C70%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H45,1-8[8C68%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H44,1-8[8C66%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H43,1-8[8C64%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H42,1-8[8C63%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25H[38;5;130melse[m{column1.push_back([31m0[m); }[34;105H[K[34;105H41,1-8[8C61%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H40,1-8[8C59%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;33Hcolumn1.push_back(stoi(year));[34;105H[K[34;105H39,1-8[8C57%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m (!year.empty()){[34;105H[K[34;105H38,1-8[8C56%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H37,0-1[8C54%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;105H[K[34;105H36,1-8[8C52%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[34;105H[K[34;105H35,1-8[8C50%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H34,1-8[8C49%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;105H[K[34;105H33,1-8[8C47%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;105H[K[34;105H32,1-8[8C45%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[32mint[m sum=[31m0[m;[34;105H[K[34;105H31,1-8[8C43%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[34;105H[K[34;105H30,1-8[8C42%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;105H[K[34;105H29,0-1[8C40%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H28,1-8[8C38%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H27,1-8[8C36%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H26,1-8[8C35%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H25,1-8[8C33%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;105H[K[34;105H24,1-8[8C31%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;105H[K[34;105H23,1-8[8C29%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;105H[K[34;105H22,1-8[8C28%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;105H[K[34;105H21,1-8[8C26%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;9Hifstream infile;[34;105H[K[34;105H20,1-8[8C24%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[32mint[m main(){[34;105H[K[34;105H19,1-8[8C22%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H18,1-8[8C21%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[38;5;130musing[m [32mnamespace[m std;[34;105H[K[34;105H17,1-8[8C19%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H16,1-8[8C17%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<bits/stdc++.h>[m[34;105H[K[34;105H15,1-8[8C15%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<algorithm>[m[34;105H[K[34;105H14,8[10C14%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<functional>[m[34;105H[K[34;105H13,0-1[8C12%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<numeric>[m[34;105H[K[34;105H12,8[10C10%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;1H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<vector>[m[34;105H[K[34;105H11,0-1[9C8%[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<limits>[m[34;105H[K[34;105H10,8[11C7%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<string>[m[34;105H[K[34;105H9,8[12C5%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<fstream>[m[34;105H[K[34;105H8,8[12C3%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<iostream>[m[34;105H[K[34;105H7,8[12C1%[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [6;8H[1;33r[1;1H[L[1;34r[34;105H[K[34;105H6,8[11CTop[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [5;8H[34;105H5[5;8H[?25h[?25l[34;95H~@k[5;8H[34;95H   [4;8H[34;105H4[4;8H[?25h[?25l[34;95H~@k[4;8H[34;95H   [5;8H[34;105H5[5;8H[?25h[?25l[34;95H~@k[5;8H[34;95H   [6;8H[34;105H6[6;8H[?25h[?25l[34;95H~@k[6;8H[34;95H   [7;8H[34;105H7[7;8H[?25h[?25l[34;95H~@k[7;8H[34;95H   [8;8H[34;105H8[8;8H[?25h[?25l[34;95H~@k[8;8H[34;95H   [9;8H[34;105H9[9;8H[?25h[?25l[34;95H~@k[9;8H[34;95H   [10;8H[34;105H10,8[10;8H[?25h[?25l[34;95H~@k[10;8H[34;95H   [11;1H[34;106H1,0-1[11;1H[?25h[?25l[34;95H~@k[11;1H[34;95H   [11;1H[?25h[?25l[34;95H~@k[11;1H[34;95H   [10;8H[34;106H0,8  [10;8H[?25h[?25l[34;95H~@k[10;8H[34;95H   [10;9H[34;108H9[10;9H[?25h[?25l[34;95H~@k[10;9H[34;95H   [10;10H[34;108H10[10;10H[?25h[?25l[34;95H~@k[10;10H[34;95H   [10;11H[34;109H1[10;11H[?25h[?25l[34;95H~@k[10;11H[34;95H   [10;12H[34;109H2[10;12H[?25h[?25l[34;95H~@k[10;12H[34;95H   [10;13H[34;109H3[10;13H[?25h[?25l[34;95H~@k[10;13H[34;95H   [10;14H[34;109H4[10;14H[?25h[?25l[34;95H~@k[10;14H[34;95H   [10;15H[34;109H5[10;15H[?25h[?25l[34;95H~@k[10;15H[34;95H   [10;16H[34;109H6[10;16H[?25h[?25l[34;95H~@k[10;16H[34;95H   [10;17H[34;109H7[10;17H[?25h[?25l[34;95H~@k[10;17H[34;95H   [10;18H[34;109H8[10;18H[?25h[?25l[34;95H~@k[10;18H[34;95H   [10;19H[34;109H9[10;19H[?25h[?25l[34;95H~@k[10;19H[34;95H   [10;20H[34;108H20[10;20H[?25h[?25l[34;95H~@k[10;20H[34;95H   [10;21H[34;109H1[10;21H[?25h[?25l[34;95H~@k[10;21H[34;95H   [10;22H[34;109H2[10;22H[?25h[?25l[34;95H~@k[10;22H[34;95H   [10;23H[34;109H3[10;23H[?25h[?25l[34;95H~@k[10;23H[34;95H   [10;24H[34;109H4[10;24H[?25h[?25l[34;95H~@k[10;24H[34;95H   [10;24H[?25h[?25l[34;95H~@k[10;24H[34;95H   [10;24H[?25h[?25l[34;95H~@k[10;24H[34;95H   [10;23H[34;109H3[10;23H[?25h[?25l[34;95H~@k[10;23H[34;95H   [10;22H[34;109H2[10;22H[?25h[?25l[34;95Hi[10;22H[34;95H [10;22H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H10,22[9CTop[10;22H[?25h[?25l[34;109H3[10;23H[?25h[?25l[34;109H4[10;24H[?25h[?25l[34;109H5[10;25H[?25h[?25l[10;10H[35m<[mbits/stdc++.h[10;24H[K[34;109H4[10;24H[?25h[?25l[10;23H[K[34;109H3[10;23H[?25h[?25l[10;22H[K[34;109H2[10;22H[?25h[?25l[10;21H[K[34;109H1[10;21H[?25h[?25l[10;20H[K[34;109H0[10;20H[?25h[?25l[10;19H[K[34;108H19[10;19H[?25h[?25l[10;18H[K[34;109H8[10;18H[?25h[?25l[10;17H[K[34;109H7[10;17H[?25h[?25l[10;16H[K[34;109H6[10;16H[?25h[?25l[10;15H[K[34;109H5[10;15H[?25h[?25l[10;14H[K[34;109H4[10;14H[?25h[?25l[10;13H[K[34;109H3[10;13H[?25h[?25l[10;12H[K[34;109H2[10;12H[?25h[?25l[10;11H[K[34;109H1[10;11H[?25h[?25l#include [10;10H[K[34;109H0[10;10H[?25h[?25l[34;108H9 [10;9H[?25h[?25l[10;8H[K[34;108H8[10;8H[?25h[?25l[10;7H[K[34;108H7[10;7H[?25h[?25l[10;6H[K[34;108H6[10;6H[?25h[?25l[10;5H[K[34;108H5[10;5H[?25h[?25l[10;4H[K[34;108H4[10;4H[?25h[?25l[10;3H[K[34;108H3[10;3H[?25h[?25l[10;2H[K[34;108H2[10;2H[?25h[?25l[10;1H[K[34;108H1[10;1H[?25h[?25l[9;33r[33;1H
[1;34r[9;1H[35m#include [m[31m<algorithm>[m[33;33Hcolumn1.push_back(stoi(year));[34;105H[K[34;105H9,21[10CTop[9;21H[?25h[34;1H[K[9;20H[?25l[34;95H^[[9;20H[34;95H  [9;21H[34;105H9,20[10CTop[9;20H[?25h[?25l[34;95H:[9;20H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 89L, 2223C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
In file included from [01m[K/usr/include/c++/9/bits/char_traits.h:39[m[K,
                 from [01m[K/usr/include/c++/9/ios:40[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
/usr/include/c++/9/bits/stl_algobase.h: In instantiation of â€˜[01m[Kbool std::__equal_aux(_II1, _II1, _II2) [with _II1 = int*; _II2 = std::vector<int>][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/stl_algobase.h:1069:30:[m[K   required from â€˜[01m[Kbool std::equal(_II1, _II1, _II2) [with _II1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; _II2 = std::vector<int>][m[Kâ€™
[01m[KTasks.cpp:76:46:[m[K   required from here
[01m[K/usr/include/c++/9/bits/stl_algobase.h:844:58:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  844 |       typedef typename iterator_traits<_II2>::value_type [01;31m[K_ValueType2[m[K;
      |                                                          [01;31m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_algobase.h:849:9:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  845 |       const bool __simple = [01;31m[K((__is_integer<_ValueType1>::__value[m[K
      |                             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  846 | [01;31m[K         || __is_pointer<_ValueType1>::__value)[m[K
      |          [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  847 | [01;31m[K        && __is_pointer<_II1>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  848 | [01;31m[K        && __is_pointer<_II2>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  849 | [01;31m[K        && __are_same<_ValueType1, _ValueType2>::__value)[m[K;
      |         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:29:52 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 89L, 2223C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[35m#include [m[31m<iostream>[m
[35m#include [m[31m<fstream>[m
[35m#include [m[31m<string>[m
[35m#include [m[31m<limits>[m
[35m#include [m[31m<vector>[m
[35m#include [m[31m<numeric>[m
[35m#include [m[31m<functional>[m
[35m#include [m[31m<algorithm>[m

[38;5;130musing[m [32mnamespace[m std;

[32mint[m main(){[13;12H[K[14;1H        ifstream infile;[14;26H[K[15;9Hinfile.open([31m"films.txt"[m);[15;35H[K[16;9H[38;5;130mif[m(infile.fail()){[16;27H[K[17;11H      cout << [31m"Error with file"[m;[18;10H       exit([31m1[m);[18;28H[K[19;9H}[19;10H[K[20;1H        infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[21;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[22;7H  [22;9H[K[23;9Hvector <[32mint[m> column1, column2,column8;
        vector<string> column3,column4,column5,column6,column7,column10;
        [32mint[m sum=[31m0[m;[25;20H[K[26;5H    [32mdouble[m average;[26;24H[K[27;1H        [38;5;130mwhile[m(infile.good()){[27;30H[K[28;5H[K[29;5H                    string year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,[31m';'[m);[30;51H[K[31;5H                    [31;25H[K[32;25H[38;5;130mif[m (!year.empty()){
                                column1.push_back(stoi(year));[34;105H9,20[10CTop[9;20H[?25h[?25l[34;95H~@k[9;20H[34;95H   [8;20H[34;105H8[8;20H[?25h[?25l[34;95H~@k[8;20H[34;95H   [9;20H[34;105H9[9;20H[?25h[?25l[34;95H~@k[9;20H[34;95H   [10;1H[34;105H10,0-1[10;1H[?25h[?25l[34;95H~@k[10;1H[34;95H   [11;20H[34;106H1,20 [11;20H[?25h[?25l[34;95H~@k[11;20H[34;95H   [12;1H[34;106H2,0-1[12;1H[?25h[?25l[34;95H~@k[12;1H[34;95H   [13;11H[34;106H3,11 [13;11H[?25h[?25l[34;95H~@k[13;11H[34;95H   [14;20H[34;106H4,13-20[14;20H[?25h[?25l[34;95H~@k[14;20H[34;95H   [15;20H[106m([11C)[m[34;106H5[15;20H[?25h[?25l[34;95H~@k[15;20H[34;95H   [16;20H[15;20H([11C)[34;106H6[16;20H[?25h[?25l[34;95H~@k[16;20H[34;95H   [17;20H[34;106H7,6-20 [17;20H[?25h[?25l[34;95H~@k[17;20H[34;95H   [18;20H[34;106H8[18;20H[?25h[?25l[34;95H~@k[18;20H[34;95H   [19;9H[16;26H[106m{[19;9H}[m[34;106H9,2-9 [19;9H[?25h[?25l[34;95H~@k[19;9H[34;95H   [20;20H[16;26H{[19;9H}[34;105H20,13-20[20;20H[?25h[?25l[34;95H~@k[20;20H[34;95H   [21;20H[34;106H1[21;20H[?25h[?25l[34;95H~@k[21;20H[34;95H   [22;8H[34;106H2,1-8  [22;8H[?25h[?25l[34;95H~@k[22;8H[34;95H   [23;20H[34;106H3,13-20[23;20H[?25h[?25l[34;95H~@k[23;20H[34;95H   [24;20H[34;106H4[24;20H[?25h[?25l[34;95H~@k[24;20H[34;95H   [25;18H[34;106H5,11-18[25;18H[?25h[?25l[34;95H~@k[25;18H[34;95H   [26;20H[34;106H6,13-20[26;20H[?25h[?25l[34;95H~@k[26;20H[34;95H   [27;20H[34;106H7[27;20H[?25h[?25l[34;95H~@k[27;20H[34;95H   [28;1H[34;106H8,0-1  [28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;9H}[34;1H[K[34;105H29,3-24[8C1%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column1.push_back([31m0[m); }[34;105H[K[34;105H30,3-24[8C3%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[34;105H[K[34;105H31,3-24[8C5%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H32,3-24[8C7%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[34;105H[K[34;105H33,3-24[8C8%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;9H[1;33r[33;1H
[1;34r[26;43H[106m{[28;9H}[m[33;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H34,2-9[8C10%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;24H[1;33r[33;1H
[1;34r[25;43H{[27;9H}[33;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H35,3-24[7C12%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H36,0-1[8C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H37,3-24[7C16%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;16H[1;33r[33;1H
[1;34r[34;105H[K[34;105H38,2-16[7C17%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;105H[K[34;105H39,3-24[7C19%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;105H[K[34;105H40,3-24[7C21%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;44H[106m{[28;17H}[m[33;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H41,3-17[7C23%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;24H[1;33r[33;1H
[1;34r[25;44H{[27;17H}[33;25Hcolumn4.push_back(subject);[34;105H[K[34;105H42,3-24[7C25%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H43,3-24[7C26%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H44,3-24[7C28%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H45,3-24[7C30%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H46,3-24[7C32%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H47,3-24[7C33%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H48,3-24[7C35%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H49,3-24[7C37%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25H[38;5;130mif[m(!popularity.empty()){[34;105H[K[34;105H50,3-24[7C39%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[34;105H[K[34;105H51,3-24[7C41%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column8.push_back([31m0[m);}[34;105H[K[34;105H52,3-24[7C42%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H53,3-24[7C44%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;105H[K[34;105H54,3-24[7C46%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H55,3-24[7C48%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H56,3-24[7C50%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[34;105H[K[34;105H57,3-24[7C51%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;9Hsort(column8.begin(), column8.end());[34;105H[K[34;105H58,3-24[7C53%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;9Hvector<[32mint[m> action, comedy;[34;105H[K[34;105H59,3-24[7C55%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[34;105H[K[34;105H60,3-24[7C57%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;17H[1;33r[33;1H
[1;34r[33;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[34;105H[K[34;105H61,3-17[7C58%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[34;105H[K[34;105H62,0-1[8C60%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;20H[1;33r[33;1H
[1;34r[33;25Haction.push_back(column1[i]);[34;105H[K[34;105H63,13-20      62%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;20H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H64,13-20      64%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;20H[1;33r[33;1H
[1;34r[33;17H[38;5;130mif[m(column4[i]==[31m"Comedy"[m){[34;105H[K[34;105H65,13-20      66%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;20H[1;33r[33;1H
[1;34r[33;25Hcomedy.push_back(column1[i]);[34;105H[K[34;105H66,6-20[7C67%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;20H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H67,6-20[7C69%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H68,3-24[7C71%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;41H[106m{[28;17H}[m[33;9Hsort(action.begin(),action.end());[34;105H[K[34;105H69,3-17[7C73%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;20H[1;33r[33;1H
[1;34r[25;41H{[27;17H}[33;9Hsort(comedy.begin(),comedy.end());[34;105H[K[34;105H70,6-20[7C75%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;9H[38;5;130mif[m(equal(comedy.begin(),comedy.end(), action)){[34;105H[K[34;105H71,3-24[7C76%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;41H[106m{[28;17H}[m[33;17Hcout<< [31m"The two lists Action and Comedy are equal"[m<<endl;[34;105H[K[34;105H72,3-17[7C78%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;9H[1;33r[33;1H
[1;34r[20;43H[106m{[m[25;41H{[27;17H}[28;9H[106m}[m[33;9H}[34;105H[K[34;105H73,2-9[8C80%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [27;17H[20;43H{[25;41H[106m{[27;17H}[m[28;9H}[34;106H2,3-17[27;17H[?25h[?25l[34;95H~@k[27;17H[34;95H   [28;9H[20;43H[106m{[m[25;41H{[27;17H}[28;9H[106m}[m[34;106H3,2-9 [28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;20H[1;33r[33;1H
[1;34r[19;43H{[27;9H}[33;9H[38;5;130melse[m{[34;105H[K[34;105H74,13-20      82%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;20H[1;33r[33;1H
[1;34r[33;17Hcout<<[31m"The two lists Action and Comedy are not equal"[m<<endl;[34;105H[K[34;105H75,13-20      83%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;20H[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H76,13-20      85%[28;20H[?25h[?25l[34;95H~@k[28;20H[34;95H   [28;19H[34;109H2-19[28;19H[?25h[?25l[34;95H~@k[28;19H[34;95H   [28;18H[34;109H1-18[28;18H[?25h[?25l[34;95H~@k[28;18H[34;95H   [28;17H[106m([35C)[m[34;109H0-17[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;16Hl([35C)[34;108H9-16 [28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;15H[34;108H8-15[28;15H[?25h[?25l[34;95H~@k[28;15H[34;95H   [28;14H[34;108H7-14[28;14H[?25h[?25l[34;95H~@k[28;14H[34;95H   [28;13H[34;108H6-13[28;13H[?25h[?25l[34;95H~@k[28;13H[34;95H   [28;12H[34;108H5-12[28;12H[?25h[?25l[34;95H~@k[28;12H[34;95H   [28;11H[106m([42C)[m[34;108H4-11[28;11H[?25h[?25l[34;95H~@k[28;11H[34;95H   [28;10H[1C([42C)[34;108H3-10[28;10H[?25h[?25l[34;95H~@k[28;10H[34;95H   [28;9H[34;108H2-9 [28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;8H[34;108H1-8[28;8H[?25h[?25l[34;95H/[28;8H[34;95H[K[34;1H/[?2004h[?25h/[?25l[17;9H[7m[38;5;130mfor[m[34;105H65,2-9[8C85%[34;105H[K[34;3H[?25h[?25l[34;1H[K[28;1H[17;9H[38;5;130mfor[m[34;105H76,1[10C85%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;8H[1;33r[33;1H
[1;34r[34;105H[K[34;105H77,1-8[8C87%[28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [28;8H[1;33r[33;1H
[1;34r[33;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[34;105H[K[34;105H78,1-8[8C89%[28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [28;8H[1;33r[33;1H
[1;34r[33;9Hcout <<x<<endl;[34;105H[K[34;105H79,1-8[8C91%[28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [28;8H[1;33r[33;1H
[1;34r[33;9Hvector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[34;105H[K[34;105H80,1-8[8C92%[28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [28;8H[1;33r[33;1H
[1;34r[33;9Hcout<< *it<<[31m"     "[m<<endl;[34;105H[K[34;105H81,1-8[8C94%[28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [27;76H[34;106H0,62-76[27;76H[?25h[?25l[34;95H^M[27;76H[34;95H  [28;9H[26;13H[106m{[28;9H}[m[34;106H1,2-9  [28;9H[?25h[?25l[34;95H/[28;9H[34;95H[K[34;1H/[?2004h[?25h [?25l[28;9H[34;105H81,2-9[8C94%[28;9H[?25h[?25l[34;95Hi[28;9H[34;95H [28;9H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H81,2-9[8C94%[28;9H[?25h[?25l[26;13H{[28;9H}[34;106H0[27;9H[?25h[?25l[26;13H[106m{[28;9H}[m[34;106H1[28;9H[?25h[?25l[106m/[m}/[106m}[m[34;108H3-10[28;10H[?25h[?25l[34m/[m[34m[106m/[m[34m}/[m[34m[106m}[m[34;108H4-11[28;11H[?25h[?25l[26;13H{[28;11H[34m}[m[34;106H0,2-9 [27;9H[?25h[?25l/[34;108H3-10[27;10H[?25h[?25l[34m//      cout<<[47C<<endl;[m[34;108H4-11[27;11H[?25h[?25l[34;105H79[26;11H[?25h[?25l[34;108H3-10[26;10H[?25h[?25l[34;108H2-9 [26;9H[?25h[?25l[34;108H1  [26;1H[?25h[?25l/[34;108H2[26;2H[?25h[?25l[34m//      else{[m[34;108H3[26;3H[?25h[?25l[34;106H8,1[25;1H[?25h[?25l/[34;108H2[25;2H[?25h[?25l[34m//      }[m[34;108H3[25;3H[?25h[?25l[34;106H7,1[24;1H[?25h[?25l/[34;108H2[24;2H[?25h[?25l[34m//              cout<< [43C<<endl;[m[34;108H3[24;3H[?25h[?25l[34;106H6,1[23;1H[?25h[?25l/[34;108H2[23;2H[?25h[?25l[34m//      if(equal(comedy.begin(),comedy.end(), action)){[m[34;108H3[23;3H[?25h[?25l[34;106H5,1[22;1H[?25h[?25l/[34;108H2[22;2H[?25h[?25l [34;108H1[22;1H[?25h[?25l[21;33r[33;1H
[1;34r[21;14Haction[9Caction[14Csort(comedy.begin(),comedy.end());[34;105H[K[34;105H74,36-43      96%[21;43H[?25h[?25l[22;33r[22;1H[L[1;34r[21;49H[K[22;9Hsort(comedy.begin(),comedy.end());[34;105H[K[34;105H75,1[10C94%[22;1H[?25h[34;1H[K[22;1H[?25l[34;95H^[[22;1H[34;95H  [22;1H[34;105H75,1-8[8C94%[22;8H[?25h[?25l[34;95H:[22;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 89L, 2235C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
88 Comedy
88 Comedy
88 Horror
88 Action
88 Drama
88 Action
88 Action
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Mystery
88 Comedy
88 Drama
88 Comedy
88 Action
88 Science Fiction
88 Action
88 Drama
87 Drama
87 Drama
87 Horror
87 Mystery
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Action
86 Comedy
86 Action
86 Drama
86 Comedy
86 Comedy
86 Drama
86 Mystery
86 Drama
86 Music
86 Comedy
86 Comedy
86 Comedy
86 Mystery
85 Music
85 Mystery
85 Drama
85 Mystery
85 Action
85 Drama
85 Mystery
85 War
85 Drama
85 Horror
85 Drama
85 Drama
84 Comedy
84 Comedy
84 Comedy
84 Comedy
84 Action
84 Action
84 Drama
84 Drama
84 Action
84 Mystery
84 Mystery
84 Mystery
84 War
84 Action
84 Action
84 Horror
84 Action
84 Horror
84 Drama
84 Drama
84 Science Fiction
83 Horror
83 Drama
83 Drama
83 Comedy
83 Drama
83 Comedy
83 Comedy
83 Action
83 Westerns
83 Drama
83 Comedy
83 Drama
83 Comedy
83 Comedy
83 Comedy
83 War
83 Drama
83 Drama
83 Drama
83 Drama
82 Action
82 Science Fiction
82 Drama
82 Comedy
82 Action
82 Comedy
82 Action
82 Drama
82 Action
82 Drama
82 Mystery
82 Drama
82 Comedy
82 Horror
82 Drama
82 Drama
82 Mystery
82 Drama
82 Comedy
82 Action
82 Mystery
81 Drama
81 Comedy
81 Drama
81 Comedy
81 Drama
81 Mystery
81 Drama
81 Action
81 Comedy
81 Drama
81 Action
81 Drama
81 Comedy
81 Drama
81 Comedy
81 Drama
81 Drama
81 Drama
81 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Mystery
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Comedy
80 Comedy
80 Drama
80 Action
79 Action
79 Mystery
79 Comedy
79 Drama
79 Comedy
79 Drama
79 Action
79 Drama
79 Western
79 Drama
79 Drama
79 Comedy
79 Horror
79 Drama
79 Drama
79 Drama
79 Action
79 Horror
79 
79 Drama
78 Drama
78 Western
78 Drama
78 Horror
78 Drama
78 Drama
78 Comedy
78 Comedy
78 Comedy
78 Comedy
78 Action
78 War
78 Action
78 Drama
78 Drama
78 Action
77 Drama
77 War
77 Drama
77 Drama
77 Drama
77 Comedy
77 Drama
77 Drama
77 Mystery
77 Science Fiction
77 Drama
77 Action
77 Horror
77 Comedy
77 Drama
77 War
76 Short
76 Comedy
76 Drama
76 Mystery
76 Comedy
76 Drama
76 Western
76 Comedy
76 Science Fiction
76 Action
76 Drama
76 Horror
76 Drama
76 War
76 Drama
76 Horror
75 Drama
75 Mystery
75 Comedy
75 Action
75 Mystery
75 Comedy
75 Comedy
75 Comedy
75 Horror
75 Comedy
75 Action
75 Comedy
75 Action
75 Comedy
75 Mystery
75 Comedy
75 Comedy
75 Action
75 Drama
75 Comedy
75 Drama
75 Comedy
75 Drama
75 Drama
75 Drama
75 Comedy
75 Western
75 Western
74 Action
74 Comedy
74 Drama
74 Comedy
74 Drama
74 Drama
74 Comedy
74 Drama
74 Comedy
74 Drama
74 Comedy
74 Comedy
74 Drama
74 Western
74 Comedy
74 Drama
74 Comedy
73 Adventure
73 Drama
73 Science Fiction
73 Horror
73 Horror
73 Music
73 Comedy
73 Comedy
73 Comedy
73 Comedy
73 Drama
73 Drama
73 Music
73 Comedy
73 Adventure
73 Comedy
73 Mystery
73 Drama
73 Drama
72 Western
72 War
72 Western
72 Mystery
72 Drama
72 Drama
72 Drama
72 Horror
72 Comedy
72 Horror
72 Drama
72 Mystery
72 Science Fiction
72 Mystery
72 Drama
72 Drama
72 Action
72 Drama
72 Drama
72 Drama
72 Drama
72 Action
71 Action
71 Action
71 Comedy
71 Drama
71 Drama
71 Mystery
71 Action
71 War
71 Drama
71 Drama
71 Drama
71 Drama
71 Action
71 Drama
71 Science Fiction
71 Action
71 Comedy
71 Drama
71 Drama
71 Comedy
71 Comedy
70 Drama
70 Drama
70 Drama
70 Mystery
70 Comedy
70 Mystery
70 Drama
70 Drama
70 Western
70 Western
70 Western
70 Comedy
70 Comedy
70 Drama
70 Comedy
70 Drama
70 Drama
70 Drama
70 Drama
69 Drama
69 Comedy
69 Drama
69 Drama
69 Comedy
69 Horror
69 Western
69 Comedy
69 Horror
69 Action
69 Comedy
69 Mystery
69 Drama
69 Comedy
69 Action
69 Action
69 Comedy
69 Music
69 Mystery
69 Drama
68 Drama
68 Drama
68 Comedy
68 Comedy
68 Comedy
68 Comedy
68 Action
68 Drama
68 Comedy
68 Comedy
68 Drama
68 Science Fiction
68 Drama
68 Action
68 Comedy
68 Drama
68 Drama
68 Drama
68 Drama
68 Drama
68 Drama
68 Comedy
68 Science Fiction
68 Science Fiction
67 Science Fiction
67 Drama
67 Action
67 Western
67 Western
67 Comedy
67 Drama
67 Drama
67 Mystery
67 Drama
67 Comedy
67 Comedy
67 Drama
67 Drama
67 Drama
67 Action
67 Mystery
67 Mystery
66 Mystery
66 Comedy
66 Mystery
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
65 Comedy
65 Comedy
65 Drama
65 Comedy
65 Action
65 Drama
65 Drama
65 Drama
65 Comedy
65 Drama
65 Western
65 Action
65 Drama
65 Drama
65 Drama
65 Comedy
65 Comedy
65 Drama
65 Drama
64 Drama
64 Science Fiction
64 Horror
64 Western
64 Comedy
64 Crime
64 Drama
64 Drama
64 Comedy
64 Mystery
64 Horror
64 Comedy
64 Action
64 Action
64 Action
64 Comedy
63 Drama
63 Comedy
63 Comedy
63 Drama
63 Horror
63 Drama
63 Comedy
63 Comedy
63 Action
63 Drama
63 Drama
63 Drama
63 Western
63 Comedy
62 Drama
62 Drama
62 Drama
62 Drama
62 Horror
62 Mystery
62 Science Fiction
62 Action
62 Action
62 Comedy
62 Drama
62 Comedy
62 Comedy
62 Drama
62 Comedy
62 Drama
62 Comedy
62 Comedy
62 Comedy
62 Comedy
62 Drama
62 Comedy
62 Mystery
62 Drama
62 Drama
62 Drama
62 Drama
62 Mystery
61 Drama
61 Drama
61 Drama
61 Comedy
61 Drama
61 Mystery
61 Comedy
61 Mystery
61 Drama
61 Music
61 Drama
61 Action
61 Drama
61 Drama
61 Comedy
61 Drama
61 Western
61 Drama
61 Comedy
60 Western
60 Drama
60 Comedy
60 Drama
60 Drama
60 Drama
60 Comedy
60 Comedy
60 Comedy
60 Drama
60 Drama
60 Comedy
60 Drama
60 Drama
60 Drama
60 Drama
60 Drama
60 Horror
60 Mystery
60 Action
59 Comedy
59 Comedy
59 Music
59 Comedy
59 Western
59 Drama
59 Drama
59 Drama
59 Drama
59 Comedy
59 Action
59 Comedy
59 Comedy
59 Drama
59 Drama
59 Science Fiction
59 Action
59 Drama
58 Drama
58 Comedy
58 Horror
58 Comedy
58 Drama
58 Drama
58 Comedy
58 Drama
58 Comedy
58 Comedy
57 Drama
57 Comedy
57 Mystery
57 Comedy
57 Comedy
57 Drama
57 Mystery
57 Comedy
57 Comedy
57 Comedy
57 Action
57 Action
57 Drama
57 Comedy
57 Comedy
57 Action
57 Drama
57 Comedy
56 Comedy
56 Comedy
56 Comedy
56 Comedy
56 Mystery
56 Action
56 Action
56 Drama
56 Drama
56 Comedy
55 Comedy
55 Drama
55 Comedy
55 Drama
55 Drama
55 Drama
55 Comedy
55 Comedy
55 Comedy
55 Comedy
55 Drama
54 Mystery
54 Drama
54 Drama
54 Comedy
54 Action
54 Mystery
54 Mystery
54 Drama
54 Action
54 Horror
54 Action
54 Comedy
54 Drama
54 Action
54 Action
54 Comedy
54 Mystery
54 Action
54 Comedy
54 Action
54 Drama
54 Comedy
54 Comedy
54 Action
53 Drama
53 Drama
53 Drama
53 Drama
53 Western
53 Comedy
53 Comedy
53 Mystery
53 Drama
53 Drama
53 Horror
53 Action
53 Comedy
53 War
53 Comedy
52 Drama
52 Action
52 Comedy
52 Drama
52 Drama
52 Comedy
52 Music
52 Comedy
52 Drama
52 Drama
52 Drama
52 Science Fiction
52 Action
52 Drama
52 Romance
51 Mystery
51 Mystery
51 Western
51 Comedy
51 Music
51 Action
51 Horror
51 Action
51 Mystery
51 Drama
51 Comedy
51 Drama
51 Drama
51 Drama
51 Action
51 Drama
51 Westerns
51 Action
51 Drama
50 Mystery
50 Drama
50 Comedy
50 Drama
50 Comedy
50 Drama
50 Comedy
50 Action
50 Action
50 Horror
50 Drama
50 Drama
50 Drama
50 Comedy
50 Action
50 Action
50 Drama
50 Drama
50 Drama
50 Drama
50 Drama
49 Drama
49 Drama
49 Action
49 Drama
49 Drama
49 Music
49 Action
49 Drama
49 Action
49 Comedy
49 Action
49 Drama
49 Horror
49 Drama
49 Comedy
49 Drama
49 Drama
49 Comedy
49 Action
49 Comedy
49 Drama
48 Comedy
48 Comedy
48 Comedy
48 Western
48 Drama
48 Drama
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Comedy
48 Drama
47 Drama
47 Drama
47 Action
47 Drama
47 War
47 Horror
47 Mystery
47 Drama
47 Drama
47 War
47 Comedy
47 Drama
47 Comedy
47 Action
46 Drama
46 Drama
46 Drama
46 Comedy
46 Comedy
46 Comedy
46 Mystery
46 Action
45 Drama
45 Comedy
45 Comedy
45 Action
45 Western
45 Drama
45 Drama
45 Action
45 Drama
45 Drama
45 Drama
45 Drama
45 Comedy
45 Fantasy
45 Action
45 Drama
45 Mystery
45 Drama
45 Comedy
45 Comedy
45 Drama
44 Drama
44 Comedy
44 Drama
44 Drama
44 Comedy
44 Comedy
44 Drama
44 Drama
44 Action
44 Comedy
44 War
44 Drama
44 Western
44 Western
44 Action
44 Comedy
44 Science Fiction
43 Drama
43 Comedy
43 Drama
43 Drama
43 Horror
43 Comedy
43 Music
43 Action
43 Music
43 Comedy
43 Comedy
43 Comedy
43 Action
42 Comedy
42 Comedy
42 Comedy
42 Science Fiction
42 Drama
42 Drama
42 Comedy
42 Drama
42 Drama
42 Western
42 Drama
42 Mystery
42 Comedy
42 Drama
42 Drama
41 Drama
41 Action
41 Drama
41 Drama
41 Drama
41 Mystery
41 Drama
41 Drama
41 War
41 Horror
41 Drama
41 Action
41 Drama
41 Drama
41 Drama
41 Western
41 Comedy
41 Science Fiction
41 Action
40 Action
40 Action
40 Comedy
40 Action
40 Drama
40 Drama
40 Drama
40 Comedy
40 Mystery
40 Western
40 Western
40 Western
40 Drama
40 Western
40 Drama
40 Drama
40 Action
40 Drama
40 Drama
39 Western
39 Western
39 Drama
39 Drama
39 Drama
39 Horror
39 Horror
39 Action
39 Drama
39 Comedy
39 Drama
39 Drama
39 Drama
39 Drama
39 Comedy
39 Action
38 Action
38 Music
38 Drama
38 Drama
38 Comedy
38 Comedy
38 Drama
38 Comedy
38 Comedy
38 Comedy
37 Comedy
37 
37 Comedy
37 Music
37 Comedy
37 Adventure
37 Drama
37 Comedy
37 Drama
37 Mystery
36 Action
36 Drama
36 Drama
36 Drama
36 Drama
36 Horror
36 Comedy
36 Drama
36 Mystery
36 Action
36 Comedy
36 Mystery
36 Mystery
36 Mystery
36 Comedy
36 Comedy
36 Comedy
36 Comedy
36 Comedy
36 Drama
35 Comedy
35 Comedy
35 Drama
35 Drama
35 Action
35 Drama
35 Drama
35 Comedy
35 Drama
35 Drama
35 Drama
35 Action
35 Science Fiction
35 Comedy
35 Comedy
35 Comedy
34 Music
34 Drama
34 Drama
34 Drama
34 Comedy
34 Comedy
34 Drama
34 Drama
34 Drama
34 Drama
34 Mystery
34 Action
34 Drama
34 Drama
34 Western
33 Comedy
33 Comedy
33 Comedy
33 Drama
33 Action
33 Western
33 Music
33 Mystery
33 Comedy
33 Mystery
33 Mystery
33 Western
33 Action
33 Drama
33 Western
33 Action
32 Action
32 Mystery
32 Comedy
32 Comedy
32 Drama
32 Drama
32 Drama
32 Drama
32 Comedy
32 Drama
32 Horror
32 Action
32 Western
32 Mystery
32 Drama
32 Action
32 Western
32 Comedy
32 Science Fiction
32 Action
31 Comedy
31 Drama
31 Comedy
31 Comedy
31 Mystery
31 Comedy
31 Drama
31 Drama
31 Mystery
31 Drama
31 Drama
31 Action
31 Drama
31 Drama
31 Drama
31 Comedy
31 Science Fiction
31 Drama
30 Drama
30 Music
30 Drama
30 Drama
30 Comedy
30 Comedy
30 Comedy
30 Comedy
30 Action
30 Drama
30 Drama
30 Drama
30 Drama
30 Drama
29 Comedy
29 Action
29 Comedy
29 Action
29 Drama
29 Comedy
29 Drama
29 Drama
29 Drama
29 Drama
29 Drama
29 Mystery
29 Drama
29 Comedy
29 Drama
29 Drama
29 Comedy
29 Drama
29 Comedy
29 Drama
29 Drama
28 Comedy
28 Comedy
28 Drama
28 Comedy
28 Drama
28 Comedy
28 Horror
28 Western
28 Drama
28 Comedy
28 Action
28 Comedy
28 Action
28 Drama
28 Action
28 Action
28 Action
28 Drama
28 Action
28 Science Fiction
28 Comedy
28 Comedy
27 Science Fiction
27 Western
27 Mystery
27 Action
27 Comedy
27 Drama
27 Drama
27 Drama
27 Drama
27 Mystery
27 Comedy
27 Drama
27 Drama
27 Comedy
27 Drama
27 Drama
27 Drama
26 Drama
26 Drama
26 Drama
26 Comedy
26 Drama
26 Drama
26 Music
26 Drama
26 Music
26 Music
26 Drama
26 Drama
26 Drama
26 Drama
26 Action
26 Drama
26 Drama
26 Drama
26 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Comedy
25 Drama
25 Music
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Comedy
25 Drama
25 Drama
25 Drama
25 Western
25 Western
25 Music
24 Comedy
24 Action
24 Western
24 Music
24 Comedy
24 Western
24 Drama
24 Action
24 Comedy
24 Drama
24 Drama
24 Horror
24 Comedy
24 Drama
24 Drama
24 Drama
24 Drama
24 Comedy
24 Mystery
24 Action
23 Drama
23 Drama
23 Western
23 Drama
23 Western
23 Drama
23 War
23 Comedy
23 Comedy
23 Drama
23 Action
23 Action
23 Comedy
23 War
23 Drama
23 Comedy
23 Comedy
23 Science Fiction
23 Drama
23 Drama
23 Drama
22 Drama
22 Drama
22 Drama
22 War
22 Drama
22 Action
22 Drama
22 Drama
22 Drama
22 Mystery
22 Comedy
22 Drama
22 Horror
22 Science Fiction
21 Mystery
21 Adventure
21 Mystery
21 Comedy
21 Comedy
21 Science Fiction
21 Science Fiction
21 Science Fiction
21 Science Fiction
21 Comedy
21 Comedy
21 Drama
20 Action
20 Action
20 Mystery
20 Comedy
20 Action
20 Western
20 Drama
20 Western
20 Mystery
20 Drama
20 Music
20 Drama
20 Drama
20 Science Fiction
20 Comedy
20 Action
20 Action
20 Comedy
20 Comedy
20 Drama
19 Horror
19 Comedy
19 Drama
19 Comedy
19 Music
19 Comedy
19 Comedy
19 Drama
19 Western
19 Horror
19 Drama
19 Drama
19 Mystery
19 Comedy
19 Action
18 Drama
18 Drama
18 Horror
18 Western
18 Drama
18 Westerns
18 Comedy
18 Comedy
18 Western
18 Action
18 Drama
18 Music
17 Comedy
17 Comedy
17 Comedy
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Mystery
17 Drama
17 Action
17 Drama
16 Mystery
16 Drama
16 Drama
16 Science Fiction
16 Action
16 Western
16 Drama
16 Comedy
16 Drama
16 Drama
16 Mystery
16 War
16 Drama
16 Action
15 Horror
15 Drama
15 Drama
15 Comedy
15 Drama
15 Drama
15 Drama
15 Drama
15 Action
15 Comedy
15 Western
15 Comedy
14 Drama
14 Comedy
14 Action
14 Drama
14 Action
14 Action
14 Drama
14 Drama
14 Horror
14 Horror
14 Horror
14 Drama
14 Comedy
14 Comedy
14 Drama
13 Comedy
13 Drama
13 Action
13 Drama
13 Music
13 Western
13 Action
13 Action
13 Comedy
13 Comedy
13 Western
13 War
13 Drama
12 Western
12 Western
12 Western
12 Western
12 Western
12 Western
12 Western
12 Comedy
12 Comedy
12 Drama
12 Action
12 Drama
12 Comedy
12 Comedy
12 Comedy
12 Drama
11 Drama
11 Drama
11 Action
11 Western
11 Action
11 Western
11 Western
11 Drama
11 Science Fiction
11 Mystery
11 Mystery
11 Mystery
11 Mystery
11 Horror
11 Drama
11 Comedy
11 Drama
11 Drama
11 War
11 Mystery
10 Drama
10 Comedy
10 Comedy
10 Drama
10 Action
10 Comedy
10 Comedy
10 Action
10 Western
10 Drama
10 War
10 Action
10 Mystery
10 War
10 Drama
10 Science Fiction
10 War
10 Drama
9 Drama
9 Drama
9 Drama
9 Drama
9 Drama
9 Mystery
9 Drama
9 Drama
9 Action
9 Drama
9 Drama
9 Action
9 Action
9 Science Fiction
9 Mystery
9 Drama
9 Drama
9 Drama
9 Drama
9 Drama
8 Drama
8 Drama
8 Comedy
8 Westerns
8 War
8 Drama
8 Action
8 Comedy
8 Drama
8 Music
8 Comedy
8 Action
8 Action
8 War
8 War
8 Drama
8 Horror
8 Comedy
8 Drama
8 Comedy
8 Action
8 Drama
8 Action
8 Western
8 Comedy
8 Action
8 Western
8 Drama
8 Drama
8 Drama
8 Action
8 Comedy
8 Comedy
8 Comedy
8 Comedy
8 Western
8 Drama
8 Drama
8 Comedy
8 Action
8 Mystery
8 Mystery
8 Drama
8 Horror
8 Drama
8 Comedy
8 Drama
8 Drama
8 Action
8 Western
7 Drama
7 Comedy
7 Drama
7 Action
7 Drama
7 Drama
7 Action
7 Action
7 Comedy
7 Horror
7 Drama
7 Action
7 Drama
7 Comedy
7 Western
7 Comedy
7 Action
7 Music
7 Action
7 Comedy
7 Science Fiction
7 Western
7 Drama
7 War
7 Drama
7 Drama
7 Drama
7 Comedy
6 Drama
6 Comedy
6 Western
6 Western
6 Horror
6 Drama
6 Drama
6 Drama
6 War
6 Action
6 Mystery
6 Drama
6 Drama
6 Drama
6 Science Fiction
6 Music
6 Western
6 Comedy
6 Drama
6 Music
6 Drama
6 Western
6 Western
6 Western
6 Action
6 Western
6 Western
6 Western
6 Action
6 Western
6 Western
6 Western
6 Comedy
6 Drama
6 Drama
6 Drama
6 Action
6 Drama
6 Comedy
6 Drama
6 Drama
6 War
6 Drama
6 Drama
6 Drama
6 Drama
6 Comedy
6 Action
5 Western
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Drama
5 Action
5 Mystery
5 Comedy
5 Comedy
5 Mystery
5 Drama
5 Comedy
5 War
5 Westerns
5 Action
5 Action
5 Westerns
5 Western
5 Mystery
4 Drama
4 Western
4 Mystery
4 Action
4 Drama
4 Western
4 Drama
4 Comedy
4 Western
4 Drama
4 Western
4 Mystery
4 Drama
4 Drama
4 Drama
4 Horror
4 Drama
4 Horror
4 Drama
4 Action
3 Mystery
3 Drama
3 Action
3 Comedy
3 Mystery
3 Music
3 Comedy
3 Music
3 Comedy
3 Comedy
3 Comedy
3 Action
3 Action
3 Mystery
3 Comedy
3 Action
3 Comedy
3 Comedy
3 Horror
3 Mystery
3 Western
3 Action
3 Drama
3 Comedy
3 Mystery
3 Music
3 Comedy
3 Comedy
3 Western
2 Drama
2 War
2 Action
2 Comedy
2 Comedy
2 Comedy
2 Comedy
2 Comedy
2 Action
2 Comedy
2 Comedy
2 Horror
2 Science Fiction
2 Action
2 Music
2 Drama
2 Action
2 Drama
2 Western
2 Drama
2 Drama
1 Drama
1 Comedy
1 Western
1 Western
1 Western
1 Western
1 Western
1 Western
1 Action
1 War
1 War
1 War
1 Western
1 Western
1 Western
1 Western
1 Western
1 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Action
0 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Action
0 Action
0 Drama
0 Comedy
0 Comedy
0 
0 
3277857
Scorsese, Martin     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ wq!
wq!: command not found
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ wq!g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:30:51 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 89L, 2235C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130melse[m{column8.push_back([31m0[m);}[2;25Hgetline(infile, awards,[31m';'[m);[3;25Hgetline(infile, image,[35m'\n'[m);[4;25Hcolumn10.push_back(image);[5;17H}[7;9Hsort(column8.begin(), column8.end());[8;9Hvector<[32mint[m> action, comedy;[9;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[10;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[11;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[12;25Haction.push_back(column1[i]);
                }
                [38;5;130mif[m(column4[i]==[31m"Comedy"[m){     [15;11H              comedy.push_back(column1[i]);[15;55H[K[16;10H       }[16;18H[K[17;9H}[17;11H[K[18;9Hsort(action.begin(),action.end());[18;43H[K[19;9Hsort(comedy.begin(),comedy.end());
[34m//      if(equal(comedy.begin(),comedy.end(), action)){
//              cout<< [m[31m"The two lists Action and Comedy are equal"[m[34m<<endl;
//      }[m[22;10H[K[23;1H[34m//      else{[m
        [34m//      cout<<[m[31m"The two lists Action and Comedy are not equal"[m[34m<<endl;[m
        [34m//}[m[25;12H[K[26;5H    [26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H75,1-8[8CBot[19;8H[?25h[?25l[34;95H~@k[19;8H[34;95H   [20;8H[34;106H6,3[20;8H[?25h[?25l[34;95H~@k[20;8H[34;95H   [19;8H[34;106H5,1[19;8H[?25h[?25l[34;95H~@k[19;8H[34;95H   [20;8H[34;106H6,3[20;8H[?25h[?25l[34;95H~@k[20;8H[34;95H   [20;2H[34;108H2  [20;2H[?25h[?25l[34;95Hi[20;2H[34;95H [20;2H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H76,2[10CBot[20;2H[?25h[?25l[34;108H3[20;3H[?25h[?25l/       [38;5;130mif[m(equal(comedy.begin(),comedy.end(), action)){[34;108H2[20;2H[?25h[?25l [34;108H1[20;1H[?25h[?25l[34;106H7[21;1H[?25h[?25l[34;106H8[22;1H[?25h[?25l[34;108H2[22;2H[?25h[?25l[34;108H3[22;3H[?25h[?25l/       }[34;108H2[22;2H[?25h[?25l [34;108H1[22;1H[?25h[34;1H[K[22;1H[?25l[34;95H^[[22;1H[34;95H  [22;1H[34;105H78,1-8[8CBot[22;8H[?25h[?25l[34;95H:[22;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 89L, 2231C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppwq![Kg++ Tasks.cpp -o Tasks && ./Tasks
In file included from [01m[K/usr/include/c++/9/bits/char_traits.h:39[m[K,
                 from [01m[K/usr/include/c++/9/ios:40[m[K,
                 from [01m[K/usr/include/c++/9/ostream:38[m[K,
                 from [01m[K/usr/include/c++/9/iostream:39[m[K,
                 from [01m[KTasks.cpp:2[m[K:
/usr/include/c++/9/bits/stl_algobase.h: In instantiation of â€˜[01m[Kbool std::__equal_aux(_II1, _II1, _II2) [with _II1 = int*; _II2 = std::vector<int>][m[Kâ€™:
[01m[K/usr/include/c++/9/bits/stl_algobase.h:1069:30:[m[K   required from â€˜[01m[Kbool std::equal(_II1, _II1, _II2) [with _II1 = __gnu_cxx::__normal_iterator<int*, std::vector<int> >; _II2 = std::vector<int>][m[Kâ€™
[01m[KTasks.cpp:76:46:[m[K   required from here
[01m[K/usr/include/c++/9/bits/stl_algobase.h:844:58:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  844 |       typedef typename iterator_traits<_II2>::value_type [01;31m[K_ValueType2[m[K;
      |                                                          [01;31m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/9/bits/stl_algobase.h:849:9:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Kvalue_type[m[Kâ€™ in â€˜[01m[Kstruct std::iterator_traits<std::vector<int> >[m[Kâ€™
  845 |       const bool __simple = [01;31m[K((__is_integer<_ValueType1>::__value[m[K
      |                             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  846 | [01;31m[K         || __is_pointer<_ValueType1>::__value)[m[K
      |          [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  847 | [01;31m[K        && __is_pointer<_II1>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  848 | [01;31m[K        && __is_pointer<_II2>::__value[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  849 | [01;31m[K        && __are_same<_ValueType1, _ValueType2>::__value)[m[K;
      |         [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:32:14 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 89L, 2231C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130melse[m{column8.push_back([31m0[m);}[2;25Hgetline(infile, awards,[31m';'[m);[3;25Hgetline(infile, image,[35m'\n'[m);[4;25Hcolumn10.push_back(image);[5;17H}[7;9Hsort(column8.begin(), column8.end());[8;9Hvector<[32mint[m> action, comedy;[9;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[10;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[11;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[12;25Haction.push_back(column1[i]);
                }
                [38;5;130mif[m(column4[i]==[31m"Comedy"[m){     [15;11H              comedy.push_back(column1[i]);[15;55H[K[16;10H       }[16;18H[K[17;9H}[17;11H[K[18;9Hsort(action.begin(),action.end());[18;43H[K[19;9Hsort(comedy.begin(),comedy.end());
        [38;5;130mif[m(equal(comedy.begin(),comedy.end(), action)){
[34m//              cout<< [m[31m"The two lists Action and Comedy are equal"[m[34m<<endl;[m[22;7H  }[22;10H[K[23;1H[34m//      else{[m
        [34m//      cout<<[m[31m"The two lists Action and Comedy are not equal"[m[34m<<endl;[m
        [34m//}[m[25;12H[K[26;5H    [26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H78,1-8[8CBot[22;8H[?25h[?25l[34;95H~@k[22;8H[34;95H   [21;8H[34;106H7,3[21;8H[?25h[?25l[34;95H~@k[21;8H[34;95H   [21;16H[34;108H4-16[21;16H[?25h[?25l[34;95H~@k[21;16H[34;95H   [20;16H[34;106H6,9[20;16H[?25h[?25l[34;95H~@k[20;16H[34;95H   [20;17H[106m([35C)[m[34;108H10-17[20;17H[?25h[?25l[34;95H~@k[20;17H[34;95H   [20;18H([35C)[34;109H1-18[20;18H[?25h[?25l[34;95H~@k[20;18H[34;95H   [20;19H[34;109H2-19[20;19H[?25h[?25l[34;95H~@k[20;19H[34;95H   [20;20H[34;109H3-20[20;20H[?25h[?25l[34;95H~@k[20;20H[34;95H   [20;21H[34;109H4-21[20;21H[?25h[?25l[34;95H~@k[20;21H[34;95H   [20;22H[34;109H5-22[20;22H[?25h[?25l[34;95H~@k[20;22H[34;95H   [20;23H[34;109H6-23[20;23H[?25h[?25l[34;95H~@k[20;23H[34;95H   [20;24H[34;109H7-24[20;24H[?25h[?25l[34;95H~@k[20;24H[34;95H   [20;25H[34;109H8-25[20;25H[?25h[?25l[34;95H~@k[20;25H[34;95H   [20;26H[34;109H9-26[20;26H[?25h[?25l[34;95H~@k[20;26H[34;95H   [20;27H[34;108H20-27[20;27H[?25h[?25l[34;95H~@k[20;27H[34;95H   [20;28H[34;109H1-28[20;28H[?25h[?25l[34;95H~@k[20;28H[34;95H   [20;29H[34;109H2-29[20;29H[?25h[?25l[34;95H~@k[20;29H[34;95H   [20;30H[106m()[m[34;109H3-30[20;30H[?25h[?25l[34;95H~@k[20;30H[34;95H   [20;31H[34;109H4-31[20;31H[?25h[?25l[34;95H~@k[20;31H[34;95H   [20;32H()[34;109H5-32[20;32H[?25h[?25l[34;95H~@k[20;32H[34;95H   [20;33H[34;109H6-33[20;33H[?25h[?25l[34;95H~@k[20;33H[34;95H   [20;34H[34;109H7-34[20;34H[?25h[?25l[34;95H~@k[20;34H[34;95H   [20;35H[34;109H8-35[20;35H[?25h[?25l[34;95H~@k[20;35H[34;95H   [20;36H[34;109H9-36[20;36H[?25h[?25l[34;95H~@k[20;36H[34;95H   [20;37H[34;108H30-37[20;37H[?25h[?25l[34;95H~@k[20;37H[34;95H   [20;38H[34;109H1-38[20;38H[?25h[?25l[34;95H~@k[20;38H[34;95H   [20;39H[34;109H2-39[20;39H[?25h[?25l[34;95H~@k[20;39H[34;95H   [20;40H[34;109H3-40[20;40H[?25h[?25l[34;95H~@k[20;40H[34;95H   [20;41H[34;109H4-41[20;41H[?25h[?25l[34;95H~@k[20;41H[34;95H   [20;42H[34;109H5-42[20;42H[?25h[?25l[34;95H~@k[20;42H[34;95H   [20;43H[106m()[m[34;109H6-43[20;43H[?25h[?25l[34;95H~@k[20;43H[34;95H   [20;44H[34;109H7-44[20;44H[?25h[?25l[34;95H~@k[20;44H[34;95H   [20;45H()[34;109H8-45[20;45H[?25h[?25l[34;95H~@k[20;45H[34;95H   [20;46H[34;109H9-46[20;46H[?25h[?25l[34;95H~@k[20;46H[34;95H   [20;47H[34;108H40-47[20;47H[?25h[?25l[34;95H~@k[20;47H[34;95H   [20;48H[34;109H1-48[20;48H[?25h[?25l[34;95H~@k[20;48H[34;95H   [20;49H[34;109H2-49[20;49H[?25h[?25l[34;95H~@k[20;49H[34;95H   [20;50H[34;109H3-50[20;50H[?25h[?25l[34;95H~@k[20;50H[34;95H   [20;51H[34;109H4-51[20;51H[?25h[?25l[34;95H~@k[20;51H[34;95H   [20;52H[34;109H5-52[20;52H[?25h[?25l[34;95H~@k[20;52H[34;95H   [20;53H[20;17H[106m([35C)[m[34;109H6-53[20;53H[?25h[?25l[34;95H~@k[20;53H[34;95H   [20;54H[20;11H[106m([mequal([35C)[106m)[m[34;109H7-54[20;54H[?25h[?25l[34;95H~@k[20;54H[34;95H   [20;53H[20;11H(equal[106m([35C)[m)[34;109H6-53[20;53H[?25h[?25l[34;95H.[20;53H[34;95H [20;53H[?25h[?25l[34;95Hb[20;53H[34;95H [20;47H[20;17H([35C)[34;109H0-47[20;47H[?25h[?25l[34;95He[20;47H[34;95H [20;52H[34;109H5-52[20;52H[?25h[?25l[34;95Hi[20;52H[34;95H [20;52H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H76,45-52      Bot[20;52H[?25h[?25l[20;17H[106m([35C)[m[34;109H6-53[20;53H[?25h[?25l[106m.[m)){.[106m)[m[34;109H7-54[20;54H[?25h[?25l[106mb[m)){b[106m)[m[34;109H8-55[20;55H[?25h[?25l[106me[m)){e[106m)[m[34;109H9-56[20;56H[?25h[?25l[106mg[m)){g[106m)[m[34;108H50-57[20;57H[?25h[?25l[106mi[m)){i[106m)[m[34;109H1-58[20;58H[?25h[?25l[106mn[m)){n[106m)[m[34;109H2-59[20;59H[?25h[?25l[106m([m)){[20;17H([42C[106m)[m[34;109H3-60[20;60H[?25h[?25l[2C){[20;17H[106m([m[41C()[106m)[m[34;109H4-61[20;61H[?25h[34;1H[K[20;60H[?25l[34;95H^[[20;60H[34;95H  [20;61H[20;17H([41C[106m()[m)[34;105H76,53-60      Bot[20;60H[?25h[?25l[34;95H:[20;60H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 89L, 2239C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
88 Comedy
88 Comedy
88 Horror
88 Action
88 Drama
88 Action
88 Action
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Mystery
88 Comedy
88 Drama
88 Comedy
88 Action
88 Science Fiction
88 Action
88 Drama
87 Drama
87 Drama
87 Horror
87 Mystery
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Action
86 Comedy
86 Action
86 Drama
86 Comedy
86 Comedy
86 Drama
86 Mystery
86 Drama
86 Music
86 Comedy
86 Comedy
86 Comedy
86 Mystery
85 Music
85 Mystery
85 Drama
85 Mystery
85 Action
85 Drama
85 Mystery
85 War
85 Drama
85 Horror
85 Drama
85 Drama
84 Comedy
84 Comedy
84 Comedy
84 Comedy
84 Action
84 Action
84 Drama
84 Drama
84 Action
84 Mystery
84 Mystery
84 Mystery
84 War
84 Action
84 Action
84 Horror
84 Action
84 Horror
84 Drama
84 Drama
84 Science Fiction
83 Horror
83 Drama
83 Drama
83 Comedy
83 Drama
83 Comedy
83 Comedy
83 Action
83 Westerns
83 Drama
83 Comedy
83 Drama
83 Comedy
83 Comedy
83 Comedy
83 War
83 Drama
83 Drama
83 Drama
83 Drama
82 Action
82 Science Fiction
82 Drama
82 Comedy
82 Action
82 Comedy
82 Action
82 Drama
82 Action
82 Drama
82 Mystery
82 Drama
82 Comedy
82 Horror
82 Drama
82 Drama
82 Mystery
82 Drama
82 Comedy
82 Action
82 Mystery
81 Drama
81 Comedy
81 Drama
81 Comedy
81 Drama
81 Mystery
81 Drama
81 Action
81 Comedy
81 Drama
81 Action
81 Drama
81 Comedy
81 Drama
81 Comedy
81 Drama
81 Drama
81 Drama
81 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Mystery
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Comedy
80 Comedy
80 Drama
80 Action
79 Action
79 Mystery
79 Comedy
79 Drama
79 Comedy
79 Drama
79 Action
79 Drama
79 Western
79 Drama
79 Drama
79 Comedy
79 Horror
79 Drama
79 Drama
79 Drama
79 Action
79 Horror
79 
79 Drama
78 Drama
78 Western
78 Drama
78 Horror
78 Drama
78 Drama
78 Comedy
78 Comedy
78 Comedy
78 Comedy
78 Action
78 War
78 Action
78 Drama
78 Drama
78 Action
77 Drama
77 War
77 Drama
77 Drama
77 Drama
77 Comedy
77 Drama
77 Drama
77 Mystery
77 Science Fiction
77 Drama
77 Action
77 Horror
77 Comedy
77 Drama
77 War
76 Short
76 Comedy
76 Drama
76 Mystery
76 Comedy
76 Drama
76 Western
76 Comedy
76 Science Fiction
76 Action
76 Drama
76 Horror
76 Drama
76 War
76 Drama
76 Horror
75 Drama
75 Mystery
75 Comedy
75 Action
75 Mystery
75 Comedy
75 Comedy
75 Comedy
75 Horror
75 Comedy
75 Action
75 Comedy
75 Action
75 Comedy
75 Mystery
75 Comedy
75 Comedy
75 Action
75 Drama
75 Comedy
75 Drama
75 Comedy
75 Drama
75 Drama
75 Drama
75 Comedy
75 Western
75 Western
74 Action
74 Comedy
74 Drama
74 Comedy
74 Drama
74 Drama
74 Comedy
74 Drama
74 Comedy
74 Drama
74 Comedy
74 Comedy
74 Drama
74 Western
74 Comedy
74 Drama
74 Comedy
73 Adventure
73 Drama
73 Science Fiction
73 Horror
73 Horror
73 Music
73 Comedy
73 Comedy
73 Comedy
73 Comedy
73 Drama
73 Drama
73 Music
73 Comedy
73 Adventure
73 Comedy
73 Mystery
73 Drama
73 Drama
72 Western
72 War
72 Western
72 Mystery
72 Drama
72 Drama
72 Drama
72 Horror
72 Comedy
72 Horror
72 Drama
72 Mystery
72 Science Fiction
72 Mystery
72 Drama
72 Drama
72 Action
72 Drama
72 Drama
72 Drama
72 Drama
72 Action
71 Action
71 Action
71 Comedy
71 Drama
71 Drama
71 Mystery
71 Action
71 War
71 Drama
71 Drama
71 Drama
71 Drama
71 Action
71 Drama
71 Science Fiction
71 Action
71 Comedy
71 Drama
71 Drama
71 Comedy
71 Comedy
70 Drama
70 Drama
70 Drama
70 Mystery
70 Comedy
70 Mystery
70 Drama
70 Drama
70 Western
70 Western
70 Western
70 Comedy
70 Comedy
70 Drama
70 Comedy
70 Drama
70 Drama
70 Drama
70 Drama
69 Drama
69 Comedy
69 Drama
69 Drama
69 Comedy
69 Horror
69 Western
69 Comedy
69 Horror
69 Action
69 Comedy
69 Mystery
69 Drama
69 Comedy
69 Action
69 Action
69 Comedy
69 Music
69 Mystery
69 Drama
68 Drama
68 Drama
68 Comedy
68 Comedy
68 Comedy
68 Comedy
68 Action
68 Drama
68 Comedy
68 Comedy
68 Drama
68 Science Fiction
68 Drama
68 Action
68 Comedy
68 Drama
68 Drama
68 Drama
68 Drama
68 Drama
68 Drama
68 Comedy
68 Science Fiction
68 Science Fiction
67 Science Fiction
67 Drama
67 Action
67 Western
67 Western
67 Comedy
67 Drama
67 Drama
67 Mystery
67 Drama
67 Comedy
67 Comedy
67 Drama
67 Drama
67 Drama
67 Action
67 Mystery
67 Mystery
66 Mystery
66 Comedy
66 Mystery
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
65 Comedy
65 Comedy
65 Drama
65 Comedy
65 Action
65 Drama
65 Drama
65 Drama
65 Comedy
65 Drama
65 Western
65 Action
65 Drama
65 Drama
65 Drama
65 Comedy
65 Comedy
65 Drama
65 Drama
64 Drama
64 Science Fiction
64 Horror
64 Western
64 Comedy
64 Crime
64 Drama
64 Drama
64 Comedy
64 Mystery
64 Horror
64 Comedy
64 Action
64 Action
64 Action
64 Comedy
63 Drama
63 Comedy
63 Comedy
63 Drama
63 Horror
63 Drama
63 Comedy
63 Comedy
63 Action
63 Drama
63 Drama
63 Drama
63 Western
63 Comedy
62 Drama
62 Drama
62 Drama
62 Drama
62 Horror
62 Mystery
62 Science Fiction
62 Action
62 Action
62 Comedy
62 Drama
62 Comedy
62 Comedy
62 Drama
62 Comedy
62 Drama
62 Comedy
62 Comedy
62 Comedy
62 Comedy
62 Drama
62 Comedy
62 Mystery
62 Drama
62 Drama
62 Drama
62 Drama
62 Mystery
61 Drama
61 Drama
61 Drama
61 Comedy
61 Drama
61 Mystery
61 Comedy
61 Mystery
61 Drama
61 Music
61 Drama
61 Action
61 Drama
61 Drama
61 Comedy
61 Drama
61 Western
61 Drama
61 Comedy
60 Western
60 Drama
60 Comedy
60 Drama
60 Drama
60 Drama
60 Comedy
60 Comedy
60 Comedy
60 Drama
60 Drama
60 Comedy
60 Drama
60 Drama
60 Drama
60 Drama
60 Drama
60 Horror
60 Mystery
60 Action
59 Comedy
59 Comedy
59 Music
59 Comedy
59 Western
59 Drama
59 Drama
59 Drama
59 Drama
59 Comedy
59 Action
59 Comedy
59 Comedy
59 Drama
59 Drama
59 Science Fiction
59 Action
59 Drama
58 Drama
58 Comedy
58 Horror
58 Comedy
58 Drama
58 Drama
58 Comedy
58 Drama
58 Comedy
58 Comedy
57 Drama
57 Comedy
57 Mystery
57 Comedy
57 Comedy
57 Drama
57 Mystery
57 Comedy
57 Comedy
57 Comedy
57 Action
57 Action
57 Drama
57 Comedy
57 Comedy
57 Action
57 Drama
57 Comedy
56 Comedy
56 Comedy
56 Comedy
56 Comedy
56 Mystery
56 Action
56 Action
56 Drama
56 Drama
56 Comedy
55 Comedy
55 Drama
55 Comedy
55 Drama
55 Drama
55 Drama
55 Comedy
55 Comedy
55 Comedy
55 Comedy
55 Drama
54 Mystery
54 Drama
54 Drama
54 Comedy
54 Action
54 Mystery
54 Mystery
54 Drama
54 Action
54 Horror
54 Action
54 Comedy
54 Drama
54 Action
54 Action
54 Comedy
54 Mystery
54 Action
54 Comedy
54 Action
54 Drama
54 Comedy
54 Comedy
54 Action
53 Drama
53 Drama
53 Drama
53 Drama
53 Western
53 Comedy
53 Comedy
53 Mystery
53 Drama
53 Drama
53 Horror
53 Action
53 Comedy
53 War
53 Comedy
52 Drama
52 Action
52 Comedy
52 Drama
52 Drama
52 Comedy
52 Music
52 Comedy
52 Drama
52 Drama
52 Drama
52 Science Fiction
52 Action
52 Drama
52 Romance
51 Mystery
51 Mystery
51 Western
51 Comedy
51 Music
51 Action
51 Horror
51 Action
51 Mystery
51 Drama
51 Comedy
51 Drama
51 Drama
51 Drama
51 Action
51 Drama
51 Westerns
51 Action
51 Drama
50 Mystery
50 Drama
50 Comedy
50 Drama
50 Comedy
50 Drama
50 Comedy
50 Action
50 Action
50 Horror
50 Drama
50 Drama
50 Drama
50 Comedy
50 Action
50 Action
50 Drama
50 Drama
50 Drama
50 Drama
50 Drama
49 Drama
49 Drama
49 Action
49 Drama
49 Drama
49 Music
49 Action
49 Drama
49 Action
49 Comedy
49 Action
49 Drama
49 Horror
49 Drama
49 Comedy
49 Drama
49 Drama
49 Comedy
49 Action
49 Comedy
49 Drama
48 Comedy
48 Comedy
48 Comedy
48 Western
48 Drama
48 Drama
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Comedy
48 Drama
47 Drama
47 Drama
47 Action
47 Drama
47 War
47 Horror
47 Mystery
47 Drama
47 Drama
47 War
47 Comedy
47 Drama
47 Comedy
47 Action
46 Drama
46 Drama
46 Drama
46 Comedy
46 Comedy
46 Comedy
46 Mystery
46 Action
45 Drama
45 Comedy
45 Comedy
45 Action
45 Western
45 Drama
45 Drama
45 Action
45 Drama
45 Drama
45 Drama
45 Drama
45 Comedy
45 Fantasy
45 Action
45 Drama
45 Mystery
45 Drama
45 Comedy
45 Comedy
45 Drama
44 Drama
44 Comedy
44 Drama
44 Drama
44 Comedy
44 Comedy
44 Drama
44 Drama
44 Action
44 Comedy
44 War
44 Drama
44 Western
44 Western
44 Action
44 Comedy
44 Science Fiction
43 Drama
43 Comedy
43 Drama
43 Drama
43 Horror
43 Comedy
43 Music
43 Action
43 Music
43 Comedy
43 Comedy
43 Comedy
43 Action
42 Comedy
42 Comedy
42 Comedy
42 Science Fiction
42 Drama
42 Drama
42 Comedy
42 Drama
42 Drama
42 Western
42 Drama
42 Mystery
42 Comedy
42 Drama
42 Drama
41 Drama
41 Action
41 Drama
41 Drama
41 Drama
41 Mystery
41 Drama
41 Drama
41 War
41 Horror
41 Drama
41 Action
41 Drama
41 Drama
41 Drama
41 Western
41 Comedy
41 Science Fiction
41 Action
40 Action
40 Action
40 Comedy
40 Action
40 Drama
40 Drama
40 Drama
40 Comedy
40 Mystery
40 Western
40 Western
40 Western
40 Drama
40 Western
40 Drama
40 Drama
40 Action
40 Drama
40 Drama
39 Western
39 Western
39 Drama
39 Drama
39 Drama
39 Horror
39 Horror
39 Action
39 Drama
39 Comedy
39 Drama
39 Drama
39 Drama
39 Drama
39 Comedy
39 Action
38 Action
38 Music
38 Drama
38 Drama
38 Comedy
38 Comedy
38 Drama
38 Comedy
38 Comedy
38 Comedy
37 Comedy
37 
37 Comedy
37 Music
37 Comedy
37 Adventure
37 Drama
37 Comedy
37 Drama
37 Mystery
36 Action
36 Drama
36 Drama
36 Drama
36 Drama
36 Horror
36 Comedy
36 Drama
36 Mystery
36 Action
36 Comedy
36 Mystery
36 Mystery
36 Mystery
36 Comedy
36 Comedy
36 Comedy
36 Comedy
36 Comedy
36 Drama
35 Comedy
35 Comedy
35 Drama
35 Drama
35 Action
35 Drama
35 Drama
35 Comedy
35 Drama
35 Drama
35 Drama
35 Action
35 Science Fiction
35 Comedy
35 Comedy
35 Comedy
34 Music
34 Drama
34 Drama
34 Drama
34 Comedy
34 Comedy
34 Drama
34 Drama
34 Drama
34 Drama
34 Mystery
34 Action
34 Drama
34 Drama
34 Western
33 Comedy
33 Comedy
33 Comedy
33 Drama
33 Action
33 Western
33 Music
33 Mystery
33 Comedy
33 Mystery
33 Mystery
33 Western
33 Action
33 Drama
33 Western
33 Action
32 Action
32 Mystery
32 Comedy
32 Comedy
32 Drama
32 Drama
32 Drama
32 Drama
32 Comedy
32 Drama
32 Horror
32 Action
32 Western
32 Mystery
32 Drama
32 Action
32 Western
32 Comedy
32 Science Fiction
32 Action
31 Comedy
31 Drama
31 Comedy
31 Comedy
31 Mystery
31 Comedy
31 Drama
31 Drama
31 Mystery
31 Drama
31 Drama
31 Action
31 Drama
31 Drama
31 Drama
31 Comedy
31 Science Fiction
31 Drama
30 Drama
30 Music
30 Drama
30 Drama
30 Comedy
30 Comedy
30 Comedy
30 Comedy
30 Action
30 Drama
30 Drama
30 Drama
30 Drama
30 Drama
29 Comedy
29 Action
29 Comedy
29 Action
29 Drama
29 Comedy
29 Drama
29 Drama
29 Drama
29 Drama
29 Drama
29 Mystery
29 Drama
29 Comedy
29 Drama
29 Drama
29 Comedy
29 Drama
29 Comedy
29 Drama
29 Drama
28 Comedy
28 Comedy
28 Drama
28 Comedy
28 Drama
28 Comedy
28 Horror
28 Western
28 Drama
28 Comedy
28 Action
28 Comedy
28 Action
28 Drama
28 Action
28 Action
28 Action
28 Drama
28 Action
28 Science Fiction
28 Comedy
28 Comedy
27 Science Fiction
27 Western
27 Mystery
27 Action
27 Comedy
27 Drama
27 Drama
27 Drama
27 Drama
27 Mystery
27 Comedy
27 Drama
27 Drama
27 Comedy
27 Drama
27 Drama
27 Drama
26 Drama
26 Drama
26 Drama
26 Comedy
26 Drama
26 Drama
26 Music
26 Drama
26 Music
26 Music
26 Drama
26 Drama
26 Drama
26 Drama
26 Action
26 Drama
26 Drama
26 Drama
26 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Comedy
25 Drama
25 Music
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Comedy
25 Drama
25 Drama
25 Drama
25 Western
25 Western
25 Music
24 Comedy
24 Action
24 Western
24 Music
24 Comedy
24 Western
24 Drama
24 Action
24 Comedy
24 Drama
24 Drama
24 Horror
24 Comedy
24 Drama
24 Drama
24 Drama
24 Drama
24 Comedy
24 Mystery
24 Action
23 Drama
23 Drama
23 Western
23 Drama
23 Western
23 Drama
23 War
23 Comedy
23 Comedy
23 Drama
23 Action
23 Action
23 Comedy
23 War
23 Drama
23 Comedy
23 Comedy
23 Science Fiction
23 Drama
23 Drama
23 Drama
22 Drama
22 Drama
22 Drama
22 War
22 Drama
22 Action
22 Drama
22 Drama
22 Drama
22 Mystery
22 Comedy
22 Drama
22 Horror
22 Science Fiction
21 Mystery
21 Adventure
21 Mystery
21 Comedy
21 Comedy
21 Science Fiction
21 Science Fiction
21 Science Fiction
21 Science Fiction
21 Comedy
21 Comedy
21 Drama
20 Action
20 Action
20 Mystery
20 Comedy
20 Action
20 Western
20 Drama
20 Western
20 Mystery
20 Drama
20 Music
20 Drama
20 Drama
20 Science Fiction
20 Comedy
20 Action
20 Action
20 Comedy
20 Comedy
20 Drama
19 Horror
19 Comedy
19 Drama
19 Comedy
19 Music
19 Comedy
19 Comedy
19 Drama
19 Western
19 Horror
19 Drama
19 Drama
19 Mystery
19 Comedy
19 Action
18 Drama
18 Drama
18 Horror
18 Western
18 Drama
18 Westerns
18 Comedy
18 Comedy
18 Western
18 Action
18 Drama
18 Music
17 Comedy
17 Comedy
17 Comedy
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Mystery
17 Drama
17 Action
17 Drama
16 Mystery
16 Drama
16 Drama
16 Science Fiction
16 Action
16 Western
16 Drama
16 Comedy
16 Drama
16 Drama
16 Mystery
16 War
16 Drama
16 Action
15 Horror
15 Drama
15 Drama
15 Comedy
15 Drama
15 Drama
15 Drama
15 Drama
15 Action
15 Comedy
15 Western
15 Comedy
14 Drama
14 Comedy
14 Action
14 Drama
14 Action
14 Action
14 Drama
14 Drama
14 Horror
14 Horror
14 Horror
14 Drama
14 Comedy
14 Comedy
14 Drama
13 Comedy
13 Drama
13 Action
13 Drama
13 Music
13 Western
13 Action
13 Action
13 Comedy
13 Comedy
13 Western
13 War
13 Drama
12 Western
12 Western
12 Western
12 Western
12 Western
12 Western
12 Western
12 Comedy
12 Comedy
12 Drama
12 Action
12 Drama
12 Comedy
12 Comedy
12 Comedy
12 Drama
11 Drama
11 Drama
11 Action
11 Western
11 Action
11 Western
11 Western
11 Drama
11 Science Fiction
11 Mystery
11 Mystery
11 Mystery
11 Mystery
11 Horror
11 Drama
11 Comedy
11 Drama
11 Drama
11 War
11 Mystery
10 Drama
10 Comedy
10 Comedy
10 Drama
10 Action
10 Comedy
10 Comedy
10 Action
10 Western
10 Drama
10 War
10 Action
10 Mystery
10 War
10 Drama
10 Science Fiction
10 War
10 Drama
9 Drama
9 Drama
9 Drama
9 Drama
9 Drama
9 Mystery
9 Drama
9 Drama
9 Action
9 Drama
9 Drama
9 Action
9 Action
9 Science Fiction
9 Mystery
9 Drama
9 Drama
9 Drama
9 Drama
9 Drama
8 Drama
8 Drama
8 Comedy
8 Westerns
8 War
8 Drama
8 Action
8 Comedy
8 Drama
8 Music
8 Comedy
8 Action
8 Action
8 War
8 War
8 Drama
8 Horror
8 Comedy
8 Drama
8 Comedy
8 Action
8 Drama
8 Action
8 Western
8 Comedy
8 Action
8 Western
8 Drama
8 Drama
8 Drama
8 Action
8 Comedy
8 Comedy
8 Comedy
8 Comedy
8 Western
8 Drama
8 Drama
8 Comedy
8 Action
8 Mystery
8 Mystery
8 Drama
8 Horror
8 Drama
8 Comedy
8 Drama
8 Drama
8 Action
8 Western
7 Drama
7 Comedy
7 Drama
7 Action
7 Drama
7 Drama
7 Action
7 Action
7 Comedy
7 Horror
7 Drama
7 Action
7 Drama
7 Comedy
7 Western
7 Comedy
7 Action
7 Music
7 Action
7 Comedy
7 Science Fiction
7 Western
7 Drama
7 War
7 Drama
7 Drama
7 Drama
7 Comedy
6 Drama
6 Comedy
6 Western
6 Western
6 Horror
6 Drama
6 Drama
6 Drama
6 War
6 Action
6 Mystery
6 Drama
6 Drama
6 Drama
6 Science Fiction
6 Music
6 Western
6 Comedy
6 Drama
6 Music
6 Drama
6 Western
6 Western
6 Western
6 Action
6 Western
6 Western
6 Western
6 Action
6 Western
6 Western
6 Western
6 Comedy
6 Drama
6 Drama
6 Drama
6 Action
6 Drama
6 Comedy
6 Drama
6 Drama
6 War
6 Drama
6 Drama
6 Drama
6 Drama
6 Comedy
6 Action
5 Western
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Drama
5 Action
5 Mystery
5 Comedy
5 Comedy
5 Mystery
5 Drama
5 Comedy
5 War
5 Westerns
5 Action
5 Action
5 Westerns
5 Western
5 Mystery
4 Drama
4 Western
4 Mystery
4 Action
4 Drama
4 Western
4 Drama
4 Comedy
4 Western
4 Drama
4 Western
4 Mystery
4 Drama
4 Drama
4 Drama
4 Horror
4 Drama
4 Horror
4 Drama
4 Action
3 Mystery
3 Drama
3 Action
3 Comedy
3 Mystery
3 Music
3 Comedy
3 Music
3 Comedy
3 Comedy
3 Comedy
3 Action
3 Action
3 Mystery
3 Comedy
3 Action
3 Comedy
3 Comedy
3 Horror
3 Mystery
3 Western
3 Action
3 Drama
3 Comedy
3 Mystery
3 Music
3 Comedy
3 Comedy
3 Western
2 Drama
2 War
2 Action
2 Comedy
2 Comedy
2 Comedy
2 Comedy
2 Comedy
2 Action
2 Comedy
2 Comedy
2 Horror
2 Science Fiction
2 Action
2 Music
2 Drama
2 Action
2 Drama
2 Western
2 Drama
2 Drama
1 Drama
1 Comedy
1 Western
1 Western
1 Western
1 Western
1 Western
1 Western
1 Action
1 War
1 War
1 War
1 Western
1 Western
1 Western
1 Western
1 Western
1 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Action
0 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Action
0 Action
0 Drama
0 Comedy
0 Comedy
0 
0 
3277857
Scorsese, Martin     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:33:11 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 89L, 2239C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130melse[m{column8.push_back([31m0[m);}[2;25Hgetline(infile, awards,[31m';'[m);[3;25Hgetline(infile, image,[35m'\n'[m);[4;25Hcolumn10.push_back(image);[5;17H}[7;9Hsort(column8.begin(), column8.end());[8;9Hvector<[32mint[m> action, comedy;[9;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[10;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[11;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[12;25Haction.push_back(column1[i]);
                }
                [38;5;130mif[m(column4[i]==[31m"Comedy"[m){     [15;11H              comedy.push_back(column1[i]);[15;55H[K[16;10H       }[16;18H[K[17;9H}[17;11H[K[18;9Hsort(action.begin(),action.end());[18;43H[K[19;9Hsort(comedy.begin(),comedy.end());
        [38;5;130mif[m(equal(comedy.begin(),comedy.end(), action.begin[106m()[m)){
[34m//              cout<< [m[31m"The two lists Action and Comedy are equal"[m[34m<<endl;[m[22;7H  }[22;10H[K[23;1H[34m//      else{[m
        [34m//      cout<<[m[31m"The two lists Action and Comedy are not equal"[m[34m<<endl;[m
        [34m//}[m[25;12H[K[26;5H    [26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H76,53-60      Bot[20;60H[?25h[?25l[34;95H~@k[20;60H[34;95H   [21;60H[20;59H()[34;106H7,48[21;60H[?25h[?25l[34;95H~@k[21;60H[34;95H   [22;9H[20;63H[106m{[22;9H}[m[34;106H8,2-9  [22;9H[?25h[?25l[34;95H~@k[22;9H[34;95H   [23;13H[20;63H{[22;9H}[23;13H[34m[106m{[25;11H}[m[34;106H9,8-13[23;13H[?25h[?25l[34;95H~@k[23;13H[34;95H   [22;9H[20;63H[106m{[22;9H}[m[23;13H[34m{[25;11H}[m[34;106H8,2-9 [22;9H[?25h[?25l[34;95H~@k[22;9H[34;95H   [21;60H[20;63H{[22;9H}[34;106H7,48-60[21;60H[?25h[?25l[34;95Hi[21;60H[34;95H [21;60H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H77,48-60      Bot[21;60H[?25h[?25l[20;63H[106m{[22;9H}[m[34;106H8,3-10 [22;10H[?25h[?25l[34;108H2-9 [22;9H[?25h[?25l[20;63H{[22;9H}[34;108H1  [22;1H[?25h[?25l[34;106H7[21;1H[?25h[?25l[34;108H2[21;2H[?25h[?25l[34;108H3[21;3H[?25h[?25l/               cout<< [43C<<endl;[34;108H2[21;2H[?25h[?25l [34;108H1[21;1H[?25h[?25l[34;106H8[22;1H[?25h[?25l[20;63H[106m{[22;9H}[m[34;108H2-9[22;9H[?25h[?25l[20;63H{[22;9H}[34;106H9,4[23;9H[?25h[?25l[34;108H3  [23;3H[?25h[?25l/       [38;5;130melse[m{[34;108H2[23;2H[?25h[?25l [34;108H1[23;1H[?25h[34;1H[K[23;1H[?25l[34;95H^[[23;1H[34;95H  [23;1H[34;105H79,1-8[8CBot[23;8H[?25h[?25l[34;95H:[23;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 89L, 2235C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
[01m[KTasks.cpp:[m[K In function â€˜[01m[Kint main()[m[Kâ€™:
[01m[KTasks.cpp:88:1:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ at end of input
   88 | [01;31m[K}[m[K
      | [01;31m[K^[m[K
[01m[KTasks.cpp:13:11:[m[K [01;36m[Knote: [m[Kto match this â€˜[01m[K{[m[Kâ€™
   13 | int main()[01;36m[K{[m[K
      |           [01;36m[K^[m[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:33:29 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 89L, 2235C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130melse[m{column8.push_back([31m0[m);}[2;25Hgetline(infile, awards,[31m';'[m);[3;25Hgetline(infile, image,[35m'\n'[m);[4;25Hcolumn10.push_back(image);[5;17H}[7;9Hsort(column8.begin(), column8.end());[8;9Hvector<[32mint[m> action, comedy;[9;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[10;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[11;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[12;25Haction.push_back(column1[i]);
                }
                [38;5;130mif[m(column4[i]==[31m"Comedy"[m){     [15;11H              comedy.push_back(column1[i]);[15;55H[K[16;10H       }[16;18H[K[17;9H}[17;11H[K[18;9Hsort(action.begin(),action.end());[18;43H[K[19;9Hsort(comedy.begin(),comedy.end());
        [38;5;130mif[m(equal(comedy.begin(),comedy.end(), action.begin())){[21;14H   cout<< [31m"The two lists Action and Comedy are equal"[m<<endl;[22;7H  }[22;10H[K[23;9H[38;5;130melse[m{
        [34m//      cout<<[m[31m"The two lists Action and Comedy are not equal"[m[34m<<endl;[m
        [34m//}[m[25;12H[K[26;5H    [26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H79,1-8[8CBot[23;8H[?25h[?25l[34;95H~@k[23;8H[34;95H   [24;8H[34;105H80[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [24;9H[34;108H2-9[24;9H[?25h[?25l[34;95H~@k[24;9H[34;95H   [24;10H[34;108H3-10[24;10H[?25h[?25l[34;95H~@k[24;10H[34;95H   [24;9H[34;108H2-9 [24;9H[?25h[?25l[34;95H~@k[24;9H[34;95H   [24;8H[34;108H1-8[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [24;9H[34;108H2-9[24;9H[?25h[?25l[34;95H~@k[24;9H[34;95H   [24;10H[34;108H3-10[24;10H[?25h[?25l[34;95Hi[24;10H[34;95H [24;10H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H80,3-10[7CBot[24;10H[?25h[?25l[34;108H4-11[24;11H[?25h[?25l/       cout<<[47C<<endl;[34;108H3-10[24;10H[?25h[?25l [34;108H2-9 [24;9H[?25h[?25l[34;106H1[25;9H[?25h[?25l[34;108H3-10[25;10H[?25h[?25l[23;13H[106m{[m[25;11H[34m[106m}[m[34;108H4-11[25;11H[?25h[?25l/}[25;11H[K[25;10H[106m}[m[34;108H3-10[25;10H[?25h[?25l}[25;10H[K[25;9H[106m}[m[34;108H2-9 [25;9H[?25h[34;1H[K[25;8H[?25l[34;95H^[[25;8H[34;95H  [25;9H[23;13H{[25;9H}[34;105H81,1-8[8CBot[25;8H[?25h[?25l[34;95H^[[25;8H[34;95H  [25;8H[34;95H^[[25;8H[34;95H  [25;8H[?25h[?25l[34;95H:[25;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 89L, 2231C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
88 Comedy
88 Comedy
88 Horror
88 Action
88 Drama
88 Action
88 Action
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Drama
88 Mystery
88 Comedy
88 Drama
88 Comedy
88 Action
88 Science Fiction
88 Action
88 Drama
87 Drama
87 Drama
87 Horror
87 Mystery
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Drama
87 Action
86 Comedy
86 Action
86 Drama
86 Comedy
86 Comedy
86 Drama
86 Mystery
86 Drama
86 Music
86 Comedy
86 Comedy
86 Comedy
86 Mystery
85 Music
85 Mystery
85 Drama
85 Mystery
85 Action
85 Drama
85 Mystery
85 War
85 Drama
85 Horror
85 Drama
85 Drama
84 Comedy
84 Comedy
84 Comedy
84 Comedy
84 Action
84 Action
84 Drama
84 Drama
84 Action
84 Mystery
84 Mystery
84 Mystery
84 War
84 Action
84 Action
84 Horror
84 Action
84 Horror
84 Drama
84 Drama
84 Science Fiction
83 Horror
83 Drama
83 Drama
83 Comedy
83 Drama
83 Comedy
83 Comedy
83 Action
83 Westerns
83 Drama
83 Comedy
83 Drama
83 Comedy
83 Comedy
83 Comedy
83 War
83 Drama
83 Drama
83 Drama
83 Drama
82 Action
82 Science Fiction
82 Drama
82 Comedy
82 Action
82 Comedy
82 Action
82 Drama
82 Action
82 Drama
82 Mystery
82 Drama
82 Comedy
82 Horror
82 Drama
82 Drama
82 Mystery
82 Drama
82 Comedy
82 Action
82 Mystery
81 Drama
81 Comedy
81 Drama
81 Comedy
81 Drama
81 Mystery
81 Drama
81 Action
81 Comedy
81 Drama
81 Action
81 Drama
81 Comedy
81 Drama
81 Comedy
81 Drama
81 Drama
81 Drama
81 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Mystery
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Drama
80 Comedy
80 Comedy
80 Drama
80 Action
79 Action
79 Mystery
79 Comedy
79 Drama
79 Comedy
79 Drama
79 Action
79 Drama
79 Western
79 Drama
79 Drama
79 Comedy
79 Horror
79 Drama
79 Drama
79 Drama
79 Action
79 Horror
79 
79 Drama
78 Drama
78 Western
78 Drama
78 Horror
78 Drama
78 Drama
78 Comedy
78 Comedy
78 Comedy
78 Comedy
78 Action
78 War
78 Action
78 Drama
78 Drama
78 Action
77 Drama
77 War
77 Drama
77 Drama
77 Drama
77 Comedy
77 Drama
77 Drama
77 Mystery
77 Science Fiction
77 Drama
77 Action
77 Horror
77 Comedy
77 Drama
77 War
76 Short
76 Comedy
76 Drama
76 Mystery
76 Comedy
76 Drama
76 Western
76 Comedy
76 Science Fiction
76 Action
76 Drama
76 Horror
76 Drama
76 War
76 Drama
76 Horror
75 Drama
75 Mystery
75 Comedy
75 Action
75 Mystery
75 Comedy
75 Comedy
75 Comedy
75 Horror
75 Comedy
75 Action
75 Comedy
75 Action
75 Comedy
75 Mystery
75 Comedy
75 Comedy
75 Action
75 Drama
75 Comedy
75 Drama
75 Comedy
75 Drama
75 Drama
75 Drama
75 Comedy
75 Western
75 Western
74 Action
74 Comedy
74 Drama
74 Comedy
74 Drama
74 Drama
74 Comedy
74 Drama
74 Comedy
74 Drama
74 Comedy
74 Comedy
74 Drama
74 Western
74 Comedy
74 Drama
74 Comedy
73 Adventure
73 Drama
73 Science Fiction
73 Horror
73 Horror
73 Music
73 Comedy
73 Comedy
73 Comedy
73 Comedy
73 Drama
73 Drama
73 Music
73 Comedy
73 Adventure
73 Comedy
73 Mystery
73 Drama
73 Drama
72 Western
72 War
72 Western
72 Mystery
72 Drama
72 Drama
72 Drama
72 Horror
72 Comedy
72 Horror
72 Drama
72 Mystery
72 Science Fiction
72 Mystery
72 Drama
72 Drama
72 Action
72 Drama
72 Drama
72 Drama
72 Drama
72 Action
71 Action
71 Action
71 Comedy
71 Drama
71 Drama
71 Mystery
71 Action
71 War
71 Drama
71 Drama
71 Drama
71 Drama
71 Action
71 Drama
71 Science Fiction
71 Action
71 Comedy
71 Drama
71 Drama
71 Comedy
71 Comedy
70 Drama
70 Drama
70 Drama
70 Mystery
70 Comedy
70 Mystery
70 Drama
70 Drama
70 Western
70 Western
70 Western
70 Comedy
70 Comedy
70 Drama
70 Comedy
70 Drama
70 Drama
70 Drama
70 Drama
69 Drama
69 Comedy
69 Drama
69 Drama
69 Comedy
69 Horror
69 Western
69 Comedy
69 Horror
69 Action
69 Comedy
69 Mystery
69 Drama
69 Comedy
69 Action
69 Action
69 Comedy
69 Music
69 Mystery
69 Drama
68 Drama
68 Drama
68 Comedy
68 Comedy
68 Comedy
68 Comedy
68 Action
68 Drama
68 Comedy
68 Comedy
68 Drama
68 Science Fiction
68 Drama
68 Action
68 Comedy
68 Drama
68 Drama
68 Drama
68 Drama
68 Drama
68 Drama
68 Comedy
68 Science Fiction
68 Science Fiction
67 Science Fiction
67 Drama
67 Action
67 Western
67 Western
67 Comedy
67 Drama
67 Drama
67 Mystery
67 Drama
67 Comedy
67 Comedy
67 Drama
67 Drama
67 Drama
67 Action
67 Mystery
67 Mystery
66 Mystery
66 Comedy
66 Mystery
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Comedy
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
66 Drama
65 Comedy
65 Comedy
65 Drama
65 Comedy
65 Action
65 Drama
65 Drama
65 Drama
65 Comedy
65 Drama
65 Western
65 Action
65 Drama
65 Drama
65 Drama
65 Comedy
65 Comedy
65 Drama
65 Drama
64 Drama
64 Science Fiction
64 Horror
64 Western
64 Comedy
64 Crime
64 Drama
64 Drama
64 Comedy
64 Mystery
64 Horror
64 Comedy
64 Action
64 Action
64 Action
64 Comedy
63 Drama
63 Comedy
63 Comedy
63 Drama
63 Horror
63 Drama
63 Comedy
63 Comedy
63 Action
63 Drama
63 Drama
63 Drama
63 Western
63 Comedy
62 Drama
62 Drama
62 Drama
62 Drama
62 Horror
62 Mystery
62 Science Fiction
62 Action
62 Action
62 Comedy
62 Drama
62 Comedy
62 Comedy
62 Drama
62 Comedy
62 Drama
62 Comedy
62 Comedy
62 Comedy
62 Comedy
62 Drama
62 Comedy
62 Mystery
62 Drama
62 Drama
62 Drama
62 Drama
62 Mystery
61 Drama
61 Drama
61 Drama
61 Comedy
61 Drama
61 Mystery
61 Comedy
61 Mystery
61 Drama
61 Music
61 Drama
61 Action
61 Drama
61 Drama
61 Comedy
61 Drama
61 Western
61 Drama
61 Comedy
60 Western
60 Drama
60 Comedy
60 Drama
60 Drama
60 Drama
60 Comedy
60 Comedy
60 Comedy
60 Drama
60 Drama
60 Comedy
60 Drama
60 Drama
60 Drama
60 Drama
60 Drama
60 Horror
60 Mystery
60 Action
59 Comedy
59 Comedy
59 Music
59 Comedy
59 Western
59 Drama
59 Drama
59 Drama
59 Drama
59 Comedy
59 Action
59 Comedy
59 Comedy
59 Drama
59 Drama
59 Science Fiction
59 Action
59 Drama
58 Drama
58 Comedy
58 Horror
58 Comedy
58 Drama
58 Drama
58 Comedy
58 Drama
58 Comedy
58 Comedy
57 Drama
57 Comedy
57 Mystery
57 Comedy
57 Comedy
57 Drama
57 Mystery
57 Comedy
57 Comedy
57 Comedy
57 Action
57 Action
57 Drama
57 Comedy
57 Comedy
57 Action
57 Drama
57 Comedy
56 Comedy
56 Comedy
56 Comedy
56 Comedy
56 Mystery
56 Action
56 Action
56 Drama
56 Drama
56 Comedy
55 Comedy
55 Drama
55 Comedy
55 Drama
55 Drama
55 Drama
55 Comedy
55 Comedy
55 Comedy
55 Comedy
55 Drama
54 Mystery
54 Drama
54 Drama
54 Comedy
54 Action
54 Mystery
54 Mystery
54 Drama
54 Action
54 Horror
54 Action
54 Comedy
54 Drama
54 Action
54 Action
54 Comedy
54 Mystery
54 Action
54 Comedy
54 Action
54 Drama
54 Comedy
54 Comedy
54 Action
53 Drama
53 Drama
53 Drama
53 Drama
53 Western
53 Comedy
53 Comedy
53 Mystery
53 Drama
53 Drama
53 Horror
53 Action
53 Comedy
53 War
53 Comedy
52 Drama
52 Action
52 Comedy
52 Drama
52 Drama
52 Comedy
52 Music
52 Comedy
52 Drama
52 Drama
52 Drama
52 Science Fiction
52 Action
52 Drama
52 Romance
51 Mystery
51 Mystery
51 Western
51 Comedy
51 Music
51 Action
51 Horror
51 Action
51 Mystery
51 Drama
51 Comedy
51 Drama
51 Drama
51 Drama
51 Action
51 Drama
51 Westerns
51 Action
51 Drama
50 Mystery
50 Drama
50 Comedy
50 Drama
50 Comedy
50 Drama
50 Comedy
50 Action
50 Action
50 Horror
50 Drama
50 Drama
50 Drama
50 Comedy
50 Action
50 Action
50 Drama
50 Drama
50 Drama
50 Drama
50 Drama
49 Drama
49 Drama
49 Action
49 Drama
49 Drama
49 Music
49 Action
49 Drama
49 Action
49 Comedy
49 Action
49 Drama
49 Horror
49 Drama
49 Comedy
49 Drama
49 Drama
49 Comedy
49 Action
49 Comedy
49 Drama
48 Comedy
48 Comedy
48 Comedy
48 Western
48 Drama
48 Drama
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Music
48 Comedy
48 Drama
47 Drama
47 Drama
47 Action
47 Drama
47 War
47 Horror
47 Mystery
47 Drama
47 Drama
47 War
47 Comedy
47 Drama
47 Comedy
47 Action
46 Drama
46 Drama
46 Drama
46 Comedy
46 Comedy
46 Comedy
46 Mystery
46 Action
45 Drama
45 Comedy
45 Comedy
45 Action
45 Western
45 Drama
45 Drama
45 Action
45 Drama
45 Drama
45 Drama
45 Drama
45 Comedy
45 Fantasy
45 Action
45 Drama
45 Mystery
45 Drama
45 Comedy
45 Comedy
45 Drama
44 Drama
44 Comedy
44 Drama
44 Drama
44 Comedy
44 Comedy
44 Drama
44 Drama
44 Action
44 Comedy
44 War
44 Drama
44 Western
44 Western
44 Action
44 Comedy
44 Science Fiction
43 Drama
43 Comedy
43 Drama
43 Drama
43 Horror
43 Comedy
43 Music
43 Action
43 Music
43 Comedy
43 Comedy
43 Comedy
43 Action
42 Comedy
42 Comedy
42 Comedy
42 Science Fiction
42 Drama
42 Drama
42 Comedy
42 Drama
42 Drama
42 Western
42 Drama
42 Mystery
42 Comedy
42 Drama
42 Drama
41 Drama
41 Action
41 Drama
41 Drama
41 Drama
41 Mystery
41 Drama
41 Drama
41 War
41 Horror
41 Drama
41 Action
41 Drama
41 Drama
41 Drama
41 Western
41 Comedy
41 Science Fiction
41 Action
40 Action
40 Action
40 Comedy
40 Action
40 Drama
40 Drama
40 Drama
40 Comedy
40 Mystery
40 Western
40 Western
40 Western
40 Drama
40 Western
40 Drama
40 Drama
40 Action
40 Drama
40 Drama
39 Western
39 Western
39 Drama
39 Drama
39 Drama
39 Horror
39 Horror
39 Action
39 Drama
39 Comedy
39 Drama
39 Drama
39 Drama
39 Drama
39 Comedy
39 Action
38 Action
38 Music
38 Drama
38 Drama
38 Comedy
38 Comedy
38 Drama
38 Comedy
38 Comedy
38 Comedy
37 Comedy
37 
37 Comedy
37 Music
37 Comedy
37 Adventure
37 Drama
37 Comedy
37 Drama
37 Mystery
36 Action
36 Drama
36 Drama
36 Drama
36 Drama
36 Horror
36 Comedy
36 Drama
36 Mystery
36 Action
36 Comedy
36 Mystery
36 Mystery
36 Mystery
36 Comedy
36 Comedy
36 Comedy
36 Comedy
36 Comedy
36 Drama
35 Comedy
35 Comedy
35 Drama
35 Drama
35 Action
35 Drama
35 Drama
35 Comedy
35 Drama
35 Drama
35 Drama
35 Action
35 Science Fiction
35 Comedy
35 Comedy
35 Comedy
34 Music
34 Drama
34 Drama
34 Drama
34 Comedy
34 Comedy
34 Drama
34 Drama
34 Drama
34 Drama
34 Mystery
34 Action
34 Drama
34 Drama
34 Western
33 Comedy
33 Comedy
33 Comedy
33 Drama
33 Action
33 Western
33 Music
33 Mystery
33 Comedy
33 Mystery
33 Mystery
33 Western
33 Action
33 Drama
33 Western
33 Action
32 Action
32 Mystery
32 Comedy
32 Comedy
32 Drama
32 Drama
32 Drama
32 Drama
32 Comedy
32 Drama
32 Horror
32 Action
32 Western
32 Mystery
32 Drama
32 Action
32 Western
32 Comedy
32 Science Fiction
32 Action
31 Comedy
31 Drama
31 Comedy
31 Comedy
31 Mystery
31 Comedy
31 Drama
31 Drama
31 Mystery
31 Drama
31 Drama
31 Action
31 Drama
31 Drama
31 Drama
31 Comedy
31 Science Fiction
31 Drama
30 Drama
30 Music
30 Drama
30 Drama
30 Comedy
30 Comedy
30 Comedy
30 Comedy
30 Action
30 Drama
30 Drama
30 Drama
30 Drama
30 Drama
29 Comedy
29 Action
29 Comedy
29 Action
29 Drama
29 Comedy
29 Drama
29 Drama
29 Drama
29 Drama
29 Drama
29 Mystery
29 Drama
29 Comedy
29 Drama
29 Drama
29 Comedy
29 Drama
29 Comedy
29 Drama
29 Drama
28 Comedy
28 Comedy
28 Drama
28 Comedy
28 Drama
28 Comedy
28 Horror
28 Western
28 Drama
28 Comedy
28 Action
28 Comedy
28 Action
28 Drama
28 Action
28 Action
28 Action
28 Drama
28 Action
28 Science Fiction
28 Comedy
28 Comedy
27 Science Fiction
27 Western
27 Mystery
27 Action
27 Comedy
27 Drama
27 Drama
27 Drama
27 Drama
27 Mystery
27 Comedy
27 Drama
27 Drama
27 Comedy
27 Drama
27 Drama
27 Drama
26 Drama
26 Drama
26 Drama
26 Comedy
26 Drama
26 Drama
26 Music
26 Drama
26 Music
26 Music
26 Drama
26 Drama
26 Drama
26 Drama
26 Action
26 Drama
26 Drama
26 Drama
26 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Comedy
25 Drama
25 Music
25 Drama
25 Drama
25 Drama
25 Drama
25 Drama
25 Comedy
25 Drama
25 Drama
25 Drama
25 Western
25 Western
25 Music
24 Comedy
24 Action
24 Western
24 Music
24 Comedy
24 Western
24 Drama
24 Action
24 Comedy
24 Drama
24 Drama
24 Horror
24 Comedy
24 Drama
24 Drama
24 Drama
24 Drama
24 Comedy
24 Mystery
24 Action
23 Drama
23 Drama
23 Western
23 Drama
23 Western
23 Drama
23 War
23 Comedy
23 Comedy
23 Drama
23 Action
23 Action
23 Comedy
23 War
23 Drama
23 Comedy
23 Comedy
23 Science Fiction
23 Drama
23 Drama
23 Drama
22 Drama
22 Drama
22 Drama
22 War
22 Drama
22 Action
22 Drama
22 Drama
22 Drama
22 Mystery
22 Comedy
22 Drama
22 Horror
22 Science Fiction
21 Mystery
21 Adventure
21 Mystery
21 Comedy
21 Comedy
21 Science Fiction
21 Science Fiction
21 Science Fiction
21 Science Fiction
21 Comedy
21 Comedy
21 Drama
20 Action
20 Action
20 Mystery
20 Comedy
20 Action
20 Western
20 Drama
20 Western
20 Mystery
20 Drama
20 Music
20 Drama
20 Drama
20 Science Fiction
20 Comedy
20 Action
20 Action
20 Comedy
20 Comedy
20 Drama
19 Horror
19 Comedy
19 Drama
19 Comedy
19 Music
19 Comedy
19 Comedy
19 Drama
19 Western
19 Horror
19 Drama
19 Drama
19 Mystery
19 Comedy
19 Action
18 Drama
18 Drama
18 Horror
18 Western
18 Drama
18 Westerns
18 Comedy
18 Comedy
18 Western
18 Action
18 Drama
18 Music
17 Comedy
17 Comedy
17 Comedy
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Drama
17 Mystery
17 Drama
17 Action
17 Drama
16 Mystery
16 Drama
16 Drama
16 Science Fiction
16 Action
16 Western
16 Drama
16 Comedy
16 Drama
16 Drama
16 Mystery
16 War
16 Drama
16 Action
15 Horror
15 Drama
15 Drama
15 Comedy
15 Drama
15 Drama
15 Drama
15 Drama
15 Action
15 Comedy
15 Western
15 Comedy
14 Drama
14 Comedy
14 Action
14 Drama
14 Action
14 Action
14 Drama
14 Drama
14 Horror
14 Horror
14 Horror
14 Drama
14 Comedy
14 Comedy
14 Drama
13 Comedy
13 Drama
13 Action
13 Drama
13 Music
13 Western
13 Action
13 Action
13 Comedy
13 Comedy
13 Western
13 War
13 Drama
12 Western
12 Western
12 Western
12 Western
12 Western
12 Western
12 Western
12 Comedy
12 Comedy
12 Drama
12 Action
12 Drama
12 Comedy
12 Comedy
12 Comedy
12 Drama
11 Drama
11 Drama
11 Action
11 Western
11 Action
11 Western
11 Western
11 Drama
11 Science Fiction
11 Mystery
11 Mystery
11 Mystery
11 Mystery
11 Horror
11 Drama
11 Comedy
11 Drama
11 Drama
11 War
11 Mystery
10 Drama
10 Comedy
10 Comedy
10 Drama
10 Action
10 Comedy
10 Comedy
10 Action
10 Western
10 Drama
10 War
10 Action
10 Mystery
10 War
10 Drama
10 Science Fiction
10 War
10 Drama
9 Drama
9 Drama
9 Drama
9 Drama
9 Drama
9 Mystery
9 Drama
9 Drama
9 Action
9 Drama
9 Drama
9 Action
9 Action
9 Science Fiction
9 Mystery
9 Drama
9 Drama
9 Drama
9 Drama
9 Drama
8 Drama
8 Drama
8 Comedy
8 Westerns
8 War
8 Drama
8 Action
8 Comedy
8 Drama
8 Music
8 Comedy
8 Action
8 Action
8 War
8 War
8 Drama
8 Horror
8 Comedy
8 Drama
8 Comedy
8 Action
8 Drama
8 Action
8 Western
8 Comedy
8 Action
8 Western
8 Drama
8 Drama
8 Drama
8 Action
8 Comedy
8 Comedy
8 Comedy
8 Comedy
8 Western
8 Drama
8 Drama
8 Comedy
8 Action
8 Mystery
8 Mystery
8 Drama
8 Horror
8 Drama
8 Comedy
8 Drama
8 Drama
8 Action
8 Western
7 Drama
7 Comedy
7 Drama
7 Action
7 Drama
7 Drama
7 Action
7 Action
7 Comedy
7 Horror
7 Drama
7 Action
7 Drama
7 Comedy
7 Western
7 Comedy
7 Action
7 Music
7 Action
7 Comedy
7 Science Fiction
7 Western
7 Drama
7 War
7 Drama
7 Drama
7 Drama
7 Comedy
6 Drama
6 Comedy
6 Western
6 Western
6 Horror
6 Drama
6 Drama
6 Drama
6 War
6 Action
6 Mystery
6 Drama
6 Drama
6 Drama
6 Science Fiction
6 Music
6 Western
6 Comedy
6 Drama
6 Music
6 Drama
6 Western
6 Western
6 Western
6 Action
6 Western
6 Western
6 Western
6 Action
6 Western
6 Western
6 Western
6 Comedy
6 Drama
6 Drama
6 Drama
6 Action
6 Drama
6 Comedy
6 Drama
6 Drama
6 War
6 Drama
6 Drama
6 Drama
6 Drama
6 Comedy
6 Action
5 Western
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Comedy
5 Drama
5 Action
5 Mystery
5 Comedy
5 Comedy
5 Mystery
5 Drama
5 Comedy
5 War
5 Westerns
5 Action
5 Action
5 Westerns
5 Western
5 Mystery
4 Drama
4 Western
4 Mystery
4 Action
4 Drama
4 Western
4 Drama
4 Comedy
4 Western
4 Drama
4 Western
4 Mystery
4 Drama
4 Drama
4 Drama
4 Horror
4 Drama
4 Horror
4 Drama
4 Action
3 Mystery
3 Drama
3 Action
3 Comedy
3 Mystery
3 Music
3 Comedy
3 Music
3 Comedy
3 Comedy
3 Comedy
3 Action
3 Action
3 Mystery
3 Comedy
3 Action
3 Comedy
3 Comedy
3 Horror
3 Mystery
3 Western
3 Action
3 Drama
3 Comedy
3 Mystery
3 Music
3 Comedy
3 Comedy
3 Western
2 Drama
2 War
2 Action
2 Comedy
2 Comedy
2 Comedy
2 Comedy
2 Comedy
2 Action
2 Comedy
2 Comedy
2 Horror
2 Science Fiction
2 Action
2 Music
2 Drama
2 Action
2 Drama
2 Western
2 Drama
2 Drama
1 Drama
1 Comedy
1 Western
1 Western
1 Western
1 Western
1 Western
1 Western
1 Action
1 War
1 War
1 War
1 Western
1 Western
1 Western
1 Western
1 Western
1 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Action
0 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Western
0 Action
0 Action
0 Drama
0 Comedy
0 Comedy
0 
0 
The two lists Action and Comedy are not equal
3277857
Scorsese, Martin     
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cpp
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H[97m[41mE325: ATTENTION[m
Found a swap file by the name ".Tasks.cpp.swp"
[10Cowned by: sami   dated: Thu Nov 24 14:09:55 2022
[9Cfile name: ~sami/3142C++/cisc3142/Ex-8/Tasks.cpp
[10Cmodified: YES
[9Cuser name: sami   host name: DESKTOP-SAMI
[8Cprocess ID: 432
While opening file "Tasks.cpp"
[13Cdated: Sat Dec 03 00:33:42 2022
      NEWER than swap file!

(1) Another program may be editing the same file.  If this is the case,
    be careful not to end up with two different instances of the same
    file when making changes.  Quit, or continue with caution.
(2) An edit session for this file crashed.
    If this is the case, use ":recover" or "vim -r Tasks.cpp"
    to recover the changes (see ":help recovery").
    If you did this already, delete the swap file ".Tasks.cpp.swp"
    to avoid this message.

[32mSwap file ".Tasks.cpp.swp" already exists![m
[32m[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: [?25h[m[34;1H[K[?25l[34;1H"Tasks.cpp" 89L, 2231C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;25H[38;5;130melse[m{column8.push_back([31m0[m);}[2;25Hgetline(infile, awards,[31m';'[m);[3;25Hgetline(infile, image,[35m'\n'[m);[4;25Hcolumn10.push_back(image);[5;17H}[7;9Hsort(column8.begin(), column8.end());[8;9Hvector<[32mint[m> action, comedy;[9;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[10;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<column4[i]<<endl;[11;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[12;25Haction.push_back(column1[i]);
                }
                [38;5;130mif[m(column4[i]==[31m"Comedy"[m){     [15;11H              comedy.push_back(column1[i]);[15;55H[K[16;10H       }[16;18H[K[17;9H}[17;11H[K[18;9Hsort(action.begin(),action.end());[18;43H[K[19;9Hsort(comedy.begin(),comedy.end());
        [38;5;130mif[m(equal(comedy.begin(),comedy.end(), action.begin())){[21;14H   cout<< [31m"The two lists Action and Comedy are equal"[m<<endl;[22;7H  }[22;10H[K[23;9H[38;5;130melse[m{
                cout<<[31m"The two lists Action and Comedy are not equal"[m<<endl;
        }[25;10H[K[26;5H    [26;10H[K[27;1H        [32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);
        cout <<x<<endl;[28;24H[K[29;5H    vector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);
        cout<< *it<<[31m"     "[m<<endl;[30;35H[K[31;5H    [31;9H[K[32;1H}
        [33;9H[K[34;105H81,1-8[8CBot[25;8H[?25h[?25l[34;95H~@k[25;8H[34;95H   [24;8H[34;106H0[24;8H[?25h[?25l[34;95H~@k[24;8H[34;95H   [23;8H[34;105H79[23;8H[?25h[?25l[34;95H~@k[23;8H[34;95H   [22;8H[34;106H8[22;8H[?25h[?25l[34;95H~@k[22;8H[34;95H   [21;8H[34;106H7[21;8H[?25h[?25l[34;95H~@k[21;8H[34;95H   [20;8H[34;106H6[20;8H[?25h[?25l[34;95H~@k[20;8H[34;95H   [19;8H[34;106H5[19;8H[?25h[?25l[34;95H~@k[19;8H[34;95H   [18;8H[34;106H4[18;8H[?25h[?25l[34;95H~@k[18;8H[34;95H   [17;8H[34;106H3[17;8H[?25h[?25l[34;95H~@k[17;8H[34;95H   [16;8H[34;106H2[16;8H[?25h[?25l[34;95H~@k[16;8H[34;95H   [15;8H[34;106H1[15;8H[?25h[?25l[34;95H~@k[15;8H[34;95H   [14;8H[34;106H0[14;8H[?25h[?25l[34;95H~@k[14;8H[34;95H   [13;8H[34;105H69[13;8H[?25h[?25l[34;95H~@k[13;8H[34;95H   [12;8H[34;106H8[12;8H[?25h[?25l[34;95H~@k[12;8H[34;95H   [11;8H[34;106H7[11;8H[?25h[?25l[34;95H~@k[11;8H[34;95H   [10;8H[34;106H6[10;8H[?25h[?25l[34;95H~@k[10;8H[34;95H   [9;8H[34;106H5[9;8H[?25h[?25l[34;95H~@k[9;8H[34;95H   [8;8H[34;106H4[8;8H[?25h[?25l[34;95H~@k[8;8H[34;95H   [7;8H[34;106H3[7;8H[?25h[?25l[34;95H~@k[7;8H[34;95H   [8;8H[34;106H4[8;8H[?25h[?25l[34;95H~@k[8;8H[34;95H   [9;8H[34;106H5[9;8H[?25h[?25l[34;95H~@k[9;8H[34;95H   [10;8H[34;106H6[10;8H[?25h[?25l[34;95H~@k[10;8H[34;95H   [10;16H[34;108H2-16[10;16H[?25h[?25l[34;95H~@k[10;16H[34;95H   [10;17H[34;108H3-17[10;17H[?25h[?25l[34;95H~@k[10;17H[34;95H   [11;17H[34;106H7[11;17H[?25h[?25l[34;95H~@k[11;17H[34;95H   [10;17H[34;106H6[10;17H[?25h[?25l[34;95H~@k[10;17H[34;95H   [9;17H[34;106H5,10-17[9;17H[?25h[?25l[34;95H~@k[9;17H[34;95H   [10;17H[34;106H6,3-17 [10;17H[?25h[?25l[34;95H~@k[10;17H[34;95H   [9;17H[34;106H5,10-17[9;17H[?25h[?25l[34;95H~@k[9;17H[34;95H   [10;17H[34;106H6,3-17 [10;17H[?25h[?25l[34;95H~@k[10;17H[34;95H   [10;18H[34;108H4-18[10;18H[?25h[?25l[34;95H~@k[10;18H[34;95H   [10;19H[34;108H5-19[10;19H[?25h[?25l[34;95H~@k[10;19H[34;95H   [10;20H[34;108H6-20[10;20H[?25h[?25l[34;95H~@k[10;20H[34;95H   [10;21H[34;108H7-21[10;21H[?25h[?25l[34;95H~@k[10;21H[34;95H   [10;22H[34;108H8-22[10;22H[?25h[?25l[34;95H~@k[10;22H[34;95H   [10;21H[34;108H7-21[10;21H[?25h[?25l[34;95H~@k[10;21H[34;95H   [10;20H[34;108H6-20[10;20H[?25h[?25l[34;95H~@k[10;20H[34;95H   [9;20H[34;106H5,13-20[9;20H[?25h[?25l[34;95H~@k[9;20H[34;95H   [9;21H[34;109H4-21[9;21H[?25h[?25l[34;95H~@k[9;21H[34;95H   [9;22H[34;109H5-22[9;22H[?25h[?25l[34;95H~@k[9;22H[34;95H   [8;22H[34;106H4[8;22H[?25h[?25l[34;95H~@k[8;22H[34;95H   [8;23H[34;109H6-23[8;23H[?25h[?25l[34;95H~@k[8;23H[34;95H   [8;24H[34;109H7-24[8;24H[?25h[?25l[34;95H~@k[8;24H[34;95H   [8;25H[34;109H8-25[8;25H[?25h[?25l[34;95H~@k[8;25H[34;95H   [8;26H[34;109H9-26[8;26H[?25h[?25l[34;95H~@k[8;26H[34;95H   [8;27H[34;108H20-27[8;27H[?25h[?25l[34;95H~@k[8;27H[34;95H   [8;28H[34;109H1-28[8;28H[?25h[?25l[34;95H~@k[8;28H[34;95H   [8;29H[34;109H2-29[8;29H[?25h[?25l[34;95H~@k[8;29H[34;95H   [8;30H[34;109H3-30[8;30H[?25h[?25l[34;95H~@k[8;30H[34;95H   [8;31H[34;109H4-31[8;31H[?25h[?25l[34;95H~@k[8;31H[34;95H   [8;32H[34;109H5-32[8;32H[?25h[?25l[34;95H~@k[8;32H[34;95H   [8;33H[34;109H6-33[8;33H[?25h[?25l[34;95H~@k[8;33H[34;95H   [8;34H[34;109H7-34[8;34H[?25h[?25l[34;95H~@k[8;34H[34;95H   [8;35H[34;109H8-35[8;35H[?25h[?25l[34;95H~@k[8;35H[34;95H   [8;35H[?25h[?25l[34;95H~@k[8;35H[34;95H   [8;35H[?25h[?25l[34;95Hi[8;35H[34;95H [8;35H[34;1H[1m-- INSERT --[m[34;13H[K[34;105H64,28-35      Bot[8;35H[?25h[?25l[34;109H9-36[8;36H[?25h[?25l[9;33r[9;1H[L[1;34r[34;105H[K[34;105H65,2-9[8C98%[9;9H[?25h[?25lc[34;108H3-10[9;10H[?25h[?25lo[34;108H4-11[9;11H[?25h[?25lu[34;108H5-12[9;12H[?25h[?25lt[34;108H6-13[9;13H[?25h[?25l<[34;108H7-14[9;14H[?25h[?25l<[34;108H8-15[9;15H[?25h[?25l[34;108H9-16[9;16H[?25h[?25l[34;108H8-15[9;15H[?25h[?25l[31m"[m[34;108H9-16[9;16H[?25h[?25l[31m"[m[34;108H10-17[9;17H[?25h[?25l[34;108H9-16 [9;16H[?25h[?25l[31mT"[m[34;108H10-17[9;17H[?25h[?25l[31mh"[m[34;109H1-18[9;18H[?25h[?25l[31me"[m[34;109H2-19[9;19H[?25h[?25l[31m "[m[34;109H3-20[9;20H[?25h[?25l[31mp"[m[34;109H4-21[9;21H[?25h[?25l[31mo"[m[34;109H5-22[9;22H[?25h[?25l[31mp"[m[34;109H6-23[9;23H[?25h[?25l[31mu"[m[34;109H7-24[9;24H[?25h[?25l[31ml"[m[34;109H8-25[9;25H[?25h[?25l[31ma"[m[34;109H9-26[9;26H[?25h[?25l[31mr"[m[34;108H20-27[9;27H[?25h[?25l[31mi"[m[34;109H1-28[9;28H[?25h[?25l[31mt"[m[34;109H2-29[9;29H[?25h[?25l[31my"[m[34;109H3-30[9;30H[?25h[?25l[31m "[m[34;109H4-31[9;31H[?25h[?25l[31mr"[m[34;109H5-32[9;32H[?25h[?25l[31ma"[m[34;109H6-33[9;33H[?25h[?25l[31mt"[m[34;109H7-34[9;34H[?25h[?25l[31mi"[m[34;109H8-35[9;35H[?25h[?25l[31mn"[m[34;109H9-36[9;36H[?25h[?25l[31mg"[m[34;108H30-37[9;37H[?25h[?25l[31m "[m[34;109H1-38[9;38H[?25h[?25l[31mi"[m[34;109H2-39[9;39H[?25h[?25l[31m"[m[9;39H[K[34;109H1-38[9;38H[?25h[?25l[31m"[m[9;38H[K[34;109H0-37[9;37H[?25h[?25l[31ms"[m[34;109H1-38[9;38H[?25h[?25l[31m "[m[34;109H2-39[9;39H[?25h[?25l[31mi"[m[34;109H3-40[9;40H[?25h[?25l[31mn"[m[34;109H4-41[9;41H[?25h[?25l[31m "[m[34;109H5-42[9;42H[?25h[?25l[31md"[m[34;109H6-43[9;43H[?25h[?25l[31me"[m[34;109H7-44[9;44H[?25h[?25l[31ms"[m[34;109H8-45[9;45H[?25h[?25l[31mc"[m[34;109H9-46[9;46H[?25h[?25l[31me"[m[34;108H40-47[9;47H[?25h[?25l[31mn"[m[34;109H1-48[9;48H[?25h[?25l[31md"[m[34;109H2-49[9;49H[?25h[?25l[31mi"[m[34;109H3-50[9;50H[?25h[?25l[31mn"[m[34;109H4-51[9;51H[?25h[?25l[31mg"[m[34;109H5-52[9;52H[?25h[?25l[31m "[m[34;109H6-53[9;53H[?25h[?25l[31mo"[m[34;109H7-54[9;54H[?25h[?25l[31mr"[m[34;109H8-55[9;55H[?25h[?25l[31md"[m[34;109H9-56[9;56H[?25h[?25l[31m3"[m[34;108H50-57[9;57H[?25h[?25l[31mr"[m[34;109H1-58[9;58H[?25h[?25l[31m"[m[9;58H[K[34;109H0-57[9;57H[?25h[?25l[31m"[m[9;57H[K[34;108H49-56[9;56H[?25h[?25l[31me"[m[34;108H50-57[9;57H[?25h[?25l[31mr"[m[34;109H1-58[9;58H[?25h[?25l[31m:"[m[34;109H2-59[9;59H[?25h[?25l[31m "[m[34;109H3-60[9;60H[?25h[?25l[34;109H4-61[9;61H[?25h[?25l<[34;109H5-62[9;62H[?25h[?25l<[34;109H6-63[9;63H[?25h[?25le[34;109H7-64[9;64H[?25h[?25ln[34;109H8-65[9;65H[?25h[?25ld[34;109H9-66[9;66H[?25h[?25ll[34;108H60-67[9;67H[?25h[?25l;[34;109H1-68[9;68H[?25h[?25l[10;43H[106m{[18;9H}[m[34;106H6,37-44[10;44H[?25h[?25l{[18;9H}[34;106H7,47-61[11;61H[?25h[?25l[12;41H[106m{[14;17H}[m[34;106H8,28-42[12;42H[?25h[?25l{[14;17H}[34;106H9,33-54[13;54H[?25h[?25l[12;41H[106m{[14;17H}[m[34;105H70,4-18 [14;18H[?25h[?25l[12;41H{[14;17H}[34;106H1,29-49[15;49H[?25h[?25l[34;106H2,33-54[16;54H[?25h[?25l[15;41H[106m{[17;17H}[m[34;106H3,4-18 [17;18H[?25h[?25l[10;43H[106m{[m[15;41H{[17;17H}[18;9H[106m}[m[34;106H4,3-10[18;10H[?25h[?25l[10;43H{[18;9H}[34;106H5,36-43[19;43H[?25h[?25l[34;106H6[20;43H[?25h[?25l[21;63H[106m{[23;9H}[m[34;106H7,57-64[21;64H[?25h[?25l{[23;9H}[34;106H8,54-68[22;68H[?25h[?25l[21;63H[106m{[23;9H}[m[34;106H7,57-64[21;64H[?25h[?25l{[23;9H}[34;106H6,36-43[20;43H[?25h[?25l[34;106H5[19;43H[?25h[?25l[10;43H[106m{[18;9H}[m[34;106H4,3-10 [18;10H[?25h[?25l[10;43H{[15;41H[106m{[17;17H}[m[18;9H}[34;106H3,4-18[17;18H[?25h[?25l[15;41H{[17;17H}[34;106H2,33-54[16;54H[?25h[?25l[34;106H1,29-49[15;49H[?25h[?25l[12;41H[106m{[14;17H}[m[34;106H0,4-18 [14;18H[?25h[?25l[12;41H{[14;17H}[34;105H69,33-54[13;54H[?25h[?25l[12;41H[106m{[14;17H}[m[34;106H8,28-42[12;42H[?25h[?25l{[14;17H}[34;106H7,47-61[11;61H[?25h[?25l[34;109H6-60[11;60H[?25h[?25l[34;109H5-59[11;59H[?25h[?25l[34;109H4-58[11;58H[?25h[?25l[34;109H3-57[11;57H[?25h[?25l[34;109H2-56[11;56H[?25h[?25l[34;109H1-55[11;55H[?25h[?25l[106m[[mi[106m][m[34;109H0-54[11;54H[?25h[?25l[106m<[m<endl[97m[101m;[m[11;60H[K[12;41H[97m[101m{[13;53H;[14;17H}[15;41H{[16;53H;[17;17H}[18;9H}[19;42H;[20;42H;[21;63H{[22;73H;[23;9H}[24;13H{[25;76H;[26;9H}[28;59H;[29;23H;[30;91H;[31;34H;

}[m[11;51H[i<[34;108H39-53[11;53H[?25h[?25l<<endl[97m[101m;[m[11;59H[K[34;109H8-52[11;52H[?25h[?25l<<endl;[11;58H[K[12;41H{[13;53H;[14;17H}[15;41H{[16;53H;[17;17H}[18;9H}[19;42H;[20;42H;[21;63H{[22;73H;[23;9H}[24;13H{[25;76H;[26;9H}[28;59H;[29;23H;[30;91H;[31;34H;

}[34;109H7-51[11;51H[?25h[?25l<<endl;[11;57H[K[34;109H6-50[11;50H[?25h[?25l<<endl;[11;56H[K[34;109H5-49[11;49H[?25h[?25l<<endl;[11;55H[K[34;109H4-48[11;48H[?25h[?25l<<endl;[11;54H[K[34;109H3-47[11;47H[?25h[?25l<<endl;[11;53H[K[34;109H2-46[11;46H[?25h[?25l<<endl;[11;52H[K[34;109H1-45[11;45H[?25h[?25l<<endl;[11;51H[K[34;109H0-44[11;44H[?25h[?25l[34;109H1-45[11;45H[?25h[?25lendl;[11;50H[K[34;109H0-44[11;44H[?25h[?25lendl;[11;49H[K[34;108H29-43[11;43H[?25h[?25l[12;41H[106m{[14;17H}[m[34;106H8,28-42[12;42H[?25h[?25l{[14;17H}[34;106H9,22-43[13;43H[?25h[?25l[12;41H[106m{[14;17H}[m[34;105H70,4-18 [14;18H[?25h[?25l[12;41H{[14;17H}[15;41H[106m{[17;17H}[m[34;106H1,28-42[15;42H[?25h[?25l{[17;17H}[34;106H2,22-43[16;43H[?25h[?25l[15;41H[106m{[17;17H}[m[34;106H3,4-18 [17;18H[?25h[?25l[10;43H[106m{[m[15;41H{[17;17H}[18;9H[106m}[m[34;106H4,3-10[18;10H[?25h[?25l[10;43H{[18;9H}[34;106H5,36-43[19;43H[?25h[?25l[34;106H6[20;43H[?25h[?25l[21;43H[106m()[m[34;106H7[21;43H[?25h[?25l()[34;106H8,29[22;43H[?25h[?25l[21;63H[106m{[23;9H}[m[34;106H9,3-10 [23;10H[?25h[?25l[21;63H{[23;9H}[24;13H[106m{[26;9H}[m[34;105H80,7-14[24;14H[?25h[?25l{[26;9H}[34;106H1,29-43[25;43H[?25h[?25l[24;13H[106m{[26;9H}[m[34;106H2,3-10 [26;10H[?25h[?25l[24;13H{[26;9H}[34;106H3,2-9 [27;9H[?25h[?25l[34;106H4,36-43[28;43H[?25h[?25l[34;109H7-44[28;44H[?25h[?25l[34;109H8-45[28;45H[?25h[?25l[34;109H9-46[28;46H[?25h[?25l[34;108H40-47[28;47H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H85,17-24      Bot[28;24H[?25h[?25l[34;106H4,40-47[27;47H[?25h[?25l[34;106H3,2-9  [26;9H[?25h[?25l[34;106H4,40-47[27;47H[?25h[?25l[34;106H5,17-24[28;24H[?25h[?25l[34;109H6-23[28;23H[?25h[?25l[34;109H5-22[28;22H[?25h[?25l[34;109H4-21[28;21H[?25h[?25l[34;109H3-20[28;20H[?25h[?25l[34;109H2-19[28;19H[?25h[?25l[34;109H1-18[28;18H[?25h[?25l[34;109H0-17[28;17H[?25h[?25l[34;108H9-16 [28;16H[?25h[?25l[34;108H8-15[28;15H[?25h[?25l[34;108H7-14[28;14H[?25h[?25l[34;108H6-13[28;13H[?25h[?25l< <<x<<endl;[34;108H7-14[28;14H[?25h[?25l< <<x<<endl;[34;108H8-15[28;15H[?25h[?25l[31m" <<x<<endl;[m[34;108H9-16[28;16H[?25h[?25l[31m"[m <<x<<endl;[34;108H10-17[28;17H[?25h[?25l[34;108H9-16 [28;16H[?25h[?25l[31mT"[m <<x<<endl;[34;108H10-17[28;17H[?25h[?25l[31mh"[m <<x<<endl;[34;109H1-18[28;18H[?25h[?25l[31me"[m <<x<<endl;[34;109H2-19[28;19H[?25h[?25l[31m "[m <<x<<endl;[34;109H3-20[28;20H[?25h[?25l[31mt"[m <<x<<endl;[34;109H4-21[28;21H[?25h[?25l[31mo"[m <<x<<endl;[34;109H5-22[28;22H[?25h[?25l[31mt"[m <<x<<endl;[34;109H6-23[28;23H[?25h[?25l[31ma"[m <<x<<endl;[34;109H7-24[28;24H[?25h[?25l[31ml"[m <<x<<endl;[34;109H8-25[28;25H[?25h[?25l[31m "[m <<x<<endl;[34;109H9-26[28;26H[?25h[?25l[31mr"[m <<x<<endl;[34;108H20-27[28;27H[?25h[?25l[31mu"[m <<x<<endl;[34;109H1-28[28;28H[?25h[?25l[31mn"[m <<x<<endl;[34;109H2-29[28;29H[?25h[?25l[31mt"[m <<x<<endl;[34;109H3-30[28;30H[?25h[?25l[31mi"[m <<x<<endl;[34;109H4-31[28;31H[?25h[?25l[31mm"[m <<x<<endl;[34;109H5-32[28;32H[?25h[?25l[31me"[m <<x<<endl;[34;109H6-33[28;33H[?25h[?25l[31m "[m <<x<<endl;[34;109H7-34[28;34H[?25h[?25l[31mo"[m <<x<<endl;[34;109H8-35[28;35H[?25h[?25l[31mf"[m <<x<<endl;[34;109H9-36[28;36H[?25h[?25l[31m "[m <<x<<endl;[34;108H30-37[28;37H[?25h[?25l[31ma"[m <<x<<endl;[34;109H1-38[28;38H[?25h[?25l[31ml"[m <<x<<endl;[34;109H2-39[28;39H[?25h[?25l[31ml"[m <<x<<endl;[34;109H3-40[28;40H[?25h[?25l[31m "[m <<x<<endl;[34;109H4-41[28;41H[?25h[?25l[31mm"[m <<x<<endl;[34;109H5-42[28;42H[?25h[?25l[31mo"[m <<x<<endl;[34;109H6-43[28;43H[?25h[?25l[31mv"[m <<x<<endl;[34;109H7-44[28;44H[?25h[?25l[31mi"[m <<x<<endl;[34;109H8-45[28;45H[?25h[?25l[31me"[m <<x<<endl;[34;109H9-46[28;46H[?25h[?25l[31ms"[m <<x<<endl;[34;108H40-47[28;47H[?25h[?25l[31m "[m <<x<<endl;[34;109H1-48[28;48H[?25h[?25l[31mi"[m <<x<<endl;[34;109H2-49[28;49H[?25h[?25l[31ms"[m <<x<<endl;[34;109H3-50[28;50H[?25h[?25l[31m "[m <<x<<endl;[34;109H4-51[28;51H[?25h[?25l[31m:"[m <<x<<endl;[34;109H5-52[28;52H[?25h[?25l[31m "[m <<x<<endl;[34;109H6-53[28;53H[?25h[?25l[34;106H6[29;53H[?25h[?25l[34;106H7,28-35[30;35H[?25h[?25l[34;109H7-34[30;34H[?25h[?25l[34;109H6-33[30;33H[?25h[?25l[34;109H5-32[30;32H[?25h[?25l[34;109H4-31[30;31H[?25h[?25l[34;109H3-30[30;30H[?25h[?25l[34;109H2-29[30;29H[?25h[?25l[34;109H1-28[30;28H[?25h[?25l[34;109H0-27[30;27H[?25h[?25l[34;108H19-26[30;26H[?25h[?25l[34;109H8-25[30;25H[?25h[?25l[34;109H7-24[30;24H[?25h[?25l[34;109H6-23[30;23H[?25h[?25l[34;109H5-22[30;22H[?25h[?25l[34;109H4-21[30;21H[?25h[?25l[34;109H3-20[30;20H[?25h[?25l[34;109H2-19[30;19H[?25h[?25l[34;109H1-18[30;18H[?25h[?25l[34;109H0-17[30;17H[?25h[?25l[34;108H9-16 [30;16H[?25h[?25l[34;108H10-17[30;17H[?25h[?25l[34;109H1-18[30;18H[?25h[?25l[34;109H2-19[30;19H[?25h[?25l[34;109H3-20[30;20H[?25h[?25l[34;109H4-21[30;21H[?25h[?25l[34;109H5-22[30;22H[?25h[?25l[34;109H6-23[30;23H[?25h[?25l[34;109H5-22[30;22H[?25h[?25l[34;109H6-23[30;23H[?25h[?25l[34;109H7-24[30;24H[?25h[?25l[34;109H8-25[30;25H[?25h[?25l[34;109H9-26[30;26H[?25h[?25l[34;108H20-27[30;27H[?25h[?25l[34;109H1-28[30;28H[?25h[?25l[31m<<endl;[m[30;34H[K[34;109H0-27[30;27H[?25h[?25l[31m<<endl;[m[30;33H[K[34;108H19-26[30;26H[?25h[?25l[31m<<endl;[m[30;32H[K[34;109H8-25[30;25H[?25h[?25l[31m<<endl;[m[30;31H[K[34;109H7-24[30;24H[?25h[?25l[31m<<endl;[m[30;30H[K[34;109H6-23[30;23H[?25h[?25l[31m<<endl;[m[30;29H[K[34;109H5-22[30;22H[?25h[?25l<<endl;[30;28H[K[34;109H4-21[30;21H[?25h[?25l<endl;[30;27H[K[34;109H3-20[30;20H[?25h[?25l<endl;[30;26H[K[34;109H2-19[30;19H[?25h[?25l[34;109H1-18[30;18H[?25h[?25l[34;109H0-17[30;17H[?25h[?25l[34;108H9-16 [30;16H[?25h[?25l[34;108H8-15[30;15H[?25h[?25l[34;108H7-14[30;14H[?25h[?25l[34;108H6-13[30;13H[?25h[?25l<<< *it<<endl;[34;108H7-14[30;14H[?25h[?25l<<< *it<<endl;[34;108H8-15[30;15H[?25h[?25l[31m"<< *it<<endl;[m[34;108H9-16[30;16H[?25h[?25l[31m"[m<< *it<<endl;[34;108H10-17[30;17H[?25h[?25l[34;108H9-16 [30;16H[?25h[?25l[31mF"[m<< *it<<endl;[34;108H10-17[30;17H[?25h[?25l[31mi"[m<< *it<<endl;[34;109H1-18[30;18H[?25h[?25l[31mn"[m<< *it<<endl;[34;109H2-19[30;19H[?25h[?25l[31md"[m<< *it<<endl;[34;109H3-20[30;20H[?25h[?25l[31mi"[m<< *it<<endl;[34;109H4-21[30;21H[?25h[?25l[31mn"[m<< *it<<endl;[34;109H5-22[30;22H[?25h[?25l[31mg"[m<< *it<<endl;[34;109H6-23[30;23H[?25h[?25l[31m "[m<< *it<<endl;[34;109H7-24[30;24H[?25h[?25l[31mt"[m<< *it<<endl;[34;109H8-25[30;25H[?25h[?25l[31mh"[m<< *it<<endl;[34;109H9-26[30;26H[?25h[?25l[31me"[m<< *it<<endl;[34;108H20-27[30;27H[?25h[?25l[31m "[m<< *it<<endl;[34;109H1-28[30;28H[?25h[?25l[31mf"[m<< *it<<endl;[34;109H2-29[30;29H[?25h[?25l[31mi"[m<< *it<<endl;[34;109H3-30[30;30H[?25h[?25l[31mr"[m<< *it<<endl;[34;109H4-31[30;31H[?25h[?25l[31ms"[m<< *it<<endl;[34;109H5-32[30;32H[?25h[?25l[31mt"[m<< *it<<endl;[34;109H6-33[30;33H[?25h[?25l[31m "[m<< *it<<endl;[34;109H7-34[30;34H[?25h[?25l[31mi"[m<< *it<<endl;[34;109H8-35[30;35H[?25h[?25l[31mn"[m<< *it<<endl;[34;109H9-36[30;36H[?25h[?25l[31ms"[m<< *it<<endl;[34;108H30-37[30;37H[?25h[?25l[31mt"[m<< *it<<endl;[34;109H1-38[30;38H[?25h[?25l[31ma"[m<< *it<<endl;[34;109H2-39[30;39H[?25h[?25l[31mn"[m<< *it<<endl;[34;109H3-40[30;40H[?25h[?25l[31mc"[m<< *it<<endl;[34;109H4-41[30;41H[?25h[?25l[31me"[m<< *it<<endl;[34;109H5-42[30;42H[?25h[?25l[31m "[m<< *it<<endl;[34;109H6-43[30;43H[?25h[?25l[31mo"[m<< *it<<endl;[34;109H7-44[30;44H[?25h[?25l[31mf"[m<< *it<<endl;[34;109H8-45[30;45H[?25h[?25l[31m "[m<< *it<<endl;[34;109H9-46[30;46H[?25h[?25l[31m"[m<< *it<<endl;[30;59H[K[34;109H8-45[30;45H[?25h[?25l[31mL"[m<< *it<<endl;[34;109H9-46[30;46H[?25h[?25l[31m "[m<< *it<<endl;[34;108H40-47[30;47H[?25h[?25l[31m"[m<< *it<<endl;[30;60H[K[34;108H39-46[30;46H[?25h[?25l[31m"[m<< *it<<endl;[30;59H[K[34;109H8-45[30;45H[?25h[?25l[31m:"[m<< *it<<endl;[34;109H9-46[30;46H[?25h[?25l[31m "[m<< *it<<endl;[34;108H40-47[30;47H[?25h[?25l[34;109H1-48[30;48H[?25h[?25l[34;109H2-49[30;49H[?25h[34;1H[K[30;48H[?25l[34;95H^[[30;48H[34;95H  [30;49H[34;105H87,41-48      Bot[30;48H[?25h[?25l[34;95H:[30;48H[34;95H[K[34;1H:[?2004h[?25hwq[?25l[34;3H[K[34;3H[?25h[?25l[34;2H[K[34;2H[?25h[?25lwq![?25h[?25l:s[34;3H[K[34;3H[?25h[?25lqa![?25h[?25l:e[34;3H[K[34;3H[?25h[?25l:wq![?25h[?25l:qa[34;4H[K[34;4H[?25h[?25lwq[?25h[?25lWq![?25h[?25l:wq1[?25h[?25l[34;3H[K[34;3H[?25h[?25lq![?25h[?25l!q[?25h[?25l1Q[?25h[?25lWq[?25h[?25lwa[?25h[?25l.,$![?25hi[?25l[34;6H[K[34;6H[?25h[?25l[34;5H[K[34;5H[?25h[?25l[34;4H[K[34;4H[?25h[?25l[34;3H[K[34;3H[?25h[?25l[34;2H[K[34;2H[?25h [?25l[30;48H[34;105H87,41-48      Bot[30;48H[?25h[?25l[34;95H~@k[30;48H[34;95H   [30;47H[34;109H0-47[30;47H[?25h[?25l[34;95H~@k[30;47H[34;95H   [30;46H[34;108H39-46[30;46H[?25h[?25l[34;95H~@k[30;46H[34;95H   [30;45H[34;109H8-45[30;45H[?25h[?25l[34;95H~@k[30;45H[34;95H   [30;44H[34;109H7-44[30;44H[?25h[?25l[34;95H^[[30;44H[34;95H  [30;44H[34;95H^[[30;44H[34;95H  [30;44H[?25h[?25l[34;95Hi[30;44H[34;95H [30;44H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H87,37-44      Bot[30;44H[?25h[?25l[34;106H6[29;44H[?25h[?25l[34;106H5[28;44H[?25h[?25l[34;106H4[27;44H[?25h[?25l[34;106H3,2-9  [26;9H[?25h[?25l[23;13H[106m{[25;9H}[m[34;106H2,3-10[25;10H[?25h[?25l[23;13H{[25;9H}[34;106H1,30-44[24;44H[?25h[?25l[23;13H[106m{[25;9H}[m[34;106H0,7-14 [23;14H[?25h[?25l[20;63H[106m{[22;9H}[m[23;13H{[25;9H}[34;105H79,3-10[22;10H[?25h[?25l[20;63H{[22;9H}[34;106H8,30-44[21;44H[?25h[?25l[20;43H[106m()[m[34;106H7,37[20;44H[?25h[?25l()[34;106H6,36-43[19;43H[?25h[?25l[34;106H5[18;43H[?25h[?25l[9;43H[106m{[17;9H}[m[34;106H4,3-10 [17;10H[?25h[?25l[9;43H{[14;41H[106m{[16;17H}[m[17;9H}[34;106H3,4-18[16;18H[?25h[?25l[14;41H{[16;17H}[34;106H2,23-44[15;44H[?25h[?25l[14;41H[106m{[16;17H}[m[34;106H1,28-42[14;42H[?25h[?25l[11;41H[106m{[13;17H}[m[14;41H{[16;17H}[34;106H0,4-18 [13;18H[?25h[?25l[11;41H{[13;17H}[34;105H69,23-44[12;44H[?25h[?25l[11;41H[106m{[13;17H}[m[34;106H8,28-42[11;42H[?25h[?25l{[13;17H}[34;106H7,30-44[10;44H[?25h[?25l[9;43H[106m{[17;9H}[m[34;106H6,37[9;44H[?25h[?25l{[17;9H}[34;106H5[8;44H[?25h[?25l[34;106H4,29-36[7;36H[?25h[?25l[6;13H[106m([30C)[m[34;106H3,37-44[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130melse[m{column8.push_back([31m0[m);}[34;105H[K[34;105H62,1[10C98%[7;13H([30C)[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[34;105H[K[34;105H61,4-18[7C96%[6;18H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m(!popularity.empty()){[34;105H[K[34;105H60,23-44      94%[6;43H[106m([mimage[106m)[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H59,23-44      92%[7;43H(image)[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcolumn7.push_back(director);[34;105H[K[34;105H58,23-44      91%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H57,23-44      89%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcolumn6.push_back(actress);[34;105H[K[34;105H56,23-44      87%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H55,23-44      85%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcolumn5.push_back(actor);[34;105H[K[34;105H54,23-44      84%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H53,23-44      82%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcolumn4.push_back(subject);[34;105H[K[34;105H52,23-44      80%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H51,23-44      78%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcolumn3.push_back(title);[34;105H[K[34;105H50,23-44      77%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, title,[31m';'[m);[34;105H[K[34;105H49,23-44      75%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H48,23-44      73%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H47,23-44      71%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17H}[34;105H[K[34;105H46,23-44      70%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H45,23-44      68%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H44,23-44      66%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H43,4-25[7C64%[6;25H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H42,23-44      63%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H41,4-18[7C61%[4;44H[106m{[6;17H}[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;25H[38;5;130melse[m{column1.push_back([31m0[m); }[34;105H[K[34;105H40,23-44      59%[5;44H{[7;17H}[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H39,23-44      57%[6;44H[106m{[8;17H}[6;44H[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;33Hcolumn1.push_back(stoi(year));[34;105H[K[34;105H38,3-17[7C56%[7;44H{[9;17H}[6;17H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m (!year.empty()){[34;105H[K[34;105H37,23-44      54%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H36,1[10C52%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;105H[K[34;105H35,23-44      50%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[34;105H[K[34;105H34,3-10[7C49%[4;43H[106m{[6;9H}[?25h[?25l[1;33r[m[1;1H[L[1;34r[34;105H[K[34;105H33,16-44      47%[5;43H{[7;9H}[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;105H[K[34;105H32,23-44      45%[6;43H[106m{[8;9H}[6;44H[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;105H[K[34;105H31,4-25[7C43%[7;43H{[9;9H}[6;25H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mint[m sum=[31m0[m;[34;105H[K[34;105H30,23-44      42%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[34;105H[K[34;105H29,23-44      40%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;105H[K[34;105H28,1[10C38%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H27,23-30      36%[6;30H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H26,17-24      35%[6;24H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H25,12-19      33%[6;19H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H24,37-44      31%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;105H[K[34;105H23,37-44      29%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;105H[K[34;105H22,2-9[8C28%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;105H[K[34;105H21,37-44      26%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;105H[K[34;105H20,37-44      24%[6;44H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hifstream infile;[34;105H[K[34;105H19,3-10[7C22%[3;26H[106m{[6;9H}[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;1H[32mint[m main(){[34;105H[K[34;105H18,11-25      21%[4;26H{[7;9H}[6;25H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H17,29-43      19%[6;43H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[38;5;130musing[m [32mnamespace[m std;[34;105H[K[34;105H16,20-27      17%[6;26H[106m{[9;9H}[6;27H[?25h[?25l[1;33r[m[1;1H[L[1;34r[34;105H[K[34;105H15,27-34      15%[7;26H{[10;9H}[6;34H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<algorithm>[m[34;105H[K[34;105H14,18-25      14%[6;25H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<functional>[m[34;105H[K[34;105H13,12[9C12%[6;12H[?25h[?25l[34;106H4,18-25[7;25H[?25h[?25l[8;33r[8;1H[L[1;34r[34;105H[K[34;105H15,2-9[8C12%[8;9H[?25h[?25lo[34;108H3-10[8;10H[?25h[?25lf[34;108H4-11[8;11H[?25h[?25ls[34;108H5-12[8;12H[?25h[?25lt[34;108H6-13[8;13H[?25h[?25lr[34;108H7-14[8;14H[?25h[?25le[34;108H8-15[8;15H[?25h[?25la[34;108H9-16[8;16H[?25h[?25lm[34;108H10-17[8;17H[?25h[?25l[34;109H1-18[8;18H[?25h[?25lo[34;109H2-19[8;19H[?25h[?25lu[34;109H3-20[8;20H[?25h[?25lt[34;109H4-21[8;21H[?25h[?25lf[34;109H5-22[8;22H[?25h[?25li[34;109H6-23[8;23H[?25h[?25ll[34;109H7-24[8;24H[?25h[?25le[34;109H8-25[8;25H[?25h[?25l[8;24H[K[34;109H7-24[8;24H[?25h[?25l[8;23H[K[34;109H6-23[8;23H[?25h[?25l[8;22H[K[34;109H5-22[8;22H[?25h[?25l[8;21H[K[34;109H4-21[8;21H[?25h[?25l;[34;109H5-22[8;22H[?25h[?25l[34;106H6[9;22H[?25h[?25l[34;106H7[10;22H[?25h[?25l[34;106H8,8-22 [11;22H[?25h[?25l[12;21H[106m([1C)[m[34;106H9[12;22H[?25h[?25l[10;26H[106m{[m[12;21H([1C)[13;9H[106m}[m[34;105H20,3-10[13;10H[?25h[?25l[10;26H{[13;9H}[14;22H[106m([48C)[m[34;106H1,15-22[14;22H[?25h[?25l([48C)[15;22H[106m([48C)[m[34;106H2[15;22H[?25h[?25l([48C)[34;106H3,2-9  [16;9H[?25h[?25l[34;106H4,15-22[17;22H[?25h[?25l[34;106H5[18;22H[?25h[?25l[34;106H6,12-19[19;19H[?25h[?25l[34;106H7,15-22[20;22H[?25h[?25l[34;106H8[21;22H[?25h[?25l[34;106H9,1    [22;1H[?25h[?25l[34;105H30,3-17[23;17H[?25h[?25l[34;106H1[24;17H[?25h[?25l[34;106H0[23;17H[?25h[?25l[34;105H29,1   [22;1H[?25h[?25l[34;106H8,15-22[21;22H[?25h[?25l[34;106H7[20;22H[?25h[?25l[34;106H6,12-19[19;19H[?25h[?25l[34;106H5,15-22[18;22H[?25h[?25l[34;106H4[17;22H[?25h[?25l[34;106H5[18;22H[?25h[?25l[34;106H6,12-19[19;19H[?25h[?25l[34;106H7,15-22[20;22H[?25h[?25l[34;106H8[21;22H[?25h[?25l[34;106H9,1    [22;1H[?25h[?25l[34;105H30,3-17[23;17H[?25h[?25l[34;106H1[24;17H[?25h[?25l[34;106H2[25;17H[?25h[?25l[34;106H3[26;17H[?25h[?25l[34;106H4[27;17H[?25h[?25l[26;43H[106m{[28;9H}[m[34;106H5,3-10[28;10H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H36,3-17[7C13%[25;43H{[27;9H}[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H37,1[10C15%[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H38,3-17[7C17%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H39,3-17[7C18%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;105H[K[34;105H40,3-17[7C20%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;105H[K[34;105H41,3-17[7C22%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H42,4-18[7C24%[26;44H[106m{[28;17H}[?25h[?25l[1;33r[m[33;1H
[1;34r[33;25Hcolumn4.push_back(subject);[34;105H[K[34;105H43,3-17[7C25%[25;44H{[27;17H}[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H44,3-17[7C27%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H45,3-17[7C29%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H46,3-17[7C31%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H47,3-17[7C32%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H48,3-17[7C34%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H49,3-17[7C36%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H50,3-17[7C37%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H[38;5;130mif[m(!popularity.empty()){[34;105H[K[34;105H51,3-17[7C39%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[34;105H[K[34;105H52,3-17[7C41%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column8.push_back([31m0[m);}[34;105H[K[34;105H53,3-17[7C43%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H54,3-17[7C44%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;105H[K[34;105H55,3-17[7C46%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H56,3-17[7C48%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H57,3-17[7C50%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[34;105H[K[34;105H58,3-17[7C51%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hsort(column8.begin(), column8.end());[34;105H[K[34;105H59,3-17[7C53%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hvector<[32mint[m> action, comedy;[34;105H[K[34;105H60,3-17[7C55%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;9Hcout<<[31m"The popularity ratings in descending order: "[m<<endl;[34;105H[K[34;105H61,3-17[7C56%[28;17H[?25h[?25l[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[34;105H[K[34;105H62,4-18[7C58%[28;18H[?25h[?25l[1;33r[33;1H
[1;34r[33;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<endl;[34;105H[K[34;105H63,1[10C60%[28;1H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[34;105H[K[34;105H64,15-22      62%[28;22H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Haction.push_back(column1[i]);[34;105H[K[34;105H65,15-22      63%[28;22H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H66,15-22      65%[28;22H[?25h[?25l[1;33r[33;1H
[1;34r[33;17H[38;5;130mif[m(column4[i]==[31m"Comedy"[m){[34;105H[K[34;105H67,15-22      67%[28;22H[?25h[?25l[1;33r[33;1H
[1;34r[33;25Hcomedy.push_back(column1[i]);[34;105H[K[34;105H68,8-22[7C68%[28;22H[?25h[?25l[34;106H7,15-22[27;22H[?25h[?25l[34;109H4-21[27;21H[?25h[?25l[34;106H6[26;21H[?25h[?25l[34;109H3-20[26;20H[?25h[?25l[34;109H2-19[26;19H[?25h[?25l[34;109H1-18[26;18H[?25h[?25l[34;109H0-17[26;17H[?25h[?25l[34;108H9-16 [26;16H[?25h[?25l[34;108H8-15[26;15H[?25h[?25l[34;108H7-14[26;14H[?25h[?25l[34;108H6-13[26;13H[?25h[?25l[34;108H5-12[26;12H[?25h[?25l[34;108H4-11[26;11H[?25h[?25l[34;108H3-10[26;10H[?25h[?25lout<<[31m"The popularity ratings in descending order: "[m<<endl;[26;67H[K[34;108H2-9 [26;9H[?25h[?25l[34;106H5[25;9H[?25h[?25l[34;106H4[24;9H[?25h[?25l[34;106H3,1  [23;1H[?25h[?25l[34;106H2,2-9[22;9H[?25h[?25l[34;106H1[21;9H[?25h[?25l[34;106H0[20;9H[?25h[?25l[34;105H59[19;9H[?25h[?25l[34;106H8[18;9H[?25h[?25l[34;106H7[17;9H[?25h[?25l[34;106H6[16;9H[?25h[?25l[34;106H5[15;9H[?25h[?25l[34;106H4[14;9H[?25h[?25l[34;106H3[13;9H[?25h[?25l[34;106H2[12;9H[?25h[?25l[34;106H1[11;9H[?25h[?25l[34;106H0[10;9H[?25h[?25l[34;105H49[9;9H[?25h[?25l[34;106H8[8;9H[?25h[?25l[34;106H7[7;9H[?25h[?25l[34;106H6[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H45,2-9[8C67%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H44,2-9[8C65%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, length,[31m';'[m);[34;105H[K[34;105H43,2-9[8C63%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H42,2-9[8C62%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130melse[m{column1.push_back([31m0[m); }[34;105H[K[34;105H41,2-9[8C60%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H40,2-9[8C58%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;33Hcolumn1.push_back(stoi(year));[34;105H[K[34;105H39,2-9[8C56%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25H[38;5;130mif[m (!year.empty()){[34;105H[K[34;105H38,2-9[8C55%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H37,1[10C53%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hgetline(infile, year,[31m';'[m);[34;105H[K[34;105H36,2-9[8C51%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;25Hstring year,length,title,subject,actor,actress,director,popularity,awards,image;[34;105H[K[34;105H35,2-9[8C50%[4;43H[106m{[6;9H}[?25h[?25l[1;33r[m[1;1H[L[1;34r[34;105H[K[34;105H34,2-9[8C48%[5;43H{[7;9H}[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mwhile[m(infile.good()){[34;105H[K[34;105H33,2-9[8C46%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mdouble[m average;[34;105H[K[34;105H32,2-9[8C44%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[32mint[m sum=[31m0[m;[34;105H[K[34;105H31,2-9[8C43%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector<string> column3,column4,column5,column6,column7,column10;[34;105H[K[34;105H30,2-9[8C41%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hvector <[32mint[m> column1, column2,column8;[34;105H[K[34;105H29,1[10C39%[6;1H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H28,2-9[8C37%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H27,2-9[8C36%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);[34;105H[K[34;105H26,2-9[8C34%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H}[34;105H[K[34;105H25,2-9[8C32%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hexit([31m1[m);[34;105H[K[34;105H24,2-9[8C31%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;17Hcout << [31m"Error with file"[m;[34;105H[K[34;105H23,2-9[8C29%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9H[38;5;130mif[m(infile.fail()){[34;105H[K[34;105H22,2-9[8C27%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hinfile.open([31m"films.txt"[m);[34;105H[K[34;105H21,2-9[8C25%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;9Hofstream out;[34;105H[K[34;105H20,2-9[8C24%[3;26H[106m{[6;9H}[?25h[?25l[1;33r[m[1;1H[L[1;34r[1;9Hifstream infile;[34;105H[K[34;105H19,2-9[8C22%[4;26H{[7;9H}[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[32mint[m main(){[34;105H[K[34;105H18,2-9[8C20%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H17,2-9[8C18%[6;9H[?25h[?25l[34;106H8[7;9H[?25h[?25l[34;106H9[8;9H[?25h[?25l[34;106H8[7;9H[?25h[?25l[34;106H7[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[38;5;130musing[m [32mnamespace[m std;[34;105H[K[34;105H16,2-9[8C17%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[34;105H[K[34;105H15,2-9[8C15%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<algorithm>[m[34;105H[K[34;105H14,2-9[8C13%[6;9H[?25h[?25l[1;33r[1;1H[L[1;34r[1;1H[35m#include [m[31m<functional>[m[34;105H[K[34;105H13,9[10C12%[6;9H[106m()[?25h[?25l[m()[34;106H4,2-9[7;9H[?25h[?25l[34;106H5[8;9H[?25h[?25l[34;108H3-10[8;10H[?25h[?25l[34;108H4-11[8;11H[?25h[?25l[34;108H5-12[8;12H[?25h[?25l[34;108H6-13[8;13H[?25h[?25l[34;108H7-14[8;14H[?25h[?25l[34;108H8-15[8;15H[?25h[?25l[34;108H9-16[8;16H[?25h[?25l[34;108H10-17[8;17H[?25h[?25l[34;109H1-18[8;18H[?25h[?25l[34;109H2-19[8;19H[?25h[?25l[34;109H3-20[8;20H[?25h[?25l[34;109H4-21[8;21H[?25h[?25l[34;109H5-22[8;22H[?25h[?25l[9;33r[9;1H[L[1;34r[34;105H[K[34;105H16,2-9[8C11%[9;9H[?25h[?25lo[34;108H3-10[9;10H[?25h[?25lu[34;108H4-11[9;11H[?25h[?25lt[34;108H5-12[9;12H[?25h[?25l.[34;108H6-13[9;13H[?25h[?25lo[34;108H7-14[9;14H[?25h[?25lp[34;108H8-15[9;15H[?25h[?25le[34;108H9-16[9;16H[?25h[?25ln[34;108H10-17[9;17H[?25h[?25l([34;109H1-18[9;18H[?25h[?25l)[106m()[m[34;109H2-19[9;19H[?25h[?25l[34;109H1-18[9;18H[?25h[?25l[31m[106m"[m[31m)
        infile.open([m[1Cfilms.txt[1C[31m);
        if(infile.fail()){
                cout << [m[1CError with file[1C[31m;
                exit(1);
        }
        infile.ignore(std::numeric_limits<std::streamsize>::max(),'[2C');
        infile.ignore(std::numeric_limits<std::streamsize>::max(),'[2C');
        
        vector <int> column1, column2,column8;
        vector<string> column3,column4,column5,column6,column7,column10;
        int sum=0;
        double average;
        while(infile.good()){

                        string year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,';');
                        
                        if (!year.empty()){
                                column1.push_back(stoi(year));
        }
                        else{column1.push_back(0); }

                        getline(infile, length,';');
                [9;18H"[m[31m[106m)[m[34;109H2-19[9;19H[?25h[?25l[31m[106m"[m)
        infile.open([1C[31mfilms.txt[m[1C);
        [38;5;130mif[m(infile.fail()){
                cout << [1C[31mError with file[m[1C;
                exit([1C);
        }
        infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);
        infile.ignore(std::numeric_limits<std::streamsize>::max(),[35m'\n'[m);
        
        vector <[32mint[m> column1, column2,column8;
        vector<string> column3,column4,column5,column6,column7,column10;
        [32mint[m sum=[1C;
        [32mdouble[m average;
        [38;5;130mwhile[m(infile.good()){

                        string year,length,title,subject,actor,actress,director,popularity,awards,image;
                        getline(infile, year,[3C);
                        
                        [38;5;130mif[m (!year.empty()){
                                column1.push_back(stoi(year));
        }
                        [38;5;130melse[m{column1.push_back([1C); }

                        getline(infile, length,[3C);
                [9;19H[31m"[m[106m)[m[34;109H3-20[9;20H[?25h[?25l([2C)[34;109H2-19[9;19H[?25h[?25l[31mo"[m)[34;109H3-20[9;20H[?25h[?25l[31mu"[m)[34;109H4-21[9;21H[?25h[?25l[31mt"[m)[34;109H5-22[9;22H[?25h[?25l[31mp"[m)[34;109H6-23[9;23H[?25h[?25l[31mi"[m)[34;109H7-24[9;24H[?25h[?25l[31mt"[m)[34;109H8-25[9;25H[?25h[?25l[31m"[m)[9;26H[K[34;109H7-24[9;24H[?25h[?25l[31m"[m)[9;25H[K[34;109H6-23[9;23H[?25h[?25l[31mu"[m)[34;109H7-24[9;24H[?25h[?25l[31mt"[m)[34;109H8-25[9;25H[?25h[?25l[31m."[m)[34;109H9-26[9;26H[?25h[?25l[31mt"[m)[34;108H20-27[9;27H[?25h[?25l[31mx"[m)[34;109H1-28[9;28H[?25h[?25l[31mt"[m)[34;109H2-29[9;29H[?25h[?25l[31mx"[m)[34;109H3-30[9;30H[?25h[?25l[31m"[m)[9;31H[K[34;109H2-29[9;29H[?25h[?25l[9;17H[106m([12C)[m[34;109H3-30[9;30H[?25h[?25l[34;109H4-31[9;31H[?25h[?25l;[9;17H([12C)[34;109H5-32[9;32H[?25h[34;1H[K[9;31H[?25l[34;95H^[[9;31H[34;95H  [9;32H[34;105H16,24-31      11%[9;31H[?25h[?25l[34;95H:[9;31H[34;95H[K[34;1H:[?2004h[?25hwq[?25l[34;3H[K[34;3H[?25h[?25l[34;2H[K[34;2H[?25h [?25l[9;31H[34;105H16,24-31      11%[9;31H[?25h[?25l[34;95H~@k[9;31H[34;95H   [10;31H[34;106H7[10;31H[?25h[?25l[34;95H~@k[10;31H[34;95H   [11;26H[106m{[14;9H}[m[34;106H8,19-26[11;26H[?25h[?25l[34;95H~@k[11;26H[34;95H   [12;31H[11;26H{[14;9H}[34;106H9,17-31[12;31H[?25h[?25l[34;95H~@k[12;31H[34;95H   [13;24H[34;105H20,10-24[13;24H[?25h[?25l[34;95H~@k[13;24H[34;95H   [14;9H[11;26H[106m{[14;9H}[m[34;106H1,2-9  [14;9H[?25h[?25l[34;95H~@k[14;9H[34;95H   [15;31H[11;26H{[14;9H}[34;106H2,24-31[15;31H[?25h[?25l[34;95H~@k[15;31H[34;95H   [16;31H[34;106H3[16;31H[?25h[?25l[34;95H~@k[16;31H[34;95H   [17;8H[34;106H4,1-8  [17;8H[?25h[?25l[34;95H~@k[17;8H[34;95H   [18;31H[34;106H5,24-31[18;31H[?25h[?25l[34;95H~@k[18;31H[34;95H   [19;31H[34;106H6[19;31H[?25h[?25l[34;95H~@k[19;31H[34;95H   [20;18H[34;106H7,11-18[20;18H[?25h[?25l[34;95H~@k[20;18H[34;95H   [21;23H[34;106H8,16-23[21;23H[?25h[?25l[34;95H~@k[21;23H[34;95H   [22;29H[34;106H9,22-29[22;29H[?25h[?25l[34;95H~@k[22;29H[34;95H   [23;1H[34;105H30,0-1  [23;1H[?25h[?25l[34;95H~@k[23;1H[34;95H   [24;31H[34;106H1,10-31[24;31H[?25h[?25l[34;95H~@k[24;31H[34;95H   [25;31H[34;106H2[25;31H[?25h[?25l[34;95H~@k[25;31H[34;95H   [26;24H[34;106H3,3-24 [26;24H[?25h[?25l[34;95H~@k[26;24H[34;95H   [27;31H[34;106H4,10-31[27;31H[?25h[?25l[34;95H~@k[27;31H[34;95H   [28;32H[34;106H5,4-32 [28;32H[?25h[?25l[34;95H~@k[28;32H[34;95H   [28;9H[1;33r[33;1H
[1;34r[26;43H[106m{[28;9H}[m[33;25H[38;5;130mif[m(!length.empty()){[34;105H[K[34;105H36,2-9[8C13%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;31H[1;33r[33;1H
[1;34r[25;43H{[27;9H}[33;25Hcolumn2.push_back(stoi(length));[34;105H[K[34;105H37,10-31      15%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H38,0-1[8C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column2.push_back([31m0[m);}[34;105H[K[34;105H39,10-31      18%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;16H[1;33r[33;1H
[1;34r[34;105H[K[34;105H40,2-16[7C20%[28;16H[?25h[?25l[34;95H~@k[28;16H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, title,[31m';'[m);[34;105H[K[34;105H41,10-31      22%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hcolumn3.push_back(title);[34;105H[K[34;105H42,10-31      23%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;44H[106m{[28;17H}[m[33;25Hgetline(infile, subject,[31m';'[m);[34;105H[K[34;105H43,3-17[7C25%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;31H[1;33r[33;1H
[1;34r[25;44H{[27;17H}[33;25Hcolumn4.push_back(subject);[34;105H[K[34;105H44,10-31      27%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;24H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actor,[31m';'[m);[34;105H[K[34;105H45,3-24[7C28%[28;24H[?25h[?25l[34;95H~@k[28;24H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hcolumn5.push_back(actor);[34;105H[K[34;105H46,10-31      30%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, actress,[31m';'[m);[34;105H[K[34;105H47,10-31      32%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hcolumn6.push_back(actress);[34;105H[K[34;105H48,10-31      33%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, director,[31m';'[m);[34;105H[K[34;105H49,10-31      35%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hcolumn7.push_back(director);[34;105H[K[34;105H50,10-31      37%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hgetline(infile,popularity,[31m';'[m);[34;105H[K[34;105H51,10-31      38%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25H[38;5;130mif[m(!popularity.empty()){[34;105H[K[34;105H52,10-31      40%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hcolumn8.push_back(-[31m1[m*stoi(popularity));}[34;105H[K[34;105H53,10-31      42%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25H[38;5;130melse[m{column8.push_back([31m0[m);}[34;105H[K[34;105H54,10-31      44%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, awards,[31m';'[m);[34;105H[K[34;105H55,10-31      45%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hgetline(infile, image,[35m'\n'[m);[34;105H[K[34;105H56,10-31      47%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hcolumn10.push_back(image);[34;105H[K[34;105H57,10-31      49%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H58,10-31      50%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[34;105H[K[34;105H59,10-31      52%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;9Hsort(column8.begin(), column8.end());[34;105H[K[34;105H60,10-31      54%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;9Hvector<[32mint[m> action, comedy;[34;105H[K[34;105H61,10-31      55%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;9Hout<<[31m"The popularity ratings in descending order: "[m<<endl;[34;105H[K[34;105H62,10-31      57%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;17H[1;33r[33;1H
[1;34r[33;9H[38;5;130mfor[m([32mint[m i=[31m0[m;i<=column3.size();i++){[34;105H[K[34;105H63,3-17[7C59%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;17Hcout <<-[31m1[m*column8[i]<<[31m" "[m<<endl;[34;105H[K[34;105H64,0-1[8C61%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;17H[38;5;130mif[m(column4[i]==[31m"Action"[m){[34;105H[K[34;105H65,24-31      62%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Haction.push_back(column1[i]);[34;105H[K[34;105H66,24-31      64%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H67,24-31      66%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;17H[38;5;130mif[m(column4[i]==[31m"Comedy"[m){[34;105H[K[34;105H68,24-31      67%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;25Hcomedy.push_back(column1[i]);[34;105H[K[34;105H69,17-31      69%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;17H}[34;105H[K[34;105H70,17-31      71%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;9H}[34;105H[K[34;105H71,10-31      72%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;41H[106m{[28;17H}[m[33;9Hsort(action.begin(),action.end());[34;105H[K[34;105H72,3-17[7C74%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;31H[1;33r[33;1H
[1;34r[25;41H{[27;17H}[33;9Hsort(comedy.begin(),comedy.end());[34;105H[K[34;105H73,17-31      76%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;9H[38;5;130mif[m(equal(comedy.begin(),comedy.end(), action.begin())){[34;105H[K[34;105H74,10-31      77%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;17H[1;33r[33;1H
[1;34r[26;41H[106m{[28;17H}[m[33;17Hcout<< [31m"The two lists Action and Comedy are equal"[m<<endl;[34;105H[K[34;105H75,3-17[7C79%[28;17H[?25h[?25l[34;95H~@k[28;17H[34;95H   [28;9H[1;33r[33;1H
[1;34r[20;43H[106m{[m[25;41H{[27;17H}[28;9H[106m}[m[33;9H}[34;105H[K[34;105H76,2-9[8C81%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;31H[1;33r[33;1H
[1;34r[19;43H{[27;9H}[33;9H[38;5;130melse[m{[34;105H[K[34;105H77,24-31      83%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;17Hcout<<[31m"The two lists Action and Comedy are not equal"[m<<endl;[34;105H[K[34;105H78,24-31      84%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[28;30H[106m()[m[33;9H}[34;105H[K[34;105H79,24-31      86%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[27;30H()[34;105H[K[34;105H80,17-31      88%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;9H[1;33r[33;1H
[1;34r[26;63H[106m{[28;9H}[m[33;9H[32mint[m x= accumulate(column1.begin(),column1.end(),[31m0[m);[34;105H[K[34;105H81,2-9[8C89%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;13H[1;33r[33;1H
[1;34r[25;63H{[27;9H}[28;13H[106m{[30;9H}[m[33;9Hcout<<[31m"The total runtime of all movies is : "[m <<x<<endl;[34;105H[K[34;105H82,6-13[7C91%[28;13H[?25h[?25l[34;95H~@k[28;13H[34;95H   [28;31H[1;33r[33;1H
[1;34r[27;13H{[29;9H}[33;9Hvector<string>::iterator it=find(column7.begin(),column7.end(),[31m"Scorsese, Martin"[m);[34;105H[K[34;105H83,17-31      93%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;9H[1;33r[33;1H
[1;34r[26;13H[106m{[28;9H}[m[33;9Hcout<<[31m"Finding the first instance of: "[m<< *it<<endl;[34;105H[K[34;105H84,2-9[8C94%[28;9H[?25h[?25l[34;95H~@k[28;9H[34;95H   [28;8H[1;33r[33;1H
[1;34r[25;13H{[27;9H}[34;105H[K[34;105H85,1-8[8C96%[28;8H[?25h[?25l[34;95H~@k[28;8H[34;95H   [28;31H[1;33r[33;1H
[1;34r[33;1H}[34;105H[K[34;105H86,24-31      98%[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [28;31H[1;33r[33;1H
[1;34r[34;105H[K[34;105H87,24-31      Bot[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [29;31H[34;106H8[29;31H[?25h[?25l[34;95H~@k[29;31H[34;95H   [30;31H[34;106H9[30;31H[?25h[?25l[34;95H~@k[30;31H[34;95H   [29;31H[34;106H8[29;31H[?25h[?25l[34;95H~@k[29;31H[34;95H   [28;31H[34;106H7[28;31H[?25h[?25l[34;95H~@k[28;31H[34;95H   [27;31H[34;106H6[27;31H[?25h[?25l[34;95H~@k[27;31H[34;95H   [26;8H[34;106H5,1-8  [26;8H[?25h[?25l[34;95H~@k[26;8H[34;95H   [25;9H[23;13H[106m{[25;9H}[m[34;106H4,2-9[25;9H[?25h[?25l[34;95H~@k[25;9H[34;95H   [24;31H[23;13H{[25;9H}[34;106H3,17-31[24;31H[?25h[?25l[34;95H~@k[24;31H[34;95H   [23;13H[106m{[25;9H}[m[34;106H2,6-13 [23;13H[?25h[?25l[34;95H~@k[23;13H[34;95H   [22;9H[20;63H[106m{[22;9H}[m[23;13H{[25;9H}[34;106H1,2-9 [22;9H[?25h[?25l[34;95H~@k[22;9H[34;95H   [21;31H[20;63H{[22;9H}[34;106H0,17-31[21;31H[?25h[?25l[34;95H~@k[21;31H[34;95H   [20;31H[106m()[m[34;105H79,24[20;31H[?25h[?25l[34;95H~@k[20;31H[34;95H   [19;31H[20;30H()[34;106H8[19;31H[?25h[?25l[34;95H~@k[19;31H[34;95H   [18;31H[34;106H7[18;31H[?25h[?25l[34;95H~@k[18;31H[34;95H   [17;9H[9;43H[106m{[17;9H}[m[34;106H6,2-9  [17;9H[?25h[?25l[34;95H~@k[17;9H[34;95H   [16;17H[9;43H{[14;41H[106m{[16;17H}[m[17;9H}[34;106H5,3-17[16;17H[?25h[?25l[34;95H~@k[16;17H[34;95H   [15;31H[14;41H{[16;17H}[34;106H4,10-31[15;31H[?25h[?25l[34;95H~@k[15;31H[34;95H   [14;31H[34;106H3,17[14;31H[?25h[?25l[34;95H~@k[14;31H[34;95H   [13;17H[11;41H[106m{[13;17H}[m[34;106H2,3-17 [13;17H[?25h[?25l[34;95H~@k[13;17H[34;95H   [12;31H[11;41H{[13;17H}[34;106H1,10-31[12;31H[?25h[?25l[34;95H~@k[12;31H[34;95H   [11;31H[34;106H0,17[11;31H[?25h[?25l[34;95H~@k[11;31H[34;95H   [10;31H[34;105H69[10;31H[?25h[?25l[34;95H~@k[10;31H[34;95H   [10;30H[34;109H6-30[10;30H[?25h[?25l[34;95H~@k[10;30H[34;95H   [10;29H[34;109H5-29[10;29H[?25h[?25l[34;95H~@k[10;29H[34;95H   [10;28H[34;109H4-28[10;28H[?25h[?25l[34;95H~@k[10;28H[34;95H   [10;27H[34;109H3-27[10;27H[?25h[?25l[34;95H~@k[10;27H[34;95H   [10;26H[34;109H2-26[10;26H[?25h[?25l[34;95H~@k[10;26H[34;95H   [10;25H[34;109H1-25[10;25H[?25h[?25l[34;95H~@k[10;25H[34;95H   [10;24H[34;109H0-24[10;24H[?25h[?25l[34;95H~@k[10;24H[34;95H   [10;23H[34;108H9-23 [10;23H[?25h[?25l[34;95H~@k[10;23H[34;95H   [10;22H[34;108H8-22[10;22H[?25h[?25l[34;95H~@k[10;22H[34;95H   [10;21H[34;108H7-21[10;21H[?25h[?25l[34;95H~@k[10;21H[34;95H   [10;20H[34;108H6-20[10;20H[?25h[?25l[34;95H~@k[10;20H[34;95H   [10;19H[34;108H5-19[10;19H[?25h[?25l[34;95Hi[10;19H[34;95H [10;19H[34;1H[1m-- INSERT --[m[34;105H[K[34;105H69,5-19[7CBot[10;19H[?25h[?25l[34;108H4-18[10;18H[?25h[?25lout <<-[31m1[m*column8[i]<<[31m" "[m<<endl;[10;48H[K[34;108H3-17[10;17H[?25h[?25l[34;105H70[11;17H[?25h[?25l[34;106H1[12;17H[?25h[?25l[11;41H[106m{[13;17H}[m[34;106H2[13;17H[?25h[?25l[11;41H{[13;17H}[34;106H3[14;17H[?25h[?25l[34;106H4[15;17H[?25h[?25l[14;41H[106m{[16;17H}[m[34;106H5[16;17H[?25h[?25l[9;43H[106m{[m[14;41H{[16;17H}[17;9H[106m}[m[34;106H6,3-10[17;10H[?25h[?25l[9;43H{[17;9H}[34;106H7,10-17[18;17H[?25h[?25l[34;106H8[19;17H[?25h[?25l[20;17H[106m([43C)[m[34;106H9[20;17H[?25h[?25l([43C)[34;105H80,3-17 [21;17H[?25h[?25l[34;108H4-18[21;18H[?25h[?25lout<< [31m"The two lists Action and Comedy are equal"[m<<endl;[21;73H[K[34;108H3-17[21;17H[?25h[?25l[20;63H[106m{[22;9H}[m[34;106H1,3-10[22;10H[?25h[?25l[20;63H{[22;9H}[23;13H[106m{[25;9H}[m[34;106H2,7-14[23;14H[?25h[?25l{[25;9H}[34;106H3,3-17[24;17H[?25h[?25l[34;108H4-18[24;18H[?25h[?25lout<<[31m"The two lists Action and Comedy are not equal"[m<<endl;[24;76H[K[34;108H3-17[24;17H[?25h[?25l[23;13H[106m{[25;9H}[m[34;106H4,3-10[25;10H[?25h[?25l[23;13H{[25;9H}[34;106H5,2-9 [26;9H[?25h[?25l[34;106H6,10-17[27;17H[?25h[?25l[34;106H7[28;17H[?25h[?25l[34;108H9-16 [28;16H[?25h[?25l[34;108H8-15[28;15H[?25h[?25l[34;108H7-14[28;14H[?25h[?25l[34;108H6-13[28;13H[?25h[?25l[34;108H5-12[28;12H[?25h[?25l[34;108H4-11[28;11H[?25h[?25l[34;108H3-10[28;10H[?25h[?25lout<<[31m"The total runtime of all movies is : "[m <<x<<endl;[28;64H[K[34;108H2-9 [28;9H[?25h[?25l[34;106H8[29;9H[?25h[?25l[34;106H9[30;9H[?25h[?25l[34;108H3-10[30;10H[?25h[?25lout<<[31m"Finding the first instance of: "[m<< *it<<endl;[30;60H[K[34;108H2-9 [30;9H[?25h[34;1H[K[30;8H[?25l[34;95H^[[30;8H[34;95H  [30;9H[34;105H89,1-8[8CBot[30;8H[?25h[?25l[34;95H:[30;8H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"Tasks.cpp" 92L, 2381C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks[20Pvim Tasks.cppg++ Tasks.cpp -o Tasks && ./Tasks
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ g++ Tasks.cpp -o Tasks && ./Tasks[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kls
[0m[01;32mTasks[0m  Tasks.cpp  films.txt  output.txt
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ vim output.txt 
[?1049h[22;0;0t[>4;2m[?1h=[?2004h[1;34r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[34;1H"output.txt" 1665L, 6552C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1HThe popularity ratings in descending order:
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
88
87
87
87
87
87
87
87[34;105H1,1[11CTop[1;1H[?25h[?25l[34;95H~@k[1;1H[34;95H   [2;1H[34;105H2[2;1H[?25h[?25l[34;95H~@k[2;1H[34;95H   [3;1H[34;105H3[3;1H[?25h[?25l[34;95H~@k[3;1H[34;95H   [4;1H[34;105H4[4;1H[?25h[?25l[34;95H~@k[4;1H[34;95H   [5;1H[34;105H5[5;1H[?25h[?25l[34;95H~@k[5;1H[34;95H   [6;1H[34;105H6[6;1H[?25h[?25l[34;95H~@k[6;1H[34;95H   [7;1H[34;105H7[7;1H[?25h[?25l[34;95H~@k[7;1H[34;95H   [8;1H[34;105H8[8;1H[?25h[?25l[34;95H~@k[8;1H[34;95H   [9;1H[34;105H9[9;1H[?25h[?25l[34;95H~@k[9;1H[34;95H   [10;1H[34;105H10,1[10;1H[?25h[?25l[34;95H~@k[10;1H[34;95H   [11;1H[34;106H1[11;1H[?25h[?25l[34;95H~@k[11;1H[34;95H   [12;1H[34;106H2[12;1H[?25h[?25l[34;95H~@k[12;1H[34;95H   [13;1H[34;106H3[13;1H[?25h[?25l[34;95H~@k[13;1H[34;95H   [14;1H[34;106H4[14;1H[?25h[?25l[34;95H~@k[14;1H[34;95H   [15;1H[34;106H5[15;1H[?25h[?25l[34;95H~@k[15;1H[34;95H   [16;1H[34;106H6[16;1H[?25h[?25l[34;95H~@k[16;1H[34;95H   [17;1H[34;106H7[17;1H[?25h[?25l[34;95H~@k[17;1H[34;95H   [18;1H[34;106H8[18;1H[?25h[?25l[34;95H~@k[18;1H[34;95H   [19;1H[34;106H9[19;1H[?25h[?25l[34;95H~@k[19;1H[34;95H   [20;1H[34;105H20[20;1H[?25h[?25l[34;95H~@k[20;1H[34;95H   [21;1H[34;106H1[21;1H[?25h[?25l[34;95H~@k[21;1H[34;95H   [22;1H[34;106H2[22;1H[?25h[?25l[34;95H~@k[22;1H[34;95H   [23;1H[34;106H3[23;1H[?25h[?25l[34;95H~@k[23;1H[34;95H   [24;1H[34;106H4[24;1H[?25h[?25l[34;95H~@k[24;1H[34;95H   [25;1H[34;106H5[25;1H[?25h[?25l[34;95H~@k[25;1H[34;95H   [26;1H[34;106H6[26;1H[?25h[?25l[34;95H~@k[26;1H[34;95H   [27;1H[34;106H7[27;1H[?25h[?25l[34;95H~@k[27;1H[34;95H   [28;1H[34;106H8[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H87[34;1H[K[34;105H29,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H87[34;105H[K[34;105H30,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H87[34;105H[K[34;105H31,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H87[34;105H[K[34;105H32,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H87[34;105H[K[34;105H33,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H87[34;105H[K[34;105H34,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H87[34;105H[K[34;105H35,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H36,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H37,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H38,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H39,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H40,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H41,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H42,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H43,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H44,1[11C0%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H45,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H46,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H47,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H86[34;105H[K[34;105H48,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H49,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H50,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H51,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H52,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H53,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H54,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H55,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H56,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H57,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H58,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H59,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H85[34;105H[K[34;105H60,1[11C1%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H61,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H62,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H63,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H64,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H65,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H66,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H67,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H68,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H69,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H70,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H71,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H72,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H73,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H74,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H75,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H76,1[11C2%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H77,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H78,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H79,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H80,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H84[34;105H[K[34;105H81,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H82,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H83,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H84,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H85,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H86,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H87,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H88,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H89,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H90,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H91,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H92,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H93,1[11C3%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H94,1[11C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H95,1[11C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H96,1[11C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H97,1[11C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H98,1[11C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H99,1[11C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H100,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H83[34;105H[K[34;105H101,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H102,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H103,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H104,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H105,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H106,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H107,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H108,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H109,1[10C4%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H110,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H111,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H112,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H113,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H114,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H115,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H116,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H117,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H118,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H119,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H120,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H121,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H82[34;105H[K[34;105H122,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H123,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H124,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H125,1[10C5%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H126,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H127,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H128,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H129,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H130,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H131,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H132,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H133,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H134,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H135,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H136,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H137,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H138,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H139,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H140,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H81[34;105H[K[34;105H141,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H142,1[10C6%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H143,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H144,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H145,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H146,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H147,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H148,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H149,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H150,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H151,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H152,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H153,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H154,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H155,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H156,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H157,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H158,1[10C7%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H159,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H160,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H161,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H162,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H163,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H80[34;105H[K[34;105H164,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H165,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H166,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H167,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H168,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H169,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H170,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H171,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H172,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H173,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H174,1[10C8%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H175,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H176,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H177,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H178,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H179,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H180,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H181,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H182,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H183,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H79[34;105H[K[34;105H184,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H185,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H186,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H187,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H188,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H189,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H190,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H191,1[10C9%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H192,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H193,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H194,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H195,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H196,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H197,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H198,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H199,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H78[34;105H[K[34;105H200,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H201,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H202,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H203,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H204,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H205,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H206,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H207,1[9C10%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H208,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H209,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H210,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H211,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H212,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H213,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H214,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H215,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H77[34;105H[K[34;105H216,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H217,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H218,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H219,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H220,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H221,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H222,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H223,1[9C11%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H224,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H225,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H226,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H227,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H228,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H229,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H230,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H231,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H76[34;105H[K[34;105H232,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H233,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H234,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H235,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H236,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H237,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H238,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H239,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H240,1[9C12%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H241,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H242,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H243,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H244,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H245,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H246,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H247,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H248,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H249,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H250,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H251,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H252,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H253,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H254,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H255,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H256,1[9C13%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H257,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H258,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H259,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H75[34;105H[K[34;105H260,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H261,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H262,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H263,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H264,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H265,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H266,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H267,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H268,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H269,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H270,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H271,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H272,1[9C14%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H273,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H274,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H275,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H276,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H74[34;105H[K[34;105H277,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H278,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H279,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H280,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H281,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H282,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H283,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H284,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H285,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H286,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H287,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H288,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H289,1[9C15%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H290,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H291,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H292,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H293,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H294,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H295,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H73[34;105H[K[34;105H296,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H297,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H298,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H299,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H300,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H301,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H302,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H303,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H304,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H305,1[9C16%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H306,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H307,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H308,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H309,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H310,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H311,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H312,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H313,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H314,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H315,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H316,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H317,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H72[34;105H[K[34;105H318,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H319,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H320,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H321,1[9C17%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H322,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H323,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H324,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H325,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H326,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H327,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H328,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H329,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H330,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H331,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H332,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H333,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H334,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H335,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H336,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H337,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H338,1[9C18%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H71[34;105H[K[34;105H339,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H340,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H341,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H342,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H343,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H344,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H345,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H346,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H347,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H348,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H349,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H350,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H351,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H352,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H353,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H354,1[9C19%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H355,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H356,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H357,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H70[34;105H[K[34;105H358,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H359,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H360,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H361,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H362,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H363,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H364,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H365,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H366,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H367,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H368,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H369,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H370,1[9C20%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H371,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H372,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H373,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H374,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H375,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H376,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H377,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H69[34;105H[K[34;105H378,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H68[34;105H[K[34;105H379,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H68[34;105H[K[34;105H380,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H68[34;105H[K[34;105H381,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H68[34;105H[K[34;105H382,1[9C21%[28;1H[?25h[?25l[34;95H~@k[28;1H[34;95H   [28;1H[1;33r[33;1H
[1;34r[33;1H68[34;105H[K[34;105H383,1[9C21%[28;1H[?25h[?25l[34;95H^[[28;1H[34;95H  [28;1H[34;95H^[[28;1H[34;95H  [28;1H[?25h[?25l[34;95H:[28;1H[34;95H[K[34;1H:[?2004h[?25hwq![?25l[?2004l"output.txt" 1665L, 6552C written[23;2t[23;1t
[?2004l[?1l>[?25h[>4;m[?1049l[23;0;0t]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142/Ex-10[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142/Ex-10[00m$ cd ..
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142[00m$ git add Ex-10 scro[K[K[K[K[K
]0;sami@DESKTOP-SAMI: ~/3142C++/cisc3142[01;32msami@DESKTOP-SAMI[00m:[01;34m~/3142C++/cisc3142[00m$ gti [K[K[Kit a[K[K[K[K[Kls
 [0m[01;32mConstructors[0m   [01;32mExercise1-11[0m         [01;32mPrime_Numbers[0m           script-2022-10-19.log         time-2022-11-09.txt
 [01;34mEx-1[0m           [01;32mExercise1-11-2[0m       README.md               script-2022-11-09.log         time-2022-11-24.txt
 [01;34mEx-10[0m          Exercise1-11-2.cpp   [01;32mRectangle[0m               script-2022-11-24.log         time-2022-11-27.txt
 [01;34mEx-2[0m           Exercise1-11.cpp     [01;32mSum_of_Digits[0m           script-2022-11-27.log         time-2022-12-02.txt
 [01;34mEx-3[0m           [01;32mExercise1-5[0m          [01;32mTasks[0m                   script-2022-12-02.log         time-F.txt
 [01;34mEx-4[0m           Exercise1-5.cpp      list.txt                script-linux-2022-09-21.log   w
 [01;34mEx-5[0m           [01;32mHW1[0m                  makefile                time-2022-09-21.txt
 [01;34mEx-7[0m          'HW1 Task One.txt'    script-2022-09-07.log   time-2022-10-14.txt
 [01;34mEx-9[0m           [01;32mLinear_R